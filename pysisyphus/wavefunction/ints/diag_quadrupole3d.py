"""
Molecular integrals over Gaussian basis functions generated by sympleints.
See https://github.com/eljost/sympleints for more information.

sympleints version: 0.1.dev47+gf2d2a9c.d20230308
symppy version: 1.10.1

sympleints was executed with the following arguments:
	lmax = 4
	lauxmax = 6
	write = False
	out_dir = regen
	keys = ['ovlp', 'kin', 'dpm', 'qpm', 'dqpm']
	sph = False
	norm_pgto = True
	opt_basic = False
"""


import numpy


def diag_quadrupole3d_00(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ss) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 1), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = ax * bx * x0
    x2 = numpy.exp(-x1 * (A[1] - B[1]) ** 2)
    x3 = numpy.exp(-x1 * (A[0] - B[0]) ** 2)
    x4 = 1.772453850905516 * numpy.sqrt(x0)
    x5 = x3 * x4
    x6 = 0.5 / (ax + bx)
    x7 = numpy.exp(-x1 * (A[2] - B[2]) ** 2)
    x8 = 0.5641895835477563
    x9 = numpy.sqrt(ax**1.5)
    x10 = numpy.sqrt(bx**1.5)
    x11 = 2.828427124746191 * da * db * x0 * x10 * x7 * x8 * x9
    x12 = x2 * x4
    x13 = x4 * x7

    # 3 item(s)
    result[0, 0, 0] = numpy.sum(
        x11 * x2 * x5 * (x6 + (-x0 * (ax * A[0] + bx * B[0]) + R[0]) ** 2)
    )
    result[1, 0, 0] = numpy.sum(
        x11 * x12 * x3 * (x6 + (-x0 * (ax * A[1] + bx * B[1]) + R[1]) ** 2)
    )
    result[2, 0, 0] = numpy.sum(
        2.828427124746191
        * da
        * db
        * x0
        * x10
        * x13
        * x2
        * x3
        * x8
        * x9
        * (x6 + (-x0 * (ax * A[2] + bx * B[2]) + R[2]) ** 2)
    )
    return result


def diag_quadrupole3d_01(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sp) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 3), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = 1.772453850905516 * numpy.sqrt(x1)
    x3 = -x1 * (ax * A[0] + bx * B[0])
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = -x5 * (x3 + B[0])
    x7 = x2 * x6
    x8 = -x3 - R[0]
    x9 = x2 * x5
    x10 = x0 * x9
    x11 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x12 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x13 = 0.5641895835477563
    x14 = numpy.sqrt(ax**1.5)
    x15 = numpy.sqrt(bx**2.5)
    x16 = 5.656854249492381 * da * db * x1 * x12 * x13 * x14 * x15
    x17 = x11 * x16
    x18 = -x1 * (ax * A[1] + bx * B[1])
    x19 = -x18 - B[1]
    x20 = x17 * (x10 + x8**2 * x9)
    x21 = -x1 * (ax * A[2] + bx * B[2])
    x22 = -x21 - B[2]
    x23 = -x18 - R[1]
    x24 = x11 * x2
    x25 = x0 * x24
    x26 = x23**2 * x24 + x25
    x27 = x19 * x24
    x28 = x16 * x5
    x29 = -x21 - R[2]
    x30 = x12 * x2
    x31 = x0 * x30
    x32 = x29**2 * x30 + x31
    x33 = 5.656854249492381 * da * db * x1 * x11 * x13 * x14 * x15
    x34 = x33 * x5
    x35 = x22 * x30

    # 9 item(s)
    result[0, 0, 0] = numpy.sum(x17 * (x0 * (x7 + x8 * x9) + x8 * (x10 + x7 * x8)))
    result[0, 0, 1] = numpy.sum(x19 * x20)
    result[0, 0, 2] = numpy.sum(x20 * x22)
    result[1, 0, 0] = numpy.sum(x16 * x26 * x6)
    result[1, 0, 1] = numpy.sum(x28 * (x0 * (x23 * x24 + x27) + x23 * (x23 * x27 + x25)))
    result[1, 0, 2] = numpy.sum(x22 * x26 * x28)
    result[2, 0, 0] = numpy.sum(x32 * x33 * x6)
    result[2, 0, 1] = numpy.sum(x19 * x32 * x34)
    result[2, 0, 2] = numpy.sum(x34 * (x0 * (x29 * x30 + x35) + x29 * (x29 * x35 + x31)))
    return result


def diag_quadrupole3d_02(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sd) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 6), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - R[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3**2 * x8
    x10 = x0 * x8
    x11 = -x2 - B[0]
    x12 = x11 * x8
    x13 = x12 * x3
    x14 = x0 * (x12 + x3 * x8) + x3 * (x10 + x13)
    x15 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x16 = numpy.sqrt(ax**1.5)
    x17 = numpy.sqrt(bx**3.5)
    x18 = 6.531972647421809 * da * db * x16 * x17
    x19 = x15 * x18
    x20 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x21 = 0.5641895835477563 * x1
    x22 = x20 * x21
    x23 = -x1 * (ax * A[1] + bx * B[1])
    x24 = -x23 - B[1]
    x25 = 11.31370849898476 * da * db * x16 * x17
    x26 = x15 * x25
    x27 = x14 * x22 * x26
    x28 = -x1 * (ax * A[2] + bx * B[2])
    x29 = -x28 - B[2]
    x30 = x20 * x7
    x31 = x0 * x30
    x32 = x24**2 * x30 + x31
    x33 = x10 + x9
    x34 = 0.3183098861837907 * x6
    x35 = x33 * x34
    x36 = x26 * x29
    x37 = x15 * x7
    x38 = x0 * x37
    x39 = x18 * (x29**2 * x37 + x38)
    x40 = x10 + x11**2 * x8
    x41 = -x23 - R[1]
    x42 = x30 * x41**2
    x43 = x31 + x42
    x44 = x34 * x43
    x45 = x24 * x30
    x46 = x41 * x45
    x47 = x0 * (x30 * x41 + x45) + x41 * (x31 + x46)
    x48 = x21 * x5
    x49 = x26 * x47 * x48
    x50 = -x28 - R[2]
    x51 = x37 * x50**2
    x52 = x38 + x51
    x53 = x18 * x34 * x52
    x54 = x22 * x5
    x55 = x29 * x37
    x56 = x50 * x55
    x57 = x0 * (x37 * x50 + x55) + x50 * (x38 + x56)
    x58 = x25 * x54 * x57

    # 18 item(s)
    result[0, 0, 0] = numpy.sum(
        x19 * x22 * (x0 * (3.0 * x10 + 2.0 * x13 + x9) + x11 * x14)
    )
    result[0, 0, 1] = numpy.sum(x24 * x27)
    result[0, 0, 2] = numpy.sum(x27 * x29)
    result[0, 0, 3] = numpy.sum(x19 * x32 * x35)
    result[0, 0, 4] = numpy.sum(x22 * x24 * x33 * x36)
    result[0, 0, 5] = numpy.sum(x20 * x35 * x39)
    result[1, 0, 0] = numpy.sum(x19 * x40 * x44)
    result[1, 0, 1] = numpy.sum(x11 * x49)
    result[1, 0, 2] = numpy.sum(x11 * x36 * x43 * x48)
    result[1, 0, 3] = numpy.sum(
        x19 * x48 * (x0 * (3.0 * x31 + x42 + 2.0 * x46) + x24 * x47)
    )
    result[1, 0, 4] = numpy.sum(x29 * x49)
    result[1, 0, 5] = numpy.sum(x39 * x44 * x5)
    result[2, 0, 0] = numpy.sum(x20 * x40 * x53)
    result[2, 0, 1] = numpy.sum(x11 * x24 * x25 * x52 * x54)
    result[2, 0, 2] = numpy.sum(x11 * x58)
    result[2, 0, 3] = numpy.sum(x32 * x5 * x53)
    result[2, 0, 4] = numpy.sum(x24 * x58)
    result[2, 0, 5] = numpy.sum(
        x18 * x54 * (x0 * (3.0 * x38 + x51 + 2.0 * x56) + x29 * x57)
    )
    return result


def diag_quadrupole3d_03(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sf) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 10), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = ax * bx * x1
    x3 = numpy.exp(-x2 * (A[0] - B[0]) ** 2)
    x4 = numpy.sqrt(x1)
    x5 = 1.772453850905516 * x4
    x6 = x3 * x5
    x7 = x0 * x6
    x8 = -x1 * (ax * A[0] + bx * B[0])
    x9 = -x8 - R[0]
    x10 = -x8 - B[0]
    x11 = x10 * x6
    x12 = x11 * x9 + x7
    x13 = 2.0 * x10
    x14 = x12 * x9
    x15 = x6 * x9
    x16 = x0 * (x11 + x15)
    x17 = x6 * x9**2
    x18 = x14 + x16
    x19 = x0 * (x13 * x15 + x17 + 3.0 * x7) + x10 * x18
    x20 = numpy.exp(-x2 * (A[2] - B[2]) ** 2)
    x21 = da * db * numpy.sqrt(ax**1.5) * numpy.sqrt(bx**4.5)
    x22 = x20 * x21
    x23 = 5.842373946721772 * x22
    x24 = numpy.exp(-x2 * (A[1] - B[1]) ** 2)
    x25 = 0.5641895835477563 * x1
    x26 = x24 * x25
    x27 = -x1 * (ax * A[1] + bx * B[1])
    x28 = -x27 - B[1]
    x29 = x26 * x28
    x30 = 13.06394529484362 * x22
    x31 = x19 * x30
    x32 = -x1 * (ax * A[2] + bx * B[2])
    x33 = -x32 - B[2]
    x34 = 0.3183098861837907 * x4
    x35 = x18 * x34
    x36 = x24 * x5
    x37 = x0 * x36
    x38 = x28**2 * x36 + x37
    x39 = x30 * x38
    x40 = 22.62741699796953 * x22 * x33
    x41 = x21 * x24
    x42 = x20 * x5
    x43 = x0 * x42
    x44 = x33**2 * x42 + x43
    x45 = 13.06394529484362 * x44
    x46 = x41 * x45
    x47 = 2.0 * x28
    x48 = x28 * x38 + x37 * x47
    x49 = x34 * (x17 + x7)
    x50 = 2.0 * x33
    x51 = 5.842373946721772 * x33 * x44 + 5.842373946721772 * x43 * x50
    x52 = x10**2 * x6 + x7
    x53 = x10 * x52 + x13 * x7
    x54 = -x27 - R[1]
    x55 = x36 * x54**2
    x56 = x34 * (x37 + x55)
    x57 = x28 * x36
    x58 = x36 * x54
    x59 = x0 * (x57 + x58)
    x60 = x37 + x54 * x57
    x61 = x54 * x60
    x62 = x59 + x61
    x63 = x34 * x62
    x64 = x30 * x52
    x65 = x25 * x3
    x66 = x10 * x65
    x67 = x0 * (3.0 * x37 + x47 * x58 + x55) + x28 * x62
    x68 = x30 * x67
    x69 = x21 * x3
    x70 = x45 * x69
    x71 = x34 * x41
    x72 = -x32 - R[2]
    x73 = x42 * x72**2
    x74 = x43 + x73
    x75 = 5.842373946721772 * x74
    x76 = x52 * x71
    x77 = 13.06394529484362 * x74
    x78 = x33 * x42
    x79 = x42 * x72
    x80 = x0 * (x78 + x79)
    x81 = x43 + x72 * x78
    x82 = x72 * x81
    x83 = x80 + x82
    x84 = 13.06394529484362 * x83
    x85 = x34 * x69
    x86 = x38 * x85
    x87 = x26 * x69
    x88 = x10 * x87
    x89 = x0 * (3.0 * x43 + x50 * x79 + x73) + x33 * x83
    x90 = 13.06394529484362 * x89

    # 30 item(s)
    result[0, 0, 0] = numpy.sum(
        x23 * x26 * (x0 * (x12 * x13 + 2.0 * x14 + 4.0 * x16) + x10 * x19)
    )
    result[0, 0, 1] = numpy.sum(x29 * x31)
    result[0, 0, 2] = numpy.sum(x26 * x31 * x33)
    result[0, 0, 3] = numpy.sum(x35 * x39)
    result[0, 0, 4] = numpy.sum(x18 * x29 * x40)
    result[0, 0, 5] = numpy.sum(x35 * x46)
    result[0, 0, 6] = numpy.sum(x23 * x48 * x49)
    result[0, 0, 7] = numpy.sum(x33 * x39 * x49)
    result[0, 0, 8] = numpy.sum(x28 * x46 * x49)
    result[0, 0, 9] = numpy.sum(x41 * x49 * x51)
    result[1, 0, 0] = numpy.sum(x23 * x53 * x56)
    result[1, 0, 1] = numpy.sum(x63 * x64)
    result[1, 0, 2] = numpy.sum(x33 * x56 * x64)
    result[1, 0, 3] = numpy.sum(x66 * x68)
    result[1, 0, 4] = numpy.sum(x40 * x62 * x66)
    result[1, 0, 5] = numpy.sum(x10 * x56 * x70)
    result[1, 0, 6] = numpy.sum(
        x23 * x65 * (x0 * (x47 * x60 + 4.0 * x59 + 2.0 * x61) + x28 * x67)
    )
    result[1, 0, 7] = numpy.sum(x33 * x65 * x68)
    result[1, 0, 8] = numpy.sum(x63 * x70)
    result[1, 0, 9] = numpy.sum(x51 * x56 * x69)
    result[2, 0, 0] = numpy.sum(x53 * x71 * x75)
    result[2, 0, 1] = numpy.sum(x28 * x76 * x77)
    result[2, 0, 2] = numpy.sum(x76 * x84)
    result[2, 0, 3] = numpy.sum(x10 * x77 * x86)
    result[2, 0, 4] = numpy.sum(22.62741699796953 * x28 * x83 * x88)
    result[2, 0, 5] = numpy.sum(x88 * x90)
    result[2, 0, 6] = numpy.sum(x48 * x75 * x85)
    result[2, 0, 7] = numpy.sum(x84 * x86)
    result[2, 0, 8] = numpy.sum(x28 * x87 * x90)
    result[2, 0, 9] = numpy.sum(
        5.842373946721772 * x87 * (x0 * (x50 * x81 + 4.0 * x80 + 2.0 * x82) + x33 * x89)
    )
    return result


def diag_quadrupole3d_04(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sg) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3**2 * x8
    x10 = x0 * x8
    x11 = 3.0 * x10
    x12 = 2.0 * x3
    x13 = -x2 - R[0]
    x14 = x13 * x8
    x15 = x11 + x12 * x14
    x16 = 2.0 * x0
    x17 = x3 * x8
    x18 = x0 * (x14 + x17)
    x19 = x10 + x13 * x17
    x20 = x19 * x3
    x21 = x13**2 * x8
    x22 = x0 * (x15 + x21)
    x23 = x13 * x19
    x24 = x18 + x23
    x25 = x24 * x3
    x26 = x22 + x25
    x27 = 2.0 * x0 * (2.0 * x18 + x20 + x23) + x26 * x3
    x28 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x29 = 4.416419579791068 * x28
    x30 = 0.5641895835477563
    x31 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x32 = da * db * numpy.sqrt(ax**1.5) * numpy.sqrt(bx**5.5)
    x33 = x31 * x32
    x34 = x1 * x30 * x33
    x35 = -x1 * (ax * A[1] + bx * B[1])
    x36 = -x35 - B[1]
    x37 = 11.68474789344354 * x36
    x38 = x28 * x37
    x39 = x27 * x34
    x40 = -x1 * (ax * A[2] + bx * B[2])
    x41 = -x40 - B[2]
    x42 = 11.68474789344354 * x41
    x43 = x28 * x7
    x44 = x36**2 * x43
    x45 = x0 * x43
    x46 = x44 + x45
    x47 = 15.08494466531301 * x46
    x48 = 0.3183098861837907 * x6
    x49 = x26 * x48
    x50 = 26.12789058968724 * x41
    x51 = x28 * x32
    x52 = x31 * x7
    x53 = x41**2 * x52
    x54 = x0 * x52
    x55 = x53 + x54
    x56 = 15.08494466531301 * x55
    x57 = x36 * x43
    x58 = x16 * x57 + x36 * x46
    x59 = x33 * x48
    x60 = 11.68474789344354 * x24
    x61 = 26.12789058968724 * x24
    x62 = x48 * x51
    x63 = x41 * x52
    x64 = x16 * x63 + x41 * x55
    x65 = x48 * x64
    x66 = 3.0 * x45
    x67 = 4.416419579791068 * x0 * (3.0 * x44 + x66) + 4.416419579791068 * x36 * x58
    x68 = x32 * (x10 + x21)
    x69 = x48 * x68
    x70 = x31 * x69
    x71 = 0.1795871221251666
    x72 = x55 * x71
    x73 = 3.0 * x54
    x74 = x0 * (3.0 * x53 + x73) + x41 * x64
    x75 = x10 + x9
    x76 = x16 * x17 + x3 * x75
    x77 = x0 * (x11 + 3.0 * x9) + x3 * x76
    x78 = -x35 - R[1]
    x79 = x43 * x78**2
    x80 = x45 + x79
    x81 = 4.416419579791068 * x80
    x82 = x43 * x78
    x83 = x0 * (x57 + x82)
    x84 = x45 + x57 * x78
    x85 = x78 * x84
    x86 = x83 + x85
    x87 = 11.68474789344354 * x86
    x88 = x59 * x76
    x89 = x32 * x75
    x90 = 15.08494466531301 * x89
    x91 = 2.0 * x36
    x92 = x66 + x82 * x91
    x93 = x0 * (x79 + x92)
    x94 = x36 * x86
    x95 = x93 + x94
    x96 = x48 * x95
    x97 = 26.12789058968724 * x86
    x98 = 11.68474789344354 * x3
    x99 = x36 * x84
    x100 = 2.0 * x0 * (2.0 * x83 + x85 + x99) + x36 * x95
    x101 = x34 * x5
    x102 = x100 * x101
    x103 = x32 * x5
    x104 = x103 * x48
    x105 = x104 * x3
    x106 = x103 * x65
    x107 = -x40 - R[2]
    x108 = x107**2 * x52
    x109 = x108 + x54
    x110 = x109 * x48
    x111 = x37 * x51
    x112 = x107 * x52
    x113 = x0 * (x112 + x63)
    x114 = x107 * x63 + x54
    x115 = x107 * x114
    x116 = x113 + x115
    x117 = 11.68474789344354 * x116
    x118 = x28 * x48
    x119 = 26.12789058968724 * x116
    x120 = 2.0 * x41
    x121 = x112 * x120 + x73
    x122 = x0 * (x108 + x121)
    x123 = x116 * x41
    x124 = x122 + x123
    x125 = x104 * x109
    x126 = x1 * x30
    x127 = x114 * x41
    x128 = 2.0 * x0 * (2.0 * x113 + x115 + x127) + x124 * x41
    x129 = x126 * x128 * x5

    # 45 item(s)
    result[0, 0, 0] = numpy.sum(
        x29
        * x34
        * (x0 * (x12 * (x18 + x20) + x16 * (x15 + x9) + 3.0 * x22 + 3.0 * x25) + x27 * x3)
    )
    result[0, 0, 1] = numpy.sum(x38 * x39)
    result[0, 0, 2] = numpy.sum(x28 * x39 * x42)
    result[0, 0, 3] = numpy.sum(x33 * x47 * x49)
    result[0, 0, 4] = numpy.sum(x26 * x28 * x34 * x36 * x50)
    result[0, 0, 5] = numpy.sum(x49 * x51 * x56)
    result[0, 0, 6] = numpy.sum(x58 * x59 * x60)
    result[0, 0, 7] = numpy.sum(x41 * x46 * x59 * x61)
    result[0, 0, 8] = numpy.sum(x36 * x55 * x61 * x62)
    result[0, 0, 9] = numpy.sum(x51 * x60 * x65)
    result[0, 0, 10] = numpy.sum(x67 * x70)
    result[0, 0, 11] = numpy.sum(x42 * x58 * x70)
    result[0, 0, 12] = numpy.sum(x47 * x68 * x72)
    result[0, 0, 13] = numpy.sum(x38 * x65 * x68)
    result[0, 0, 14] = numpy.sum(x29 * x69 * x74)
    result[1, 0, 0] = numpy.sum(x59 * x77 * x81)
    result[1, 0, 1] = numpy.sum(x87 * x88)
    result[1, 0, 2] = numpy.sum(x42 * x80 * x88)
    result[1, 0, 3] = numpy.sum(x31 * x90 * x96)
    result[1, 0, 4] = numpy.sum(x31 * x41 * x48 * x89 * x97)
    result[1, 0, 5] = numpy.sum(x72 * x80 * x90)
    result[1, 0, 6] = numpy.sum(x102 * x98)
    result[1, 0, 7] = numpy.sum(x101 * x3 * x50 * x95)
    result[1, 0, 8] = numpy.sum(x105 * x55 * x97)
    result[1, 0, 9] = numpy.sum(x106 * x80 * x98)
    result[1, 0, 10] = numpy.sum(
        4.416419579791068
        * x101
        * (
            x0 * (x16 * (x44 + x92) + x91 * (x83 + x99) + 3.0 * x93 + 3.0 * x94)
            + x100 * x36
        )
    )
    result[1, 0, 11] = numpy.sum(x102 * x42)
    result[1, 0, 12] = numpy.sum(x103 * x56 * x96)
    result[1, 0, 13] = numpy.sum(x106 * x87)
    result[1, 0, 14] = numpy.sum(x104 * x74 * x81)
    result[2, 0, 0] = numpy.sum(x110 * x29 * x32 * x77)
    result[2, 0, 1] = numpy.sum(x110 * x111 * x76)
    result[2, 0, 2] = numpy.sum(x117 * x62 * x76)
    result[2, 0, 3] = numpy.sum(x109 * x47 * x71 * x89)
    result[2, 0, 4] = numpy.sum(x118 * x119 * x36 * x89)
    result[2, 0, 5] = numpy.sum(x118 * x124 * x90)
    result[2, 0, 6] = numpy.sum(x125 * x58 * x98)
    result[2, 0, 7] = numpy.sum(x105 * x119 * x46)
    result[2, 0, 8] = numpy.sum(26.12789058968724 * x124 * x126 * x3 * x36 * x5 * x51)
    result[2, 0, 9] = numpy.sum(x129 * x51 * x98)
    result[2, 0, 10] = numpy.sum(x125 * x67)
    result[2, 0, 11] = numpy.sum(x104 * x117 * x58)
    result[2, 0, 12] = numpy.sum(x104 * x124 * x47)
    result[2, 0, 13] = numpy.sum(x111 * x129)
    result[2, 0, 14] = numpy.sum(
        x103
        * x126
        * x29
        * (
            x0 * (x120 * (x113 + x127) + 3.0 * x122 + 3.0 * x123 + x16 * (x121 + x53))
            + x128 * x41
        )
    )
    return result


def diag_quadrupole3d_10(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ps) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 1), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = 1.772453850905516 * numpy.sqrt(x1)
    x3 = -x1 * (ax * A[0] + bx * B[0])
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = -x5 * (x3 + A[0])
    x7 = x2 * x6
    x8 = -x3 - R[0]
    x9 = x2 * x5
    x10 = x0 * x9
    x11 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x12 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x13 = 0.5641895835477563
    x14 = numpy.sqrt(ax**2.5)
    x15 = numpy.sqrt(bx**1.5)
    x16 = 5.656854249492381 * da * db * x1 * x12 * x13 * x14 * x15
    x17 = x11 * x16
    x18 = -x1 * (ax * A[1] + bx * B[1])
    x19 = -x18 - A[1]
    x20 = x17 * (x10 + x8**2 * x9)
    x21 = -x1 * (ax * A[2] + bx * B[2])
    x22 = -x21 - A[2]
    x23 = -x18 - R[1]
    x24 = x11 * x2
    x25 = x0 * x24
    x26 = x23**2 * x24 + x25
    x27 = x19 * x24
    x28 = x16 * x5
    x29 = -x21 - R[2]
    x30 = x12 * x2
    x31 = x0 * x30
    x32 = x29**2 * x30 + x31
    x33 = 5.656854249492381 * da * db * x1 * x11 * x13 * x14 * x15
    x34 = x33 * x5
    x35 = x22 * x30

    # 9 item(s)
    result[0, 0, 0] = numpy.sum(x17 * (x0 * (x7 + x8 * x9) + x8 * (x10 + x7 * x8)))
    result[0, 1, 0] = numpy.sum(x19 * x20)
    result[0, 2, 0] = numpy.sum(x20 * x22)
    result[1, 0, 0] = numpy.sum(x16 * x26 * x6)
    result[1, 1, 0] = numpy.sum(x28 * (x0 * (x23 * x24 + x27) + x23 * (x23 * x27 + x25)))
    result[1, 2, 0] = numpy.sum(x22 * x26 * x28)
    result[2, 0, 0] = numpy.sum(x32 * x33 * x6)
    result[2, 1, 0] = numpy.sum(x19 * x32 * x34)
    result[2, 2, 0] = numpy.sum(x34 * (x0 * (x29 * x30 + x35) + x29 * (x29 * x35 + x31)))
    return result


def diag_quadrupole3d_11(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pp) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 3), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = ax * bx * x1
    x3 = numpy.exp(-x2 * (A[0] - B[0]) ** 2)
    x4 = numpy.sqrt(x1)
    x5 = 1.772453850905516 * x4
    x6 = x3 * x5
    x7 = x0 * x6
    x8 = -x1 * (ax * A[0] + bx * B[0])
    x9 = -x8 - A[0]
    x10 = -x3 * (x8 + B[0])
    x11 = x10 * x5
    x12 = x11 * x9
    x13 = -x8 - R[0]
    x14 = x13 * x6
    x15 = x14 * x9
    x16 = x11 * x13
    x17 = x0 * (x11 + x14)
    x18 = x16 + x7
    x19 = numpy.exp(-x2 * (A[1] - B[1]) ** 2)
    x20 = 0.5641895835477563
    x21 = numpy.exp(-x2 * (A[2] - B[2]) ** 2)
    x22 = 11.31370849898476 * da * db * numpy.sqrt(ax**2.5) * numpy.sqrt(bx**2.5)
    x23 = x21 * x22
    x24 = x1 * x20 * x23
    x25 = x19 * x24
    x26 = -x1 * (ax * A[1] + bx * B[1])
    x27 = -x26 - B[1]
    x28 = x25 * (x0 * (x14 + x6 * x9) + x13 * (x15 + x7))
    x29 = -x1 * (ax * A[2] + bx * B[2])
    x30 = -x29 - B[2]
    x31 = -x26 - A[1]
    x32 = x25 * (x13 * x18 + x17)
    x33 = x0 * x5
    x34 = x19 * x33
    x35 = x19 * x5
    x36 = x27 * x35
    x37 = x31 * x36
    x38 = x34 + x37
    x39 = x13**2 * x6 + x7
    x40 = 0.3183098861837907 * x4
    x41 = x39 * x40
    x42 = x25 * x39
    x43 = -x29 - A[2]
    x44 = x21 * x33
    x45 = x21 * x5
    x46 = x30 * x45
    x47 = x43 * x46
    x48 = x22 * (x44 + x47)
    x49 = x12 + x7
    x50 = -x26 - R[1]
    x51 = x34 + x35 * x50**2
    x52 = x40 * x51
    x53 = x35 * x50
    x54 = x0 * (x36 + x53)
    x55 = x36 * x50
    x56 = x34 + x55
    x57 = x24 * x3
    x58 = x57 * (x50 * x56 + x54)
    x59 = x30 * x57
    x60 = x31 * x53
    x61 = x0 * (x31 * x35 + x53) + x50 * (x34 + x60)
    x62 = x10 * x24
    x63 = x19 * x22
    x64 = -x29 - R[2]
    x65 = x44 + x45 * x64**2
    x66 = x40 * x65
    x67 = x1 * x20 * x63
    x68 = x3 * x67
    x69 = x27 * x68
    x70 = x45 * x64
    x71 = x0 * (x46 + x70)
    x72 = x46 * x64
    x73 = x44 + x72
    x74 = x68 * (x64 * x73 + x71)
    x75 = x10 * x67
    x76 = x43 * x70
    x77 = x0 * (x43 * x45 + x70) + x64 * (x44 + x76)

    # 27 item(s)
    result[0, 0, 0] = numpy.sum(
        x25 * (x0 * (x12 + x15 + x16 + 3.0 * x7) + x13 * (x17 + x18 * x9))
    )
    result[0, 0, 1] = numpy.sum(x27 * x28)
    result[0, 0, 2] = numpy.sum(x28 * x30)
    result[0, 1, 0] = numpy.sum(x31 * x32)
    result[0, 1, 1] = numpy.sum(x23 * x38 * x41)
    result[0, 1, 2] = numpy.sum(x30 * x31 * x42)
    result[0, 2, 0] = numpy.sum(x32 * x43)
    result[0, 2, 1] = numpy.sum(x27 * x42 * x43)
    result[0, 2, 2] = numpy.sum(x19 * x41 * x48)
    result[1, 0, 0] = numpy.sum(x23 * x49 * x52)
    result[1, 0, 1] = numpy.sum(x58 * x9)
    result[1, 0, 2] = numpy.sum(x51 * x59 * x9)
    result[1, 1, 0] = numpy.sum(x61 * x62)
    result[1, 1, 1] = numpy.sum(
        x57 * (x0 * (3.0 * x34 + x37 + x55 + x60) + x50 * (x31 * x56 + x54))
    )
    result[1, 1, 2] = numpy.sum(x59 * x61)
    result[1, 2, 0] = numpy.sum(x43 * x51 * x62)
    result[1, 2, 1] = numpy.sum(x43 * x58)
    result[1, 2, 2] = numpy.sum(x3 * x48 * x52)
    result[2, 0, 0] = numpy.sum(x49 * x63 * x66)
    result[2, 0, 1] = numpy.sum(x65 * x69 * x9)
    result[2, 0, 2] = numpy.sum(x74 * x9)
    result[2, 1, 0] = numpy.sum(x31 * x65 * x75)
    result[2, 1, 1] = numpy.sum(x22 * x3 * x38 * x66)
    result[2, 1, 2] = numpy.sum(x31 * x74)
    result[2, 2, 0] = numpy.sum(x75 * x77)
    result[2, 2, 1] = numpy.sum(x69 * x77)
    result[2, 2, 2] = numpy.sum(
        x68 * (x0 * (3.0 * x44 + x47 + x72 + x76) + x64 * (x43 * x73 + x71))
    )
    return result


def diag_quadrupole3d_12(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pd) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 6), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - R[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x0 * x8
    x10 = -x2 - B[0]
    x11 = x3 * x8
    x12 = x10 * x11
    x13 = x12 + x9
    x14 = x13 * x3
    x15 = -x2 - A[0]
    x16 = x13 * x15
    x17 = x10 * x8
    x18 = x0 * (x11 + x17)
    x19 = x15 * x5
    x20 = x19 * x7
    x21 = x20 * x3
    x22 = x0 * (x11 + x20) + x3 * (x21 + x9)
    x23 = 3.0 * x9
    x24 = x10 * x20
    x25 = x0 * (x12 + x21 + x23 + x24) + x3 * (x16 + x18)
    x26 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x27 = da * db * numpy.sqrt(ax**2.5) * numpy.sqrt(bx**3.5)
    x28 = x26 * x27
    x29 = 13.06394529484362 * x28
    x30 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x31 = 0.5641895835477563 * x1
    x32 = x30 * x31
    x33 = x29 * x32
    x34 = -x1 * (ax * A[1] + bx * B[1])
    x35 = -x34 - B[1]
    x36 = x32 * x35
    x37 = 22.62741699796953 * x28
    x38 = x25 * x37
    x39 = -x1 * (ax * A[2] + bx * B[2])
    x40 = -x39 - B[2]
    x41 = x32 * x40
    x42 = 0.3183098861837907 * x6
    x43 = x22 * x42
    x44 = x30 * x7
    x45 = x0 * x44
    x46 = x35**2 * x44 + x45
    x47 = x29 * x46
    x48 = x36 * x37
    x49 = x26 * x7
    x50 = x0 * x49
    x51 = x40**2 * x49 + x50
    x52 = x27 * x30
    x53 = 13.06394529484362 * x52
    x54 = x51 * x53
    x55 = -x34 - A[1]
    x56 = x3**2 * x8
    x57 = x14 + x18
    x58 = x33 * (x0 * (2.0 * x12 + x23 + x56) + x10 * x57)
    x59 = 22.62741699796953 * x42
    x60 = x57 * x59
    x61 = x44 * x55
    x62 = x35 * x61
    x63 = x45 + x62
    x64 = x28 * x63
    x65 = x35 * x44
    x66 = x0 * (x61 + x65) + x35 * x63
    x67 = x56 + x9
    x68 = x42 * x67
    x69 = x59 * x67
    x70 = -x39 - A[2]
    x71 = x49 * x70
    x72 = x40 * x71
    x73 = x50 + x72
    x74 = x52 * x73
    x75 = x40 * x49
    x76 = x0 * (x71 + x75) + x40 * x73
    x77 = x24 + x9
    x78 = x0 * (x17 + x20) + x10 * x77
    x79 = -x34 - R[1]
    x80 = x44 * x79**2
    x81 = x45 + x80
    x82 = x29 * x42
    x83 = x81 * x82
    x84 = x44 * x79
    x85 = x0 * (x65 + x84)
    x86 = x65 * x79
    x87 = x45 + x86
    x88 = x79 * x87
    x89 = x85 + x88
    x90 = x59 * x89
    x91 = x28 * x77
    x92 = x59 * x81
    x93 = 3.0 * x45
    x94 = x0 * (x80 + 2.0 * x86 + x93) + x35 * x89
    x95 = x29 * x31
    x96 = x31 * x37
    x97 = x40 * x96
    x98 = x19 * x27
    x99 = 13.06394529484362 * x98
    x100 = x42 * x99
    x101 = x61 * x79
    x102 = x0 * (x61 + x84) + x79 * (x101 + x45)
    x103 = x10**2 * x8 + x9
    x104 = x55 * x87
    x105 = x0 * (x101 + x62 + x86 + x93) + x79 * (x104 + x85)
    x106 = x105 * x5 * x96
    x107 = x10 * x5
    x108 = x5 * x95
    x109 = x27 * x5
    x110 = 13.06394529484362 * x109
    x111 = x110 * x42
    x112 = x109 * x73
    x113 = -x39 - R[2]
    x114 = x113**2 * x49
    x115 = x114 + x50
    x116 = x42 * x53
    x117 = x115 * x116
    x118 = x52 * x77
    x119 = x115 * x59
    x120 = x113 * x49
    x121 = x0 * (x120 + x75)
    x122 = x113 * x75
    x123 = x122 + x50
    x124 = x113 * x123
    x125 = x121 + x124
    x126 = x125 * x59
    x127 = 22.62741699796953 * x125
    x128 = 3.0 * x50
    x129 = x0 * (x114 + 2.0 * x122 + x128) + x125 * x40
    x130 = x109 * x63
    x131 = x10 * x32
    x132 = x110 * x32
    x133 = x113 * x71
    x134 = x0 * (x120 + x71) + x113 * (x133 + x50)
    x135 = x123 * x70
    x136 = x0 * (x122 + x128 + x133 + x72) + x113 * (x121 + x135)
    x137 = 22.62741699796953 * x109 * x136

    # 54 item(s)
    result[0, 0, 0] = numpy.sum(
        x33 * (x0 * (x14 + 2.0 * x16 + 3.0 * x18 + x22) + x10 * x25)
    )
    result[0, 0, 1] = numpy.sum(x36 * x38)
    result[0, 0, 2] = numpy.sum(x38 * x41)
    result[0, 0, 3] = numpy.sum(x43 * x47)
    result[0, 0, 4] = numpy.sum(x22 * x40 * x48)
    result[0, 0, 5] = numpy.sum(x43 * x54)
    result[0, 1, 0] = numpy.sum(x55 * x58)
    result[0, 1, 1] = numpy.sum(x60 * x64)
    result[0, 1, 2] = numpy.sum(x37 * x41 * x55 * x57)
    result[0, 1, 3] = numpy.sum(x29 * x66 * x68)
    result[0, 1, 4] = numpy.sum(x40 * x64 * x69)
    result[0, 1, 5] = numpy.sum(x54 * x55 * x68)
    result[0, 2, 0] = numpy.sum(x58 * x70)
    result[0, 2, 1] = numpy.sum(x48 * x57 * x70)
    result[0, 2, 2] = numpy.sum(x60 * x74)
    result[0, 2, 3] = numpy.sum(x47 * x68 * x70)
    result[0, 2, 4] = numpy.sum(x35 * x69 * x74)
    result[0, 2, 5] = numpy.sum(x53 * x68 * x76)
    result[1, 0, 0] = numpy.sum(x78 * x83)
    result[1, 0, 1] = numpy.sum(x90 * x91)
    result[1, 0, 2] = numpy.sum(x40 * x91 * x92)
    result[1, 0, 3] = numpy.sum(x19 * x94 * x95)
    result[1, 0, 4] = numpy.sum(x19 * x89 * x97)
    result[1, 0, 5] = numpy.sum(x100 * x51 * x81)
    result[1, 1, 0] = numpy.sum(x102 * x103 * x82)
    result[1, 1, 1] = numpy.sum(x10 * x106)
    result[1, 1, 2] = numpy.sum(x102 * x107 * x97)
    result[1, 1, 3] = numpy.sum(
        x108 * (x0 * (x102 + 2.0 * x104 + 3.0 * x85 + x88) + x105 * x35)
    )
    result[1, 1, 4] = numpy.sum(x106 * x40)
    result[1, 1, 5] = numpy.sum(x102 * x111 * x51)
    result[1, 2, 0] = numpy.sum(x103 * x70 * x83)
    result[1, 2, 1] = numpy.sum(x107 * x70 * x89 * x96)
    result[1, 2, 2] = numpy.sum(x10 * x112 * x92)
    result[1, 2, 3] = numpy.sum(x108 * x70 * x94)
    result[1, 2, 4] = numpy.sum(x112 * x90)
    result[1, 2, 5] = numpy.sum(x111 * x76 * x81)
    result[2, 0, 0] = numpy.sum(x117 * x78)
    result[2, 0, 1] = numpy.sum(x118 * x119 * x35)
    result[2, 0, 2] = numpy.sum(x118 * x126)
    result[2, 0, 3] = numpy.sum(x100 * x115 * x46)
    result[2, 0, 4] = numpy.sum(x127 * x36 * x98)
    result[2, 0, 5] = numpy.sum(x129 * x32 * x99)
    result[2, 1, 0] = numpy.sum(x103 * x117 * x55)
    result[2, 1, 1] = numpy.sum(x10 * x119 * x130)
    result[2, 1, 2] = numpy.sum(x109 * x127 * x131 * x55)
    result[2, 1, 3] = numpy.sum(x111 * x115 * x66)
    result[2, 1, 4] = numpy.sum(x126 * x130)
    result[2, 1, 5] = numpy.sum(x129 * x132 * x55)
    result[2, 2, 0] = numpy.sum(x103 * x116 * x134)
    result[2, 2, 1] = numpy.sum(22.62741699796953 * x10 * x109 * x134 * x36)
    result[2, 2, 2] = numpy.sum(x131 * x137)
    result[2, 2, 3] = numpy.sum(x111 * x134 * x46)
    result[2, 2, 4] = numpy.sum(x137 * x36)
    result[2, 2, 5] = numpy.sum(
        x132 * (x0 * (3.0 * x121 + x124 + x134 + 2.0 * x135) + x136 * x40)
    )
    return result


def diag_quadrupole3d_13(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pf) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 10), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3 * x8
    x10 = -x2 - R[0]
    x11 = x10 * x8
    x12 = x0 * (x11 + x9)
    x13 = -x2 - A[0]
    x14 = x0 * x8
    x15 = x10 * x9
    x16 = x14 + x15
    x17 = x13 * x16
    x18 = x12 + x17
    x19 = 2.0 * x3
    x20 = x10 * x18
    x21 = 3.0 * x14
    x22 = x13 * x9
    x23 = x11 * x13
    x24 = x0 * (x15 + x21 + x22 + x23)
    x25 = x10**2 * x8
    x26 = x10 * x16
    x27 = x12 + x26
    x28 = x0 * (x11 * x19 + x21 + x25) + x27 * x3
    x29 = x13 * x8
    x30 = x0 * (x11 + x29) + x10 * (x14 + x23)
    x31 = x20 + x24
    x32 = x0 * (3.0 * x12 + 2.0 * x17 + x26 + x30) + x3 * x31
    x33 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x34 = da * db * numpy.sqrt(ax**2.5) * numpy.sqrt(bx**4.5)
    x35 = 11.68474789344354 * x34
    x36 = x33 * x35
    x37 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x38 = 0.5641895835477563 * x1
    x39 = x37 * x38
    x40 = x36 * x39
    x41 = -x1 * (ax * A[1] + bx * B[1])
    x42 = -x41 - B[1]
    x43 = x39 * x42
    x44 = 26.12789058968724 * x34
    x45 = x33 * x44
    x46 = x32 * x45
    x47 = -x1 * (ax * A[2] + bx * B[2])
    x48 = -x47 - B[2]
    x49 = x39 * x48
    x50 = 0.3183098861837907 * x6
    x51 = x31 * x50
    x52 = x37 * x7
    x53 = x42**2 * x52
    x54 = x0 * x52
    x55 = x53 + x54
    x56 = x45 * x55
    x57 = 45.25483399593905 * x34
    x58 = x33 * x48
    x59 = x57 * x58
    x60 = x33 * x7
    x61 = x48**2 * x60
    x62 = x0 * x60
    x63 = x61 + x62
    x64 = x37 * x44
    x65 = x63 * x64
    x66 = x30 * x50
    x67 = 2.0 * x42
    x68 = x42 * x55 + x54 * x67
    x69 = x36 * x68
    x70 = 2.0 * x48
    x71 = x48 * x63 + x62 * x70
    x72 = x35 * x37
    x73 = x71 * x72
    x74 = -x41 - A[1]
    x75 = x40 * (x0 * (4.0 * x12 + x16 * x19 + 2.0 * x26) + x28 * x3)
    x76 = x52 * x74
    x77 = x42 * x76
    x78 = x54 + x77
    x79 = x45 * x50
    x80 = x28 * x45
    x81 = x42 * x52
    x82 = x0 * (x76 + x81) + x42 * x78
    x83 = x79 * x82
    x84 = x27 * x50
    x85 = x57 * x78
    x86 = 3.0 * x54
    x87 = x0 * (x53 + x67 * x76 + x86) + x42 * x82
    x88 = x14 + x25
    x89 = x50 * x88
    x90 = 0.1795871221251666 * x44
    x91 = x88 * x90
    x92 = -x47 - A[2]
    x93 = x60 * x92
    x94 = x48 * x93
    x95 = x62 + x94
    x96 = x50 * x64
    x97 = x57 * x95
    x98 = x37 * x42
    x99 = x48 * x60
    x100 = x0 * (x93 + x99) + x48 * x95
    x101 = 3.0 * x62
    x102 = x0 * (x101 + x61 + x70 * x93) + x100 * x48
    x103 = x3**2 * x8
    x104 = x14 + x22
    x105 = x0 * (x29 + x9) + x104 * x3
    x106 = x0 * (x103 + x19 * x29 + x21) + x105 * x3
    x107 = -x41 - R[1]
    x108 = x107**2 * x52
    x109 = x108 + x54
    x110 = x36 * x50
    x111 = x109 * x110
    x112 = x107 * x52
    x113 = x0 * (x112 + x81)
    x114 = x107 * x81
    x115 = x114 + x54
    x116 = x107 * x115
    x117 = x113 + x116
    x118 = x105 * x79
    x119 = x0 * (x108 + x112 * x67 + x86) + x117 * x42
    x120 = x104 * x50
    x121 = x109 * x90
    x122 = x38 * x5
    x123 = x122 * x36
    x124 = x123 * (x0 * (4.0 * x113 + x115 * x67 + 2.0 * x116) + x119 * x42)
    x125 = x122 * x45
    x126 = x119 * x125
    x127 = x5 * x50
    x128 = x127 * x44
    x129 = x128 * x63
    x130 = x127 * x35
    x131 = x130 * x71
    x132 = x107 * x76
    x133 = x0 * (x112 + x76) + x107 * (x132 + x54)
    x134 = x103 + x14
    x135 = x134 * x3 + x14 * x19
    x136 = x0 * (x114 + x132 + x77 + x86)
    x137 = x115 * x74
    x138 = x113 + x137
    x139 = x107 * x138
    x140 = x136 + x139
    x141 = x134 * x79
    x142 = x0 * (3.0 * x113 + x116 + x133 + 2.0 * x137) + x140 * x42
    x143 = x125 * x142
    x144 = x127 * x3
    x145 = x100 * x128
    x146 = -x47 - R[2]
    x147 = x146**2 * x60
    x148 = x147 + x62
    x149 = x50 * x72
    x150 = x148 * x149
    x151 = x105 * x96
    x152 = x146 * x60
    x153 = x0 * (x152 + x99)
    x154 = x146 * x99
    x155 = x154 + x62
    x156 = x146 * x155
    x157 = x153 + x156
    x158 = x148 * x90
    x159 = x0 * (x101 + x147 + x152 * x70) + x157 * x48
    x160 = x130 * x148
    x161 = x128 * x157
    x162 = x39 * x5
    x163 = x162 * x44
    x164 = x159 * x163
    x165 = x162 * x35
    x166 = x165 * (x0 * (4.0 * x153 + x155 * x70 + 2.0 * x156) + x159 * x48)
    x167 = x134 * x96
    x168 = x146 * x93
    x169 = x0 * (x152 + x93) + x146 * (x168 + x62)
    x170 = x0 * (x101 + x154 + x168 + x94)
    x171 = x155 * x92
    x172 = x153 + x171
    x173 = x146 * x172
    x174 = x170 + x173
    x175 = x128 * x55
    x176 = x0 * (3.0 * x153 + x156 + x169 + 2.0 * x171) + x174 * x48
    x177 = x163 * x176

    # 90 item(s)
    result[0, 0, 0] = numpy.sum(
        x40 * (x0 * (x18 * x19 + 2.0 * x20 + 4.0 * x24 + x28) + x3 * x32)
    )
    result[0, 0, 1] = numpy.sum(x43 * x46)
    result[0, 0, 2] = numpy.sum(x46 * x49)
    result[0, 0, 3] = numpy.sum(x51 * x56)
    result[0, 0, 4] = numpy.sum(x31 * x43 * x59)
    result[0, 0, 5] = numpy.sum(x51 * x65)
    result[0, 0, 6] = numpy.sum(x66 * x69)
    result[0, 0, 7] = numpy.sum(x48 * x56 * x66)
    result[0, 0, 8] = numpy.sum(x42 * x65 * x66)
    result[0, 0, 9] = numpy.sum(x66 * x73)
    result[0, 1, 0] = numpy.sum(x74 * x75)
    result[0, 1, 1] = numpy.sum(x28 * x78 * x79)
    result[0, 1, 2] = numpy.sum(x49 * x74 * x80)
    result[0, 1, 3] = numpy.sum(x27 * x83)
    result[0, 1, 4] = numpy.sum(x58 * x84 * x85)
    result[0, 1, 5] = numpy.sum(x65 * x74 * x84)
    result[0, 1, 6] = numpy.sum(x36 * x87 * x89)
    result[0, 1, 7] = numpy.sum(x48 * x83 * x88)
    result[0, 1, 8] = numpy.sum(x63 * x78 * x91)
    result[0, 1, 9] = numpy.sum(x73 * x74 * x89)
    result[0, 2, 0] = numpy.sum(x75 * x92)
    result[0, 2, 1] = numpy.sum(x43 * x80 * x92)
    result[0, 2, 2] = numpy.sum(x28 * x95 * x96)
    result[0, 2, 3] = numpy.sum(x56 * x84 * x92)
    result[0, 2, 4] = numpy.sum(x84 * x97 * x98)
    result[0, 2, 5] = numpy.sum(x100 * x27 * x96)
    result[0, 2, 6] = numpy.sum(x69 * x89 * x92)
    result[0, 2, 7] = numpy.sum(x55 * x91 * x95)
    result[0, 2, 8] = numpy.sum(x100 * x42 * x64 * x89)
    result[0, 2, 9] = numpy.sum(x102 * x72 * x89)
    result[1, 0, 0] = numpy.sum(x106 * x111)
    result[1, 0, 1] = numpy.sum(x117 * x118)
    result[1, 0, 2] = numpy.sum(x109 * x118 * x48)
    result[1, 0, 3] = numpy.sum(x104 * x119 * x79)
    result[1, 0, 4] = numpy.sum(x117 * x120 * x59)
    result[1, 0, 5] = numpy.sum(x104 * x121 * x63)
    result[1, 0, 6] = numpy.sum(x124 * x13)
    result[1, 0, 7] = numpy.sum(x126 * x13 * x48)
    result[1, 0, 8] = numpy.sum(x117 * x129 * x13)
    result[1, 0, 9] = numpy.sum(x109 * x13 * x131)
    result[1, 1, 0] = numpy.sum(x110 * x133 * x135)
    result[1, 1, 1] = numpy.sum(x140 * x141)
    result[1, 1, 2] = numpy.sum(x133 * x141 * x48)
    result[1, 1, 3] = numpy.sum(x143 * x3)
    result[1, 1, 4] = numpy.sum(x122 * x140 * x3 * x59)
    result[1, 1, 5] = numpy.sum(x129 * x133 * x3)
    result[1, 1, 6] = numpy.sum(
        x123 * (x0 * (x119 + 4.0 * x136 + x138 * x67 + 2.0 * x139) + x142 * x42)
    )
    result[1, 1, 7] = numpy.sum(x143 * x48)
    result[1, 1, 8] = numpy.sum(x129 * x140)
    result[1, 1, 9] = numpy.sum(x131 * x133)
    result[1, 2, 0] = numpy.sum(x111 * x135 * x92)
    result[1, 2, 1] = numpy.sum(x117 * x141 * x92)
    result[1, 2, 2] = numpy.sum(x121 * x134 * x95)
    result[1, 2, 3] = numpy.sum(x126 * x3 * x92)
    result[1, 2, 4] = numpy.sum(x117 * x144 * x97)
    result[1, 2, 5] = numpy.sum(x109 * x145 * x3)
    result[1, 2, 6] = numpy.sum(x124 * x92)
    result[1, 2, 7] = numpy.sum(x119 * x128 * x95)
    result[1, 2, 8] = numpy.sum(x117 * x145)
    result[1, 2, 9] = numpy.sum(x102 * x109 * x130)
    result[2, 0, 0] = numpy.sum(x106 * x150)
    result[2, 0, 1] = numpy.sum(x148 * x151 * x42)
    result[2, 0, 2] = numpy.sum(x151 * x157)
    result[2, 0, 3] = numpy.sum(x104 * x158 * x55)
    result[2, 0, 4] = numpy.sum(x120 * x157 * x57 * x98)
    result[2, 0, 5] = numpy.sum(x104 * x159 * x96)
    result[2, 0, 6] = numpy.sum(x13 * x160 * x68)
    result[2, 0, 7] = numpy.sum(x13 * x161 * x55)
    result[2, 0, 8] = numpy.sum(x13 * x164 * x42)
    result[2, 0, 9] = numpy.sum(x13 * x166)
    result[2, 1, 0] = numpy.sum(x135 * x150 * x74)
    result[2, 1, 1] = numpy.sum(x134 * x158 * x78)
    result[2, 1, 2] = numpy.sum(x157 * x167 * x74)
    result[2, 1, 3] = numpy.sum(x128 * x148 * x3 * x82)
    result[2, 1, 4] = numpy.sum(x144 * x157 * x85)
    result[2, 1, 5] = numpy.sum(x164 * x3 * x74)
    result[2, 1, 6] = numpy.sum(x160 * x87)
    result[2, 1, 7] = numpy.sum(x161 * x82)
    result[2, 1, 8] = numpy.sum(x128 * x159 * x78)
    result[2, 1, 9] = numpy.sum(x166 * x74)
    result[2, 2, 0] = numpy.sum(x135 * x149 * x169)
    result[2, 2, 1] = numpy.sum(x167 * x169 * x42)
    result[2, 2, 2] = numpy.sum(x167 * x174)
    result[2, 2, 3] = numpy.sum(x169 * x175 * x3)
    result[2, 2, 4] = numpy.sum(x162 * x174 * x3 * x42 * x57)
    result[2, 2, 5] = numpy.sum(x177 * x3)
    result[2, 2, 6] = numpy.sum(x130 * x169 * x68)
    result[2, 2, 7] = numpy.sum(x174 * x175)
    result[2, 2, 8] = numpy.sum(x177 * x42)
    result[2, 2, 9] = numpy.sum(
        x165 * (x0 * (x159 + 4.0 * x170 + x172 * x70 + 2.0 * x173) + x176 * x48)
    )
    return result


def diag_quadrupole3d_14(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pg) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x0 * x8
    x10 = -x2 - R[0]
    x11 = x3 * x8
    x12 = x10 * x11
    x13 = x12 + x9
    x14 = x13 * x3
    x15 = -x2 - A[0]
    x16 = x15 * x8
    x17 = x0 * (x11 + x16)
    x18 = x11 * x15
    x19 = x18 + x9
    x20 = x19 * x3
    x21 = x17 + x20
    x22 = x13 * x15
    x23 = x10 * x8
    x24 = x0 * (x11 + x23)
    x25 = 2.0 * x22 + 3.0 * x24
    x26 = 2.0 * x0
    x27 = 3.0 * x9
    x28 = x15 * x23
    x29 = x0 * (x12 + x18 + x27 + x28)
    x30 = x22 + x24
    x31 = x3 * x30
    x32 = 2.0 * x3
    x33 = x10 * x13
    x34 = x0 * (x16 + x23) + x10 * (x28 + x9)
    x35 = x0 * (x25 + x33 + x34)
    x36 = x10 * x30
    x37 = x29 + x36
    x38 = x3 * x37
    x39 = x10**2 * x8
    x40 = x23 * x32 + x27
    x41 = x0 * (x39 + x40)
    x42 = x24 + x33
    x43 = x3 * x42
    x44 = x41 + x43
    x45 = 2.0 * x0 * (x14 + 2.0 * x24 + x33) + x3 * x44
    x46 = x35 + x38
    x47 = x0 * (4.0 * x29 + 2.0 * x31 + 2.0 * x36 + x44) + x3 * x46
    x48 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x49 = da * db * numpy.sqrt(ax**2.5) * numpy.sqrt(bx**5.5)
    x50 = x48 * x49
    x51 = 8.832839159582136 * x50
    x52 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x53 = 0.5641895835477563 * x1
    x54 = x52 * x53
    x55 = x51 * x54
    x56 = -x1 * (ax * A[1] + bx * B[1])
    x57 = -x56 - B[1]
    x58 = x54 * x57
    x59 = 23.36949578688709 * x50
    x60 = x47 * x59
    x61 = -x1 * (ax * A[2] + bx * B[2])
    x62 = -x61 - B[2]
    x63 = x54 * x62
    x64 = x46 * x50
    x65 = x52 * x7
    x66 = x57**2 * x65
    x67 = x0 * x65
    x68 = x66 + x67
    x69 = 30.16988933062603 * x68
    x70 = 0.3183098861837907 * x6
    x71 = x69 * x70
    x72 = x48 * x7
    x73 = x62**2 * x72
    x74 = x0 * x72
    x75 = x73 + x74
    x76 = 30.16988933062603 * x70
    x77 = x49 * x52
    x78 = x76 * x77
    x79 = x75 * x78
    x80 = x57 * x65
    x81 = x26 * x80 + x57 * x68
    x82 = 23.36949578688709 * x81
    x83 = x37 * x70
    x84 = x50 * x83
    x85 = 52.25578117937447 * x68
    x86 = x77 * x83
    x87 = 52.25578117937447 * x57
    x88 = x62 * x72
    x89 = x26 * x88 + x62 * x75
    x90 = 23.36949578688709 * x89
    x91 = x34 * x70
    x92 = 3.0 * x67
    x93 = x0 * (3.0 * x66 + x92) + x57 * x81
    x94 = x51 * x93
    x95 = x50 * x62
    x96 = 0.1795871221251666 * x49
    x97 = x75 * x96
    x98 = 3.0 * x74
    x99 = x0 * (3.0 * x73 + x98) + x62 * x89
    x100 = 8.832839159582136 * x77
    x101 = x100 * x99
    x102 = -x56 - A[1]
    x103 = x3**2 * x8
    x104 = x55 * (
        x0 * (x26 * (x103 + x40) + x32 * (x14 + x24) + 3.0 * x41 + 3.0 * x43) + x3 * x45
    )
    x105 = x102 * x65
    x106 = x105 * x57
    x107 = x106 + x67
    x108 = 23.36949578688709 * x70
    x109 = x108 * x50
    x110 = x45 * x59
    x111 = x0 * (x105 + x80)
    x112 = x107 * x57
    x113 = x111 + x112
    x114 = x50 * x76
    x115 = 52.25578117937447 * x107
    x116 = x50 * x70
    x117 = x116 * x62
    x118 = 2.0 * x57
    x119 = x66 + x92
    x120 = x0 * (x105 * x118 + x119) + x113 * x57
    x121 = x109 * x120
    x122 = 52.25578117937447 * x42
    x123 = x70 * x77
    x124 = x0 * (3.0 * x111 + 3.0 * x112 + x81) + x120 * x57
    x125 = x39 + x9
    x126 = x125 * x70
    x127 = 30.16988933062603 * x97
    x128 = x125 * x96
    x129 = -x61 - A[2]
    x130 = x129 * x72
    x131 = x130 * x62
    x132 = x131 + x74
    x133 = x108 * x77
    x134 = x123 * x87
    x135 = x0 * (x130 + x88)
    x136 = x132 * x62
    x137 = x135 + x136
    x138 = x132 * x96
    x139 = 2.0 * x62
    x140 = x73 + x98
    x141 = x0 * (x130 * x139 + x140) + x137 * x62
    x142 = x133 * x141
    x143 = x0 * (3.0 * x135 + 3.0 * x136 + x89) + x141 * x62
    x144 = x103 + x9
    x145 = x11 * x26 + x144 * x3
    x146 = x0 * (x103 + x16 * x32 + x27) + x21 * x3
    x147 = x0 * (x145 + 3.0 * x17 + 3.0 * x20) + x146 * x3
    x148 = -x56 - R[1]
    x149 = x148**2 * x65
    x150 = x149 + x67
    x151 = x51 * x70
    x152 = x150 * x151
    x153 = x148 * x65
    x154 = x0 * (x153 + x80)
    x155 = x148 * x80
    x156 = x155 + x67
    x157 = x148 * x156
    x158 = x154 + x157
    x159 = x109 * x146
    x160 = x118 * x153
    x161 = x0 * (x149 + x160 + x92)
    x162 = x158 * x57
    x163 = x161 + x162
    x164 = 52.25578117937447 * x158
    x165 = x156 * x57
    x166 = 2.0 * x0 * (2.0 * x154 + x157 + x165) + x163 * x57
    x167 = 52.25578117937447 * x117
    x168 = x150 * x96
    x169 = x5 * x53
    x170 = x169 * x51
    x171 = x170 * (
        x0 * (x118 * (x154 + x165) + 3.0 * x161 + 3.0 * x162 + x26 * (x119 + x160))
        + x166 * x57
    )
    x172 = x169 * x59
    x173 = x166 * x172
    x174 = x49 * x5
    x175 = x174 * x76
    x176 = x175 * x75
    x177 = x174 * x70
    x178 = x177 * x90
    x179 = 8.832839159582136 * x177
    x180 = x179 * x99
    x181 = x105 * x148
    x182 = x0 * (x105 + x153) + x148 * (x181 + x67)
    x183 = x0 * (3.0 * x103 + x27) + x145 * x3
    x184 = x0 * (x106 + x155 + x181 + x92)
    x185 = x102 * x156
    x186 = x154 + x185
    x187 = x148 * x186
    x188 = x184 + x187
    x189 = 23.36949578688709 * x145
    x190 = x116 * x189
    x191 = 3.0 * x154 + 2.0 * x185
    x192 = x0 * (x157 + x182 + x191)
    x193 = x188 * x57
    x194 = x192 + x193
    x195 = 30.16988933062603 * x144
    x196 = x116 * x195
    x197 = x186 * x57
    x198 = x0 * (x163 + 4.0 * x184 + 2.0 * x187 + 2.0 * x197) + x194 * x57
    x199 = x172 * x198
    x200 = x177 * x3
    x201 = 52.25578117937447 * x200
    x202 = x108 * x174
    x203 = x141 * x202
    x204 = -x61 - R[2]
    x205 = x204**2 * x72
    x206 = x205 + x74
    x207 = x100 * x70
    x208 = x206 * x207
    x209 = x133 * x146
    x210 = x204 * x72
    x211 = x0 * (x210 + x88)
    x212 = x204 * x88
    x213 = x212 + x74
    x214 = x204 * x213
    x215 = x211 + x214
    x216 = x206 * x96
    x217 = x139 * x210
    x218 = x0 * (x205 + x217 + x98)
    x219 = x215 * x62
    x220 = x218 + x219
    x221 = x215 * x96
    x222 = x213 * x62
    x223 = 2.0 * x0 * (2.0 * x211 + x214 + x222) + x220 * x62
    x224 = x179 * x206
    x225 = x177 * x82
    x226 = x174 * x71
    x227 = x174 * x54
    x228 = 23.36949578688709 * x227
    x229 = x223 * x228
    x230 = 8.832839159582136 * x227
    x231 = x230 * (
        x0 * (x139 * (x211 + x222) + 3.0 * x218 + 3.0 * x219 + x26 * (x140 + x217))
        + x223 * x62
    )
    x232 = x123 * x189
    x233 = x123 * x195
    x234 = x120 * x202
    x235 = x130 * x204
    x236 = x0 * (x130 + x210) + x204 * (x235 + x74)
    x237 = x0 * (x131 + x212 + x235 + x98)
    x238 = x129 * x213
    x239 = x211 + x238
    x240 = x204 * x239
    x241 = x237 + x240
    x242 = 3.0 * x211 + 2.0 * x238
    x243 = x0 * (x214 + x236 + x242)
    x244 = x241 * x62
    x245 = x243 + x244
    x246 = x239 * x62
    x247 = x0 * (x220 + 4.0 * x237 + 2.0 * x240 + 2.0 * x246) + x245 * x62
    x248 = x228 * x247

    # 135 item(s)
    result[0, 0, 0] = numpy.sum(
        x55
        * (
            x0
            * (x26 * (x14 + x21 + x25) + x32 * (x29 + x31) + 3.0 * x35 + 3.0 * x38 + x45)
            + x3 * x47
        )
    )
    result[0, 0, 1] = numpy.sum(x58 * x60)
    result[0, 0, 2] = numpy.sum(x60 * x63)
    result[0, 0, 3] = numpy.sum(x64 * x71)
    result[0, 0, 4] = numpy.sum(52.25578117937447 * x58 * x62 * x64)
    result[0, 0, 5] = numpy.sum(x46 * x79)
    result[0, 0, 6] = numpy.sum(x82 * x84)
    result[0, 0, 7] = numpy.sum(x62 * x84 * x85)
    result[0, 0, 8] = numpy.sum(x75 * x86 * x87)
    result[0, 0, 9] = numpy.sum(x86 * x90)
    result[0, 0, 10] = numpy.sum(x91 * x94)
    result[0, 0, 11] = numpy.sum(x82 * x91 * x95)
    result[0, 0, 12] = numpy.sum(x34 * x69 * x97)
    result[0, 0, 13] = numpy.sum(x57 * x77 * x90 * x91)
    result[0, 0, 14] = numpy.sum(x101 * x91)
    result[0, 1, 0] = numpy.sum(x102 * x104)
    result[0, 1, 1] = numpy.sum(x107 * x109 * x45)
    result[0, 1, 2] = numpy.sum(x102 * x110 * x63)
    result[0, 1, 3] = numpy.sum(x113 * x114 * x44)
    result[0, 1, 4] = numpy.sum(x115 * x117 * x44)
    result[0, 1, 5] = numpy.sum(x102 * x44 * x79)
    result[0, 1, 6] = numpy.sum(x121 * x42)
    result[0, 1, 7] = numpy.sum(x113 * x117 * x122)
    result[0, 1, 8] = numpy.sum(x107 * x122 * x97)
    result[0, 1, 9] = numpy.sum(x102 * x123 * x42 * x90)
    result[0, 1, 10] = numpy.sum(x124 * x126 * x51)
    result[0, 1, 11] = numpy.sum(x121 * x125 * x62)
    result[0, 1, 12] = numpy.sum(x113 * x125 * x127)
    result[0, 1, 13] = numpy.sum(x107 * x128 * x90)
    result[0, 1, 14] = numpy.sum(x101 * x102 * x126)
    result[0, 2, 0] = numpy.sum(x104 * x129)
    result[0, 2, 1] = numpy.sum(x110 * x129 * x58)
    result[0, 2, 2] = numpy.sum(x132 * x133 * x45)
    result[0, 2, 3] = numpy.sum(x129 * x44 * x50 * x71)
    result[0, 2, 4] = numpy.sum(x132 * x134 * x44)
    result[0, 2, 5] = numpy.sum(x137 * x44 * x78)
    result[0, 2, 6] = numpy.sum(x116 * x129 * x42 * x82)
    result[0, 2, 7] = numpy.sum(x122 * x138 * x68)
    result[0, 2, 8] = numpy.sum(x122 * x123 * x137 * x57)
    result[0, 2, 9] = numpy.sum(x142 * x42)
    result[0, 2, 10] = numpy.sum(x126 * x129 * x94)
    result[0, 2, 11] = numpy.sum(x128 * x132 * x82)
    result[0, 2, 12] = numpy.sum(x128 * x137 * x69)
    result[0, 2, 13] = numpy.sum(x125 * x142 * x57)
    result[0, 2, 14] = numpy.sum(x100 * x126 * x143)
    result[1, 0, 0] = numpy.sum(x147 * x152)
    result[1, 0, 1] = numpy.sum(x158 * x159)
    result[1, 0, 2] = numpy.sum(x150 * x159 * x62)
    result[1, 0, 3] = numpy.sum(x114 * x163 * x21)
    result[1, 0, 4] = numpy.sum(x117 * x164 * x21)
    result[1, 0, 5] = numpy.sum(x127 * x150 * x21)
    result[1, 0, 6] = numpy.sum(x109 * x166 * x19)
    result[1, 0, 7] = numpy.sum(x163 * x167 * x19)
    result[1, 0, 8] = numpy.sum(x164 * x19 * x97)
    result[1, 0, 9] = numpy.sum(x168 * x19 * x90)
    result[1, 0, 10] = numpy.sum(x15 * x171)
    result[1, 0, 11] = numpy.sum(x15 * x173 * x62)
    result[1, 0, 12] = numpy.sum(x15 * x163 * x176)
    result[1, 0, 13] = numpy.sum(x15 * x158 * x178)
    result[1, 0, 14] = numpy.sum(x15 * x150 * x180)
    result[1, 1, 0] = numpy.sum(x151 * x182 * x183)
    result[1, 1, 1] = numpy.sum(x188 * x190)
    result[1, 1, 2] = numpy.sum(x182 * x190 * x62)
    result[1, 1, 3] = numpy.sum(x194 * x196)
    result[1, 1, 4] = numpy.sum(x144 * x167 * x188)
    result[1, 1, 5] = numpy.sum(x127 * x144 * x182)
    result[1, 1, 6] = numpy.sum(x199 * x3)
    result[1, 1, 7] = numpy.sum(52.25578117937447 * x169 * x194 * x3 * x95)
    result[1, 1, 8] = numpy.sum(x188 * x201 * x75)
    result[1, 1, 9] = numpy.sum(x178 * x182 * x3)
    result[1, 1, 10] = numpy.sum(
        x170
        * (
            x0
            * (
                x118 * (x184 + x197)
                + x166
                + 3.0 * x192
                + 3.0 * x193
                + x26 * (x113 + x165 + x191)
            )
            + x198 * x57
        )
    )
    result[1, 1, 11] = numpy.sum(x199 * x62)
    result[1, 1, 12] = numpy.sum(x176 * x194)
    result[1, 1, 13] = numpy.sum(x178 * x188)
    result[1, 1, 14] = numpy.sum(x180 * x182)
    result[1, 2, 0] = numpy.sum(x129 * x152 * x183)
    result[1, 2, 1] = numpy.sum(x129 * x158 * x190)
    result[1, 2, 2] = numpy.sum(x138 * x150 * x189)
    result[1, 2, 3] = numpy.sum(x129 * x163 * x196)
    result[1, 2, 4] = numpy.sum(x138 * x144 * x164)
    result[1, 2, 5] = numpy.sum(x137 * x168 * x195)
    result[1, 2, 6] = numpy.sum(x129 * x173 * x3)
    result[1, 2, 7] = numpy.sum(x132 * x163 * x201)
    result[1, 2, 8] = numpy.sum(x137 * x164 * x200)
    result[1, 2, 9] = numpy.sum(x150 * x203 * x3)
    result[1, 2, 10] = numpy.sum(x129 * x171)
    result[1, 2, 11] = numpy.sum(x132 * x166 * x202)
    result[1, 2, 12] = numpy.sum(x137 * x163 * x175)
    result[1, 2, 13] = numpy.sum(x158 * x203)
    result[1, 2, 14] = numpy.sum(x143 * x150 * x179)
    result[2, 0, 0] = numpy.sum(x147 * x208)
    result[2, 0, 1] = numpy.sum(x206 * x209 * x57)
    result[2, 0, 2] = numpy.sum(x209 * x215)
    result[2, 0, 3] = numpy.sum(x21 * x216 * x69)
    result[2, 0, 4] = numpy.sum(x134 * x21 * x215)
    result[2, 0, 5] = numpy.sum(x21 * x220 * x78)
    result[2, 0, 6] = numpy.sum(x19 * x216 * x82)
    result[2, 0, 7] = numpy.sum(x19 * x221 * x85)
    result[2, 0, 8] = numpy.sum(x134 * x19 * x220)
    result[2, 0, 9] = numpy.sum(x133 * x19 * x223)
    result[2, 0, 10] = numpy.sum(x15 * x224 * x93)
    result[2, 0, 11] = numpy.sum(x15 * x215 * x225)
    result[2, 0, 12] = numpy.sum(x15 * x220 * x226)
    result[2, 0, 13] = numpy.sum(x15 * x229 * x57)
    result[2, 0, 14] = numpy.sum(x15 * x231)
    result[2, 1, 0] = numpy.sum(x102 * x183 * x208)
    result[2, 1, 1] = numpy.sum(x107 * x189 * x216)
    result[2, 1, 2] = numpy.sum(x102 * x215 * x232)
    result[2, 1, 3] = numpy.sum(x113 * x195 * x216)
    result[2, 1, 4] = numpy.sum(x115 * x144 * x221)
    result[2, 1, 5] = numpy.sum(x102 * x220 * x233)
    result[2, 1, 6] = numpy.sum(x206 * x234 * x3)
    result[2, 1, 7] = numpy.sum(x113 * x201 * x215)
    result[2, 1, 8] = numpy.sum(x115 * x200 * x220)
    result[2, 1, 9] = numpy.sum(x102 * x229 * x3)
    result[2, 1, 10] = numpy.sum(x124 * x224)
    result[2, 1, 11] = numpy.sum(x215 * x234)
    result[2, 1, 12] = numpy.sum(x113 * x175 * x220)
    result[2, 1, 13] = numpy.sum(x107 * x202 * x223)
    result[2, 1, 14] = numpy.sum(x102 * x231)
    result[2, 2, 0] = numpy.sum(x183 * x207 * x236)
    result[2, 2, 1] = numpy.sum(x232 * x236 * x57)
    result[2, 2, 2] = numpy.sum(x232 * x241)
    result[2, 2, 3] = numpy.sum(x144 * x236 * x69 * x96)
    result[2, 2, 4] = numpy.sum(x134 * x144 * x241)
    result[2, 2, 5] = numpy.sum(x233 * x245)
    result[2, 2, 6] = numpy.sum(x225 * x236 * x3)
    result[2, 2, 7] = numpy.sum(x200 * x241 * x85)
    result[2, 2, 8] = numpy.sum(x227 * x245 * x3 * x87)
    result[2, 2, 9] = numpy.sum(x248 * x3)
    result[2, 2, 10] = numpy.sum(x179 * x236 * x93)
    result[2, 2, 11] = numpy.sum(x225 * x241)
    result[2, 2, 12] = numpy.sum(x226 * x245)
    result[2, 2, 13] = numpy.sum(x248 * x57)
    result[2, 2, 14] = numpy.sum(
        x230
        * (
            x0
            * (
                x139 * (x237 + x246)
                + x223
                + 3.0 * x243
                + 3.0 * x244
                + x26 * (x137 + x222 + x242)
            )
            + x247 * x62
        )
    )
    return result


def diag_quadrupole3d_20(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ds) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 1), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - R[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3**2 * x8
    x10 = x0 * x8
    x11 = -x2 - A[0]
    x12 = x11 * x8
    x13 = x12 * x3
    x14 = x0 * (x12 + x3 * x8) + x3 * (x10 + x13)
    x15 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x16 = numpy.sqrt(ax**3.5)
    x17 = numpy.sqrt(bx**1.5)
    x18 = 6.531972647421809 * da * db * x16 * x17
    x19 = x15 * x18
    x20 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x21 = 0.5641895835477563 * x1
    x22 = x20 * x21
    x23 = -x1 * (ax * A[1] + bx * B[1])
    x24 = -x23 - A[1]
    x25 = 11.31370849898476 * da * db * x16 * x17
    x26 = x15 * x25
    x27 = x14 * x22 * x26
    x28 = -x1 * (ax * A[2] + bx * B[2])
    x29 = -x28 - A[2]
    x30 = x20 * x7
    x31 = x0 * x30
    x32 = x24**2 * x30 + x31
    x33 = x10 + x9
    x34 = 0.3183098861837907 * x6
    x35 = x33 * x34
    x36 = x26 * x29
    x37 = x15 * x7
    x38 = x0 * x37
    x39 = x18 * (x29**2 * x37 + x38)
    x40 = x10 + x11**2 * x8
    x41 = -x23 - R[1]
    x42 = x30 * x41**2
    x43 = x31 + x42
    x44 = x34 * x43
    x45 = x24 * x30
    x46 = x41 * x45
    x47 = x0 * (x30 * x41 + x45) + x41 * (x31 + x46)
    x48 = x21 * x5
    x49 = x26 * x47 * x48
    x50 = -x28 - R[2]
    x51 = x37 * x50**2
    x52 = x38 + x51
    x53 = x18 * x34 * x52
    x54 = x22 * x5
    x55 = x29 * x37
    x56 = x50 * x55
    x57 = x0 * (x37 * x50 + x55) + x50 * (x38 + x56)
    x58 = x25 * x54 * x57

    # 18 item(s)
    result[0, 0, 0] = numpy.sum(
        x19 * x22 * (x0 * (3.0 * x10 + 2.0 * x13 + x9) + x11 * x14)
    )
    result[0, 1, 0] = numpy.sum(x24 * x27)
    result[0, 2, 0] = numpy.sum(x27 * x29)
    result[0, 3, 0] = numpy.sum(x19 * x32 * x35)
    result[0, 4, 0] = numpy.sum(x22 * x24 * x33 * x36)
    result[0, 5, 0] = numpy.sum(x20 * x35 * x39)
    result[1, 0, 0] = numpy.sum(x19 * x40 * x44)
    result[1, 1, 0] = numpy.sum(x11 * x49)
    result[1, 2, 0] = numpy.sum(x11 * x36 * x43 * x48)
    result[1, 3, 0] = numpy.sum(
        x19 * x48 * (x0 * (3.0 * x31 + x42 + 2.0 * x46) + x24 * x47)
    )
    result[1, 4, 0] = numpy.sum(x29 * x49)
    result[1, 5, 0] = numpy.sum(x39 * x44 * x5)
    result[2, 0, 0] = numpy.sum(x20 * x40 * x53)
    result[2, 1, 0] = numpy.sum(x11 * x24 * x25 * x52 * x54)
    result[2, 2, 0] = numpy.sum(x11 * x58)
    result[2, 3, 0] = numpy.sum(x32 * x5 * x53)
    result[2, 4, 0] = numpy.sum(x24 * x58)
    result[2, 5, 0] = numpy.sum(
        x18 * x54 * (x0 * (3.0 * x38 + x51 + 2.0 * x56) + x29 * x57)
    )
    return result


def diag_quadrupole3d_21(ax, da, A, bx, db, B, R):
    """Cartesian 3D (dp) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 3), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - R[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x0 * x8
    x10 = -x2 - B[0]
    x11 = x3 * x8
    x12 = x10 * x11
    x13 = x12 + x9
    x14 = x13 * x3
    x15 = -x2 - A[0]
    x16 = x13 * x15
    x17 = x10 * x8
    x18 = x0 * (x11 + x17)
    x19 = x15 * x5
    x20 = x19 * x7
    x21 = x20 * x3
    x22 = x0 * (x11 + x20) + x3 * (x21 + x9)
    x23 = 3.0 * x9
    x24 = x10 * x20
    x25 = x0 * (x12 + x21 + x23 + x24) + x3 * (x16 + x18)
    x26 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x27 = da * db * numpy.sqrt(ax**3.5) * numpy.sqrt(bx**2.5)
    x28 = x26 * x27
    x29 = 13.06394529484362 * x28
    x30 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x31 = 0.5641895835477563 * x1
    x32 = x30 * x31
    x33 = x29 * x32
    x34 = -x1 * (ax * A[1] + bx * B[1])
    x35 = -x34 - B[1]
    x36 = x3**2 * x8
    x37 = x33 * (x0 * (2.0 * x21 + x23 + x36) + x15 * x22)
    x38 = -x1 * (ax * A[2] + bx * B[2])
    x39 = -x38 - B[2]
    x40 = -x34 - A[1]
    x41 = x32 * x40
    x42 = 22.62741699796953 * x28
    x43 = x25 * x42
    x44 = x22 * x42
    x45 = x0 * x7
    x46 = x30 * x45
    x47 = x30 * x7
    x48 = x40 * x47
    x49 = x35 * x48
    x50 = x46 + x49
    x51 = 0.3183098861837907 * x6
    x52 = x50 * x51
    x53 = -x38 - A[2]
    x54 = x32 * x53
    x55 = x27 * x51
    x56 = x30 * x55
    x57 = x26 * x45
    x58 = x26 * x7
    x59 = x53 * x58
    x60 = x39 * x59
    x61 = x57 + x60
    x62 = 22.62741699796953 * x61
    x63 = x56 * x62
    x64 = x14 + x18
    x65 = x40**2 * x47 + x46
    x66 = x29 * x51
    x67 = x65 * x66
    x68 = x35 * x47
    x69 = x0 * (x48 + x68) + x40 * x50
    x70 = x36 + x9
    x71 = x42 * x53
    x72 = x53**2 * x58 + x57
    x73 = 13.06394529484362 * x56
    x74 = x72 * x73
    x75 = x39 * x58
    x76 = x0 * (x59 + x75) + x53 * x61
    x77 = x24 + x9
    x78 = x0 * (x17 + x20) + x15 * x77
    x79 = -x34 - R[1]
    x80 = x47 * x79**2
    x81 = x46 + x80
    x82 = x66 * x81
    x83 = x47 * x79
    x84 = x0 * (x68 + x83)
    x85 = x68 * x79
    x86 = x46 + x85
    x87 = x79 * x86
    x88 = x84 + x87
    x89 = x15**2 * x8 + x9
    x90 = x48 * x79
    x91 = x0 * (x48 + x83) + x79 * (x46 + x90)
    x92 = x42 * x91
    x93 = x51 * x77
    x94 = 3.0 * x46
    x95 = x40 * x86
    x96 = x0 * (x49 + x85 + x90 + x94) + x79 * (x84 + x95)
    x97 = x19 * x31
    x98 = x31 * x5
    x99 = x29 * x98
    x100 = x99 * (x0 * (x80 + 2.0 * x90 + x94) + x40 * x91)
    x101 = x5 * x55
    x102 = 13.06394529484362 * x101
    x103 = x102 * x72
    x104 = -x38 - R[2]
    x105 = x104**2 * x58
    x106 = x105 + x57
    x107 = x106 * x73
    x108 = x104 * x58
    x109 = x0 * (x108 + x75)
    x110 = x104 * x75
    x111 = x110 + x57
    x112 = x104 * x111
    x113 = x109 + x112
    x114 = x56 * x77
    x115 = 22.62741699796953 * x106
    x116 = x19 * x27
    x117 = x104 * x59
    x118 = x0 * (x108 + x59) + x104 * (x117 + x57)
    x119 = 22.62741699796953 * x118
    x120 = x116 * x32
    x121 = 3.0 * x57
    x122 = x111 * x53
    x123 = x0 * (x110 + x117 + x121 + x60) + x104 * (x109 + x122)
    x124 = 22.62741699796953 * x123
    x125 = x102 * x106
    x126 = x27 * x5
    x127 = x119 * x126
    x128 = x126 * x32
    x129 = 13.06394529484362 * x128
    x130 = x129 * (x0 * (x105 + 2.0 * x117 + x121) + x118 * x53)

    # 54 item(s)
    result[0, 0, 0] = numpy.sum(
        x33 * (x0 * (x14 + 2.0 * x16 + 3.0 * x18 + x22) + x15 * x25)
    )
    result[0, 0, 1] = numpy.sum(x35 * x37)
    result[0, 0, 2] = numpy.sum(x37 * x39)
    result[0, 1, 0] = numpy.sum(x41 * x43)
    result[0, 1, 1] = numpy.sum(x44 * x52)
    result[0, 1, 2] = numpy.sum(x39 * x41 * x44)
    result[0, 2, 0] = numpy.sum(x43 * x54)
    result[0, 2, 1] = numpy.sum(x35 * x44 * x54)
    result[0, 2, 2] = numpy.sum(x22 * x63)
    result[0, 3, 0] = numpy.sum(x64 * x67)
    result[0, 3, 1] = numpy.sum(x66 * x69 * x70)
    result[0, 3, 2] = numpy.sum(x39 * x67 * x70)
    result[0, 4, 0] = numpy.sum(x41 * x64 * x71)
    result[0, 4, 1] = numpy.sum(x52 * x70 * x71)
    result[0, 4, 2] = numpy.sum(x40 * x63 * x70)
    result[0, 5, 0] = numpy.sum(x64 * x74)
    result[0, 5, 1] = numpy.sum(x35 * x70 * x74)
    result[0, 5, 2] = numpy.sum(x70 * x73 * x76)
    result[1, 0, 0] = numpy.sum(x78 * x82)
    result[1, 0, 1] = numpy.sum(x66 * x88 * x89)
    result[1, 0, 2] = numpy.sum(x39 * x82 * x89)
    result[1, 1, 0] = numpy.sum(x92 * x93)
    result[1, 1, 1] = numpy.sum(x42 * x96 * x97)
    result[1, 1, 2] = numpy.sum(x39 * x92 * x97)
    result[1, 2, 0] = numpy.sum(x71 * x81 * x93)
    result[1, 2, 1] = numpy.sum(x71 * x88 * x97)
    result[1, 2, 2] = numpy.sum(x19 * x55 * x62 * x81)
    result[1, 3, 0] = numpy.sum(x10 * x100)
    result[1, 3, 1] = numpy.sum(
        x99 * (x0 * (3.0 * x84 + x87 + x91 + 2.0 * x95) + x40 * x96)
    )
    result[1, 3, 2] = numpy.sum(x100 * x39)
    result[1, 4, 0] = numpy.sum(x10 * x53 * x92 * x98)
    result[1, 4, 1] = numpy.sum(x71 * x96 * x98)
    result[1, 4, 2] = numpy.sum(x101 * x62 * x91)
    result[1, 5, 0] = numpy.sum(x10 * x103 * x81)
    result[1, 5, 1] = numpy.sum(x103 * x88)
    result[1, 5, 2] = numpy.sum(x102 * x76 * x81)
    result[2, 0, 0] = numpy.sum(x107 * x78)
    result[2, 0, 1] = numpy.sum(x107 * x35 * x89)
    result[2, 0, 2] = numpy.sum(x113 * x73 * x89)
    result[2, 1, 0] = numpy.sum(x114 * x115 * x40)
    result[2, 1, 1] = numpy.sum(x115 * x116 * x52)
    result[2, 1, 2] = numpy.sum(22.62741699796953 * x113 * x116 * x41)
    result[2, 2, 0] = numpy.sum(x114 * x119)
    result[2, 2, 1] = numpy.sum(x119 * x120 * x35)
    result[2, 2, 2] = numpy.sum(x120 * x124)
    result[2, 3, 0] = numpy.sum(x10 * x125 * x65)
    result[2, 3, 1] = numpy.sum(x125 * x69)
    result[2, 3, 2] = numpy.sum(x102 * x113 * x65)
    result[2, 4, 0] = numpy.sum(x10 * x127 * x41)
    result[2, 4, 1] = numpy.sum(x127 * x52)
    result[2, 4, 2] = numpy.sum(x124 * x128 * x40)
    result[2, 5, 0] = numpy.sum(x10 * x130)
    result[2, 5, 1] = numpy.sum(x130 * x35)
    result[2, 5, 2] = numpy.sum(
        x129 * (x0 * (3.0 * x109 + x112 + x118 + 2.0 * x122) + x123 * x53)
    )
    return result


def diag_quadrupole3d_22(ax, da, A, bx, db, B, R):
    """Cartesian 3D (dd) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 6), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3 * x8
    x10 = -x2 - R[0]
    x11 = x10 * x8
    x12 = x0 * (x11 + x9)
    x13 = -x2 - A[0]
    x14 = x0 * x8
    x15 = x10 * x9
    x16 = x14 + x15
    x17 = x13 * x16
    x18 = x12 + x17
    x19 = 2.0 * x3
    x20 = x10 * x18
    x21 = 3.0 * x14
    x22 = x13 * x9
    x23 = x11 * x13
    x24 = x0 * (x15 + x21 + x22 + x23)
    x25 = x10**2 * x8
    x26 = x21 + x25
    x27 = x10 * x16
    x28 = x12 + x27
    x29 = x0 * (x11 * x19 + x26) + x28 * x3
    x30 = x13 * x8
    x31 = x0 * (x11 + x30) + x10 * (x14 + x23)
    x32 = x0 * (3.0 * x12 + 2.0 * x17 + x27 + x31)
    x33 = x20 + x24
    x34 = x3 * x33 + x32
    x35 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x36 = da * db * numpy.sqrt(ax**3.5) * numpy.sqrt(bx**3.5)
    x37 = x35 * x36
    x38 = 15.08494466531302 * x37
    x39 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x40 = 0.5641895835477563 * x1
    x41 = x39 * x40
    x42 = -x1 * (ax * A[1] + bx * B[1])
    x43 = -x42 - B[1]
    x44 = 26.12789058968724 * x43
    x45 = x37 * x41
    x46 = x45 * (x13 * x33 + x32)
    x47 = -x1 * (ax * A[2] + bx * B[2])
    x48 = -x47 - B[2]
    x49 = 26.12789058968724 * x48
    x50 = x0 * (2.0 * x23 + x26) + x13 * x31
    x51 = x37 * x50
    x52 = x39 * x7
    x53 = x43**2 * x52
    x54 = x0 * x52
    x55 = x53 + x54
    x56 = 15.08494466531302 * x55
    x57 = 0.3183098861837907 * x6
    x58 = x56 * x57
    x59 = x41 * x44
    x60 = x35 * x7
    x61 = x48**2 * x60
    x62 = x0 * x60
    x63 = x61 + x62
    x64 = 15.08494466531302 * x63
    x65 = x36 * x57
    x66 = x39 * x65
    x67 = -x42 - A[1]
    x68 = 26.12789058968724 * x67
    x69 = x34 * x45
    x70 = x52 * x67
    x71 = x43 * x70
    x72 = x54 + x71
    x73 = 45.25483399593905 * x72
    x74 = x37 * x57
    x75 = x73 * x74
    x76 = 45.25483399593905 * x48
    x77 = x33 * x45
    x78 = x43 * x52
    x79 = x0 * (x70 + x78)
    x80 = x43 * x72 + x79
    x81 = 26.12789058968724 * x31
    x82 = x74 * x81
    x83 = x66 * x81
    x84 = -x47 - A[2]
    x85 = 26.12789058968724 * x84
    x86 = 45.25483399593905 * x84
    x87 = x60 * x84
    x88 = x48 * x87
    x89 = x62 + x88
    x90 = 45.25483399593905 * x89
    x91 = x66 * x90
    x92 = x48 * x60
    x93 = x0 * (x87 + x92)
    x94 = x48 * x89 + x93
    x95 = x52 * x67**2 + x54
    x96 = 15.08494466531302 * x95
    x97 = x67 * x72 + x79
    x98 = 26.12789058968724 * x28
    x99 = x74 * x98
    x100 = x14 + x25
    x101 = 3.0 * x54
    x102 = 2.0 * x43
    x103 = x0 * (x101 + x102 * x70 + x53) + x67 * x80
    x104 = x38 * x57
    x105 = 26.12789058968724 * x74
    x106 = x100 * x105
    x107 = 0.1795871221251666 * x36
    x108 = x100 * x107
    x109 = x100 * x66
    x110 = x60 * x84**2 + x62
    x111 = 15.08494466531302 * x110
    x112 = x66 * x98
    x113 = x84 * x89 + x93
    x114 = 3.0 * x62
    x115 = 2.0 * x48
    x116 = (
        15.08494466531302 * x0 * (x114 + x115 * x87 + x61) + 15.08494466531302 * x84 * x94
    )
    x117 = -x42 - R[1]
    x118 = x117**2 * x52
    x119 = x118 + x54
    x120 = x3**2 * x8
    x121 = x0 * (x30 + x9)
    x122 = x14 + x22
    x123 = x121 + x122 * x3
    x124 = x0 * (x120 + x19 * x30 + x21) + x123 * x13
    x125 = x117 * x52
    x126 = x0 * (x125 + x78)
    x127 = x117 * x78
    x128 = x127 + x54
    x129 = x117 * x128
    x130 = x126 + x129
    x131 = x121 + x122 * x13
    x132 = x105 * x131
    x133 = x13**2 * x8 + x14
    x134 = x101 + x118
    x135 = x0 * (x102 * x125 + x134) + x130 * x43
    x136 = x107 * x119
    x137 = x117 * x70
    x138 = x0 * (x125 + x70) + x117 * (x137 + x54)
    x139 = x105 * x123
    x140 = x0 * (x101 + x127 + x137 + x71)
    x141 = x128 * x67
    x142 = x126 + x141
    x143 = x117 * x142
    x144 = x140 + x143
    x145 = 45.25483399593905 * x122
    x146 = x145 * x74
    x147 = 26.12789058968724 * x13
    x148 = x0 * (3.0 * x126 + x129 + x138 + 2.0 * x141)
    x149 = x144 * x43 + x148
    x150 = x40 * x5
    x151 = x150 * x37
    x152 = x149 * x151
    x153 = x13 * x151
    x154 = x5 * x65
    x155 = 26.12789058968724 * x154
    x156 = x138 * x155
    x157 = x154 * x90
    x158 = x119 * x155
    x159 = x120 + x14
    x160 = x0 * (x134 + 2.0 * x137) + x138 * x67
    x161 = x151 * (x144 * x67 + x148)
    x162 = 26.12789058968724 * x3
    x163 = x151 * x3
    x164 = x130 * x155
    x165 = -x47 - R[2]
    x166 = x165**2 * x60
    x167 = x166 + x62
    x168 = 15.08494466531302 * x66
    x169 = 26.12789058968724 * x66
    x170 = x131 * x169
    x171 = x165 * x60
    x172 = x0 * (x171 + x92)
    x173 = x165 * x92
    x174 = x173 + x62
    x175 = x165 * x174
    x176 = x172 + x175
    x177 = x107 * x167
    x178 = x114 + x166
    x179 = x0 * (x115 * x171 + x178) + x176 * x48
    x180 = x123 * x169
    x181 = x145 * x66
    x182 = x155 * x80
    x183 = x154 * x73
    x184 = x36 * x5
    x185 = x184 * x41
    x186 = x13 * x185
    x187 = x165 * x87
    x188 = x0 * (x171 + x87) + x165 * (x187 + x62)
    x189 = x0 * (x114 + x173 + x187 + x88)
    x190 = x174 * x84
    x191 = x172 + x190
    x192 = x165 * x191
    x193 = x189 + x192
    x194 = 45.25483399593905 * x193
    x195 = x0 * (3.0 * x172 + x175 + x188 + 2.0 * x190)
    x196 = x193 * x48 + x195
    x197 = x185 * x196
    x198 = x155 * x97
    x199 = x0 * (x178 + 2.0 * x187) + x188 * x84
    x200 = x184 * x199
    x201 = x185 * (x193 * x84 + x195)

    # 108 item(s)
    result[0, 0, 0] = numpy.sum(
        x38 * x41 * (x0 * (x18 * x19 + 2.0 * x20 + 4.0 * x24 + x29) + x13 * x34)
    )
    result[0, 0, 1] = numpy.sum(x44 * x46)
    result[0, 0, 2] = numpy.sum(x46 * x49)
    result[0, 0, 3] = numpy.sum(x51 * x58)
    result[0, 0, 4] = numpy.sum(x48 * x51 * x59)
    result[0, 0, 5] = numpy.sum(x50 * x64 * x66)
    result[0, 1, 0] = numpy.sum(x68 * x69)
    result[0, 1, 1] = numpy.sum(x33 * x75)
    result[0, 1, 2] = numpy.sum(x67 * x76 * x77)
    result[0, 1, 3] = numpy.sum(x80 * x82)
    result[0, 1, 4] = numpy.sum(x31 * x48 * x75)
    result[0, 1, 5] = numpy.sum(x63 * x67 * x83)
    result[0, 2, 0] = numpy.sum(x69 * x85)
    result[0, 2, 1] = numpy.sum(x43 * x77 * x86)
    result[0, 2, 2] = numpy.sum(x33 * x91)
    result[0, 2, 3] = numpy.sum(x55 * x82 * x84)
    result[0, 2, 4] = numpy.sum(x31 * x43 * x91)
    result[0, 2, 5] = numpy.sum(x83 * x94)
    result[0, 3, 0] = numpy.sum(x29 * x74 * x96)
    result[0, 3, 1] = numpy.sum(x97 * x99)
    result[0, 3, 2] = numpy.sum(x48 * x95 * x99)
    result[0, 3, 3] = numpy.sum(x100 * x103 * x104)
    result[0, 3, 4] = numpy.sum(x106 * x48 * x97)
    result[0, 3, 5] = numpy.sum(x108 * x64 * x95)
    result[0, 4, 0] = numpy.sum(x29 * x45 * x68 * x84)
    result[0, 4, 1] = numpy.sum(x28 * x75 * x84)
    result[0, 4, 2] = numpy.sum(x28 * x67 * x91)
    result[0, 4, 3] = numpy.sum(x106 * x80 * x84)
    result[0, 4, 4] = numpy.sum(x108 * x72 * x90)
    result[0, 4, 5] = numpy.sum(x109 * x68 * x94)
    result[0, 5, 0] = numpy.sum(x111 * x29 * x66)
    result[0, 5, 1] = numpy.sum(x110 * x112 * x43)
    result[0, 5, 2] = numpy.sum(x112 * x113)
    result[0, 5, 3] = numpy.sum(x108 * x111 * x55)
    result[0, 5, 4] = numpy.sum(x109 * x113 * x44)
    result[0, 5, 5] = numpy.sum(x109 * x116)
    result[1, 0, 0] = numpy.sum(x104 * x119 * x124)
    result[1, 0, 1] = numpy.sum(x130 * x132)
    result[1, 0, 2] = numpy.sum(x119 * x132 * x48)
    result[1, 0, 3] = numpy.sum(x104 * x133 * x135)
    result[1, 0, 4] = numpy.sum(x105 * x130 * x133 * x48)
    result[1, 0, 5] = numpy.sum(x133 * x136 * x64)
    result[1, 1, 0] = numpy.sum(x138 * x139)
    result[1, 1, 1] = numpy.sum(x144 * x146)
    result[1, 1, 2] = numpy.sum(x138 * x146 * x48)
    result[1, 1, 3] = numpy.sum(x147 * x152)
    result[1, 1, 4] = numpy.sum(x144 * x153 * x76)
    result[1, 1, 5] = numpy.sum(x13 * x156 * x63)
    result[1, 2, 0] = numpy.sum(x119 * x139 * x84)
    result[1, 2, 1] = numpy.sum(x130 * x146 * x84)
    result[1, 2, 2] = numpy.sum(x122 * x136 * x90)
    result[1, 2, 3] = numpy.sum(x135 * x153 * x85)
    result[1, 2, 4] = numpy.sum(x13 * x130 * x157)
    result[1, 2, 5] = numpy.sum(x13 * x158 * x94)
    result[1, 3, 0] = numpy.sum(x104 * x159 * x160)
    result[1, 3, 1] = numpy.sum(x161 * x162)
    result[1, 3, 2] = numpy.sum(x160 * x163 * x49)
    result[1, 3, 3] = numpy.sum(
        x150 * x38 * (x0 * (x102 * x142 + x135 + 4.0 * x140 + 2.0 * x143) + x149 * x67)
    )
    result[1, 3, 4] = numpy.sum(x161 * x49)
    result[1, 3, 5] = numpy.sum(x154 * x160 * x64)
    result[1, 4, 0] = numpy.sum(x105 * x138 * x159 * x84)
    result[1, 4, 1] = numpy.sum(x144 * x163 * x86)
    result[1, 4, 2] = numpy.sum(x138 * x157 * x3)
    result[1, 4, 3] = numpy.sum(x152 * x85)
    result[1, 4, 4] = numpy.sum(x144 * x157)
    result[1, 4, 5] = numpy.sum(x156 * x94)
    result[1, 5, 0] = numpy.sum(x111 * x136 * x159)
    result[1, 5, 1] = numpy.sum(x110 * x164 * x3)
    result[1, 5, 2] = numpy.sum(x113 * x158 * x3)
    result[1, 5, 3] = numpy.sum(x111 * x135 * x154)
    result[1, 5, 4] = numpy.sum(x113 * x164)
    result[1, 5, 5] = numpy.sum(x116 * x119 * x154)
    result[2, 0, 0] = numpy.sum(x124 * x167 * x168)
    result[2, 0, 1] = numpy.sum(x167 * x170 * x43)
    result[2, 0, 2] = numpy.sum(x170 * x176)
    result[2, 0, 3] = numpy.sum(x133 * x177 * x56)
    result[2, 0, 4] = numpy.sum(x133 * x169 * x176 * x43)
    result[2, 0, 5] = numpy.sum(x133 * x168 * x179)
    result[2, 1, 0] = numpy.sum(x167 * x180 * x67)
    result[2, 1, 1] = numpy.sum(x122 * x177 * x73)
    result[2, 1, 2] = numpy.sum(x176 * x181 * x67)
    result[2, 1, 3] = numpy.sum(x13 * x167 * x182)
    result[2, 1, 4] = numpy.sum(x13 * x176 * x183)
    result[2, 1, 5] = numpy.sum(x179 * x186 * x68)
    result[2, 2, 0] = numpy.sum(x180 * x188)
    result[2, 2, 1] = numpy.sum(x181 * x188 * x43)
    result[2, 2, 2] = numpy.sum(x181 * x193)
    result[2, 2, 3] = numpy.sum(x13 * x155 * x188 * x55)
    result[2, 2, 4] = numpy.sum(x186 * x194 * x43)
    result[2, 2, 5] = numpy.sum(x147 * x197)
    result[2, 3, 0] = numpy.sum(x159 * x177 * x96)
    result[2, 3, 1] = numpy.sum(x167 * x198 * x3)
    result[2, 3, 2] = numpy.sum(x155 * x176 * x3 * x95)
    result[2, 3, 3] = numpy.sum(15.08494466531302 * x103 * x154 * x167)
    result[2, 3, 4] = numpy.sum(x176 * x198)
    result[2, 3, 5] = numpy.sum(x154 * x179 * x96)
    result[2, 4, 0] = numpy.sum(x159 * x169 * x188 * x67)
    result[2, 4, 1] = numpy.sum(x183 * x188 * x3)
    result[2, 4, 2] = numpy.sum(x185 * x194 * x3 * x67)
    result[2, 4, 3] = numpy.sum(x182 * x188)
    result[2, 4, 4] = numpy.sum(x183 * x193)
    result[2, 4, 5] = numpy.sum(x197 * x68)
    result[2, 5, 0] = numpy.sum(x159 * x168 * x199)
    result[2, 5, 1] = numpy.sum(x200 * x3 * x59)
    result[2, 5, 2] = numpy.sum(x162 * x201)
    result[2, 5, 3] = numpy.sum(x200 * x58)
    result[2, 5, 4] = numpy.sum(x201 * x44)
    result[2, 5, 5] = numpy.sum(
        15.08494466531302
        * x185
        * (x0 * (x115 * x191 + x179 + 4.0 * x189 + 2.0 * x192) + x196 * x84)
    )
    return result


def diag_quadrupole3d_23(ax, da, A, bx, db, B, R):
    """Cartesian 3D (df) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 10), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x0 * x8
    x10 = -x2 - R[0]
    x11 = x3 * x8
    x12 = x10 * x11
    x13 = x12 + x9
    x14 = x13 * x3
    x15 = -x2 - A[0]
    x16 = x15 * x5
    x17 = x16 * x7
    x18 = x0 * (x11 + x17)
    x19 = x17 * x3
    x20 = x19 + x9
    x21 = x20 * x3
    x22 = x18 + x21
    x23 = x13 * x15
    x24 = x10 * x8
    x25 = x0 * (x11 + x24)
    x26 = 2.0 * x23 + 3.0 * x25
    x27 = 2.0 * x0
    x28 = 3.0 * x9
    x29 = x10 * x17
    x30 = x0 * (x12 + x19 + x28 + x29)
    x31 = x23 + x25
    x32 = x3 * x31
    x33 = 2.0 * x15
    x34 = x10 * x31
    x35 = x30 + x34
    x36 = x15 * x35
    x37 = x3 * x35
    x38 = x10 * x13
    x39 = x0 * (x17 + x24) + x10 * (x29 + x9)
    x40 = x0 * (x26 + x38 + x39)
    x41 = x10**2 * x8
    x42 = x28 + x41
    x43 = x25 + x38
    x44 = x0 * (2.0 * x12 + x42) + x3 * x43
    x45 = x0 * (4.0 * x30 + 2.0 * x32 + 2.0 * x34 + x44)
    x46 = x37 + x40
    x47 = x15 * x46 + x45
    x48 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x49 = da * db * numpy.sqrt(ax**3.5) * numpy.sqrt(bx**4.5)
    x50 = x48 * x49
    x51 = 13.49238468338508 * x50
    x52 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x53 = 0.5641895835477563 * x1
    x54 = x52 * x53
    x55 = -x1 * (ax * A[1] + bx * B[1])
    x56 = -x55 - B[1]
    x57 = 30.16988933062603 * x56
    x58 = x50 * x54
    x59 = x47 * x58
    x60 = -x1 * (ax * A[2] + bx * B[2])
    x61 = -x60 - B[2]
    x62 = 30.16988933062603 * x61
    x63 = x36 + x40
    x64 = x50 * x63
    x65 = x52 * x7
    x66 = x56**2 * x65
    x67 = x0 * x65
    x68 = x66 + x67
    x69 = 30.16988933062603 * x68
    x70 = 0.3183098861837907 * x6
    x71 = x69 * x70
    x72 = 52.25578117937447 * x61
    x73 = x48 * x7
    x74 = x61**2 * x73
    x75 = x0 * x73
    x76 = x74 + x75
    x77 = 30.16988933062603 * x70
    x78 = x49 * x52
    x79 = x77 * x78
    x80 = x76 * x79
    x81 = x56 * x65
    x82 = x27 * x81 + x56 * x68
    x83 = 13.49238468338508 * x82
    x84 = x0 * (x24 * x33 + x42) + x15 * x39
    x85 = x70 * x84
    x86 = x50 * x61
    x87 = x61 * x73
    x88 = x27 * x87 + x61 * x76
    x89 = 13.49238468338508 * x88
    x90 = -x55 - A[1]
    x91 = 23.36949578688709 * x90
    x92 = x58 * (x3 * x46 + x45)
    x93 = x65 * x90
    x94 = x56 * x93
    x95 = x67 + x94
    x96 = 52.25578117937447 * x95
    x97 = x50 * x70
    x98 = x96 * x97
    x99 = 52.25578117937447 * x46
    x100 = x58 * x99
    x101 = 52.25578117937447 * x35
    x102 = x0 * (x81 + x93)
    x103 = x56 * x95
    x104 = x102 + x103
    x105 = x104 * x97
    x106 = 90.5096679918781 * x95
    x107 = x61 * x97
    x108 = x70 * x78
    x109 = x101 * x108
    x110 = 3.0 * x67
    x111 = 2.0 * x90
    x112 = x0 * (x110 + x111 * x81 + x66)
    x113 = x104 * x56 + x112
    x114 = 23.36949578688709 * x39
    x115 = x114 * x97
    x116 = 52.25578117937447 * x39
    x117 = 0.1795871221251666 * x49
    x118 = x117 * x76
    x119 = x108 * x114
    x120 = -x60 - A[2]
    x121 = 23.36949578688709 * x120
    x122 = x120 * x73
    x123 = x122 * x61
    x124 = x123 + x75
    x125 = x108 * x124
    x126 = x120 * x97
    x127 = 90.5096679918781 * x56
    x128 = x0 * (x122 + x87)
    x129 = x124 * x61
    x130 = x128 + x129
    x131 = x117 * x124
    x132 = 3.0 * x75
    x133 = 2.0 * x120
    x134 = x0 * (x132 + x133 * x87 + x74)
    x135 = x130 * x61 + x134
    x136 = x65 * x90**2 + x67
    x137 = 2.0 * x0 * (x14 + 2.0 * x25 + x38) + x3 * x44
    x138 = x51 * x70
    x139 = x90 * x95
    x140 = x102 + x139
    x141 = x50 * x77
    x142 = x141 * x44
    x143 = x104 * x90 + x112
    x144 = x141 * x143
    x145 = 52.25578117937447 * x43
    x146 = 30.16988933062603 * x118
    x147 = x41 + x9
    x148 = 2.0 * x0 * (2.0 * x102 + x103 + x139) + x143 * x56
    x149 = x117 * x147
    x150 = 52.25578117937447 * x90
    x151 = 90.5096679918781 * x131
    x152 = 52.25578117937447 * x108
    x153 = x152 * x43
    x154 = 52.25578117937447 * x131
    x155 = x120**2 * x73 + x75
    x156 = 13.49238468338508 * x108
    x157 = x44 * x79
    x158 = x120 * x124
    x159 = x128 + x158
    x160 = x117 * x155
    x161 = x120 * x130 + x134
    x162 = x161 * x79
    x163 = 2.0 * x0 * (2.0 * x128 + x129 + x158) + x161 * x61
    x164 = -x55 - R[1]
    x165 = x164**2 * x65
    x166 = x165 + x67
    x167 = x15 * x20
    x168 = x3**2 * x8
    x169 = x0 * (x11 * x33 + x168 + x28)
    x170 = x15 * x22 + x169
    x171 = 2.0 * x0 * (x167 + 2.0 * x18 + x21) + x170 * x3
    x172 = x164 * x65
    x173 = x0 * (x172 + x81)
    x174 = x164 * x81
    x175 = x174 + x67
    x176 = x164 * x175
    x177 = x173 + x176
    x178 = x141 * x170
    x179 = x167 + x18
    x180 = x110 + x165
    x181 = x0 * (2.0 * x174 + x180) + x177 * x56
    x182 = x141 * x181
    x183 = 52.25578117937447 * x177
    x184 = x15**2 * x8 + x9
    x185 = x175 * x56
    x186 = 2.0 * x0 * (2.0 * x173 + x176 + x185) + x181 * x56
    x187 = x117 * x166
    x188 = x164 * x93
    x189 = x0 * (x172 + x93) + x164 * (x188 + x67)
    x190 = 23.36949578688709 * x189
    x191 = x169 + x22 * x3
    x192 = x191 * x97
    x193 = x0 * (x110 + x174 + x188 + x94)
    x194 = x175 * x90
    x195 = x173 + x194
    x196 = x164 * x195
    x197 = x193 + x196
    x198 = 52.25578117937447 * x197
    x199 = x22 * x97
    x200 = 3.0 * x173 + 2.0 * x194
    x201 = x0 * (x176 + x189 + x200)
    x202 = x197 * x56
    x203 = x201 + x202
    x204 = 52.25578117937447 * x20
    x205 = x204 * x97
    x206 = 90.5096679918781 * x197
    x207 = 23.36949578688709 * x16
    x208 = x195 * x56
    x209 = x0 * (x181 + 4.0 * x193 + 2.0 * x196 + 2.0 * x208)
    x210 = x50 * (x203 * x56 + x209)
    x211 = x16 * x53
    x212 = 52.25578117937447 * x86
    x213 = x49 * x70
    x214 = x16 * x213
    x215 = 52.25578117937447 * x214
    x216 = x207 * x213
    x217 = x168 + x9
    x218 = x11 * x27 + x217 * x3
    x219 = 13.49238468338508 * x218
    x220 = x0 * (x111 * x172 + x180) + x189 * x90
    x221 = x220 * x97
    x222 = x197 * x90
    x223 = x201 + x222
    x224 = 30.16988933062603 * x217
    x225 = 30.16988933062603 * x3
    x226 = x203 * x90 + x209
    x227 = x5 * x53
    x228 = x226 * x227 * x50
    x229 = x227 * x3
    x230 = x49 * x5
    x231 = x230 * x77
    x232 = x231 * x76
    x233 = x230 * x70
    x234 = x233 * x3
    x235 = 52.25578117937447 * x233
    x236 = x235 * x3
    x237 = x181 * x231
    x238 = x161 * x231
    x239 = 13.49238468338508 * x233
    x240 = -x60 - R[2]
    x241 = x240**2 * x73
    x242 = x241 + x75
    x243 = x170 * x79
    x244 = x240 * x73
    x245 = x0 * (x244 + x87)
    x246 = x240 * x87
    x247 = x246 + x75
    x248 = x240 * x247
    x249 = x245 + x248
    x250 = x117 * x242
    x251 = x132 + x241
    x252 = x0 * (2.0 * x246 + x251) + x249 * x61
    x253 = x252 * x79
    x254 = x117 * x249
    x255 = x247 * x61
    x256 = 2.0 * x0 * (2.0 * x245 + x248 + x255) + x252 * x61
    x257 = x108 * x191
    x258 = x152 * x22
    x259 = x108 * x204
    x260 = x49 * x54
    x261 = x16 * x260
    x262 = x122 * x240
    x263 = x0 * (x122 + x244) + x240 * (x262 + x75)
    x264 = 23.36949578688709 * x263
    x265 = x0 * (x123 + x132 + x246 + x262)
    x266 = x120 * x247
    x267 = x245 + x266
    x268 = x240 * x267
    x269 = x265 + x268
    x270 = x117 * x263
    x271 = 3.0 * x245 + 2.0 * x266
    x272 = x0 * (x248 + x263 + x271)
    x273 = x269 * x61
    x274 = x272 + x273
    x275 = 52.25578117937447 * x56
    x276 = x267 * x61
    x277 = x0 * (x252 + 4.0 * x265 + 2.0 * x268 + 2.0 * x276)
    x278 = x274 * x61 + x277
    x279 = x143 * x231
    x280 = x231 * x252
    x281 = x104 * x235
    x282 = x230 * x54
    x283 = x282 * x3
    x284 = x0 * (x133 * x244 + x251) + x120 * x263
    x285 = x108 * x284
    x286 = x120 * x269
    x287 = x272 + x286
    x288 = x230 * x71
    x289 = x120 * x274 + x277
    x290 = x282 * x289

    # 180 item(s)
    result[0, 0, 0] = numpy.sum(
        x51
        * x54
        * (
            x0
            * (
                x27 * (x14 + x22 + x26)
                + x33 * (x30 + x32)
                + 2.0 * x36
                + 2.0 * x37
                + 4.0 * x40
            )
            + x3 * x47
        )
    )
    result[0, 0, 1] = numpy.sum(x57 * x59)
    result[0, 0, 2] = numpy.sum(x59 * x62)
    result[0, 0, 3] = numpy.sum(x64 * x71)
    result[0, 0, 4] = numpy.sum(x54 * x56 * x64 * x72)
    result[0, 0, 5] = numpy.sum(x63 * x80)
    result[0, 0, 6] = numpy.sum(x50 * x83 * x85)
    result[0, 0, 7] = numpy.sum(x71 * x84 * x86)
    result[0, 0, 8] = numpy.sum(x56 * x80 * x84)
    result[0, 0, 9] = numpy.sum(x78 * x85 * x89)
    result[0, 1, 0] = numpy.sum(x91 * x92)
    result[0, 1, 1] = numpy.sum(x46 * x98)
    result[0, 1, 2] = numpy.sum(x100 * x61 * x90)
    result[0, 1, 3] = numpy.sum(x101 * x105)
    result[0, 1, 4] = numpy.sum(x106 * x107 * x35)
    result[0, 1, 5] = numpy.sum(x109 * x76 * x90)
    result[0, 1, 6] = numpy.sum(x113 * x115)
    result[0, 1, 7] = numpy.sum(x105 * x116 * x61)
    result[0, 1, 8] = numpy.sum(x118 * x39 * x96)
    result[0, 1, 9] = numpy.sum(x119 * x88 * x90)
    result[0, 2, 0] = numpy.sum(x121 * x92)
    result[0, 2, 1] = numpy.sum(x100 * x120 * x56)
    result[0, 2, 2] = numpy.sum(x125 * x99)
    result[0, 2, 3] = numpy.sum(x101 * x126 * x68)
    result[0, 2, 4] = numpy.sum(x125 * x127 * x35)
    result[0, 2, 5] = numpy.sum(x109 * x130)
    result[0, 2, 6] = numpy.sum(x115 * x120 * x82)
    result[0, 2, 7] = numpy.sum(x116 * x131 * x68)
    result[0, 2, 8] = numpy.sum(x108 * x116 * x130 * x56)
    result[0, 2, 9] = numpy.sum(x119 * x135)
    result[0, 3, 0] = numpy.sum(x136 * x137 * x138)
    result[0, 3, 1] = numpy.sum(x140 * x142)
    result[0, 3, 2] = numpy.sum(x136 * x142 * x61)
    result[0, 3, 3] = numpy.sum(x144 * x43)
    result[0, 3, 4] = numpy.sum(x107 * x140 * x145)
    result[0, 3, 5] = numpy.sum(x136 * x146 * x43)
    result[0, 3, 6] = numpy.sum(x138 * x147 * x148)
    result[0, 3, 7] = numpy.sum(x144 * x147 * x61)
    result[0, 3, 8] = numpy.sum(x140 * x146 * x147)
    result[0, 3, 9] = numpy.sum(x136 * x149 * x89)
    result[0, 4, 0] = numpy.sum(x120 * x137 * x58 * x91)
    result[0, 4, 1] = numpy.sum(x120 * x44 * x98)
    result[0, 4, 2] = numpy.sum(x125 * x150 * x44)
    result[0, 4, 3] = numpy.sum(x105 * x120 * x145)
    result[0, 4, 4] = numpy.sum(x151 * x43 * x95)
    result[0, 4, 5] = numpy.sum(x130 * x153 * x90)
    result[0, 4, 6] = numpy.sum(x113 * x121 * x147 * x97)
    result[0, 4, 7] = numpy.sum(x104 * x147 * x154)
    result[0, 4, 8] = numpy.sum(x130 * x149 * x96)
    result[0, 4, 9] = numpy.sum(x108 * x135 * x147 * x91)
    result[0, 5, 0] = numpy.sum(x137 * x155 * x156)
    result[0, 5, 1] = numpy.sum(x155 * x157 * x56)
    result[0, 5, 2] = numpy.sum(x157 * x159)
    result[0, 5, 3] = numpy.sum(x160 * x43 * x69)
    result[0, 5, 4] = numpy.sum(x153 * x159 * x56)
    result[0, 5, 5] = numpy.sum(x162 * x43)
    result[0, 5, 6] = numpy.sum(x149 * x155 * x83)
    result[0, 5, 7] = numpy.sum(x149 * x159 * x69)
    result[0, 5, 8] = numpy.sum(x147 * x162 * x56)
    result[0, 5, 9] = numpy.sum(x147 * x156 * x163)
    result[1, 0, 0] = numpy.sum(x138 * x166 * x171)
    result[1, 0, 1] = numpy.sum(x177 * x178)
    result[1, 0, 2] = numpy.sum(x166 * x178 * x61)
    result[1, 0, 3] = numpy.sum(x179 * x182)
    result[1, 0, 4] = numpy.sum(x107 * x179 * x183)
    result[1, 0, 5] = numpy.sum(x146 * x166 * x179)
    result[1, 0, 6] = numpy.sum(x138 * x184 * x186)
    result[1, 0, 7] = numpy.sum(x182 * x184 * x61)
    result[1, 0, 8] = numpy.sum(x146 * x177 * x184)
    result[1, 0, 9] = numpy.sum(x184 * x187 * x89)
    result[1, 1, 0] = numpy.sum(x190 * x192)
    result[1, 1, 1] = numpy.sum(x198 * x199)
    result[1, 1, 2] = numpy.sum(x189 * x199 * x72)
    result[1, 1, 3] = numpy.sum(x203 * x205)
    result[1, 1, 4] = numpy.sum(x107 * x20 * x206)
    result[1, 1, 5] = numpy.sum(x118 * x189 * x204)
    result[1, 1, 6] = numpy.sum(x207 * x210 * x53)
    result[1, 1, 7] = numpy.sum(x203 * x211 * x212)
    result[1, 1, 8] = numpy.sum(x198 * x214 * x76)
    result[1, 1, 9] = numpy.sum(x190 * x214 * x88)
    result[1, 2, 0] = numpy.sum(x121 * x166 * x192)
    result[1, 2, 1] = numpy.sum(x120 * x183 * x199)
    result[1, 2, 2] = numpy.sum(x154 * x166 * x22)
    result[1, 2, 3] = numpy.sum(x120 * x181 * x205)
    result[1, 2, 4] = numpy.sum(x151 * x177 * x20)
    result[1, 2, 5] = numpy.sum(x130 * x187 * x204)
    result[1, 2, 6] = numpy.sum(x121 * x186 * x211 * x50)
    result[1, 2, 7] = numpy.sum(x124 * x181 * x215)
    result[1, 2, 8] = numpy.sum(x130 * x183 * x214)
    result[1, 2, 9] = numpy.sum(x135 * x166 * x216)
    result[1, 3, 0] = numpy.sum(x219 * x221)
    result[1, 3, 1] = numpy.sum(x223 * x224 * x97)
    result[1, 3, 2] = numpy.sum(x221 * x224 * x61)
    result[1, 3, 3] = numpy.sum(x225 * x228)
    result[1, 3, 4] = numpy.sum(x212 * x223 * x229)
    result[1, 3, 5] = numpy.sum(x220 * x232 * x3)
    result[1, 3, 6] = numpy.sum(
        x227
        * x51
        * (
            x0
            * (
                x111 * (x193 + x208)
                + 4.0 * x201
                + 2.0 * x202
                + 2.0 * x222
                + x27 * (x104 + x185 + x200)
            )
            + x226 * x56
        )
    )
    result[1, 3, 7] = numpy.sum(x228 * x62)
    result[1, 3, 8] = numpy.sum(x223 * x232)
    result[1, 3, 9] = numpy.sum(x220 * x233 * x89)
    result[1, 4, 0] = numpy.sum(x126 * x190 * x218)
    result[1, 4, 1] = numpy.sum(x126 * x198 * x217)
    result[1, 4, 2] = numpy.sum(x154 * x189 * x217)
    result[1, 4, 3] = numpy.sum(52.25578117937447 * x120 * x203 * x229 * x50)
    result[1, 4, 4] = numpy.sum(x124 * x206 * x234)
    result[1, 4, 5] = numpy.sum(x130 * x189 * x236)
    result[1, 4, 6] = numpy.sum(x121 * x210 * x227)
    result[1, 4, 7] = numpy.sum(x124 * x203 * x235)
    result[1, 4, 8] = numpy.sum(x130 * x198 * x233)
    result[1, 4, 9] = numpy.sum(x135 * x190 * x233)
    result[1, 5, 0] = numpy.sum(x160 * x166 * x219)
    result[1, 5, 1] = numpy.sum(x160 * x177 * x224)
    result[1, 5, 2] = numpy.sum(x159 * x187 * x224)
    result[1, 5, 3] = numpy.sum(x155 * x237 * x3)
    result[1, 5, 4] = numpy.sum(x159 * x177 * x236)
    result[1, 5, 5] = numpy.sum(x166 * x238 * x3)
    result[1, 5, 6] = numpy.sum(x155 * x186 * x239)
    result[1, 5, 7] = numpy.sum(x159 * x237)
    result[1, 5, 8] = numpy.sum(x177 * x238)
    result[1, 5, 9] = numpy.sum(x163 * x166 * x239)
    result[2, 0, 0] = numpy.sum(x156 * x171 * x242)
    result[2, 0, 1] = numpy.sum(x242 * x243 * x56)
    result[2, 0, 2] = numpy.sum(x243 * x249)
    result[2, 0, 3] = numpy.sum(x179 * x250 * x69)
    result[2, 0, 4] = numpy.sum(x152 * x179 * x249 * x56)
    result[2, 0, 5] = numpy.sum(x179 * x253)
    result[2, 0, 6] = numpy.sum(x184 * x250 * x83)
    result[2, 0, 7] = numpy.sum(x184 * x254 * x69)
    result[2, 0, 8] = numpy.sum(x184 * x253 * x56)
    result[2, 0, 9] = numpy.sum(x156 * x184 * x256)
    result[2, 1, 0] = numpy.sum(x242 * x257 * x91)
    result[2, 1, 1] = numpy.sum(x22 * x250 * x96)
    result[2, 1, 2] = numpy.sum(x249 * x258 * x90)
    result[2, 1, 3] = numpy.sum(x104 * x204 * x250)
    result[2, 1, 4] = numpy.sum(x106 * x20 * x254)
    result[2, 1, 5] = numpy.sum(x252 * x259 * x90)
    result[2, 1, 6] = numpy.sum(x113 * x216 * x242)
    result[2, 1, 7] = numpy.sum(x104 * x215 * x249)
    result[2, 1, 8] = numpy.sum(x214 * x252 * x96)
    result[2, 1, 9] = numpy.sum(x256 * x261 * x91)
    result[2, 2, 0] = numpy.sum(x257 * x264)
    result[2, 2, 1] = numpy.sum(x258 * x263 * x56)
    result[2, 2, 2] = numpy.sum(x258 * x269)
    result[2, 2, 3] = numpy.sum(x204 * x270 * x68)
    result[2, 2, 4] = numpy.sum(x108 * x127 * x20 * x269)
    result[2, 2, 5] = numpy.sum(x259 * x274)
    result[2, 2, 6] = numpy.sum(x214 * x264 * x82)
    result[2, 2, 7] = numpy.sum(x215 * x269 * x68)
    result[2, 2, 8] = numpy.sum(x261 * x274 * x275)
    result[2, 2, 9] = numpy.sum(x207 * x260 * x278)
    result[2, 3, 0] = numpy.sum(x136 * x219 * x250)
    result[2, 3, 1] = numpy.sum(x140 * x224 * x250)
    result[2, 3, 2] = numpy.sum(x136 * x224 * x254)
    result[2, 3, 3] = numpy.sum(x242 * x279 * x3)
    result[2, 3, 4] = numpy.sum(x140 * x236 * x249)
    result[2, 3, 5] = numpy.sum(x136 * x280 * x3)
    result[2, 3, 6] = numpy.sum(x148 * x239 * x242)
    result[2, 3, 7] = numpy.sum(x249 * x279)
    result[2, 3, 8] = numpy.sum(x140 * x280)
    result[2, 3, 9] = numpy.sum(x136 * x239 * x256)
    result[2, 4, 0] = numpy.sum(x108 * x218 * x264 * x90)
    result[2, 4, 1] = numpy.sum(x217 * x270 * x96)
    result[2, 4, 2] = numpy.sum(x152 * x217 * x269 * x90)
    result[2, 4, 3] = numpy.sum(x263 * x281 * x3)
    result[2, 4, 4] = numpy.sum(x106 * x234 * x269)
    result[2, 4, 5] = numpy.sum(x150 * x274 * x283)
    result[2, 4, 6] = numpy.sum(x113 * x233 * x264)
    result[2, 4, 7] = numpy.sum(x269 * x281)
    result[2, 4, 8] = numpy.sum(x233 * x274 * x96)
    result[2, 4, 9] = numpy.sum(x278 * x282 * x91)
    result[2, 5, 0] = numpy.sum(x219 * x285)
    result[2, 5, 1] = numpy.sum(x224 * x285 * x56)
    result[2, 5, 2] = numpy.sum(x108 * x224 * x287)
    result[2, 5, 3] = numpy.sum(x284 * x288 * x3)
    result[2, 5, 4] = numpy.sum(x275 * x283 * x287)
    result[2, 5, 5] = numpy.sum(x225 * x290)
    result[2, 5, 6] = numpy.sum(x233 * x284 * x83)
    result[2, 5, 7] = numpy.sum(x287 * x288)
    result[2, 5, 8] = numpy.sum(x290 * x57)
    result[2, 5, 9] = numpy.sum(
        13.49238468338508
        * x282
        * (
            x0
            * (
                x133 * (x265 + x276)
                + x27 * (x130 + x255 + x271)
                + 4.0 * x272
                + 2.0 * x273
                + 2.0 * x286
            )
            + x289 * x61
        )
    )
    return result


def diag_quadrupole3d_24(ax, da, A, bx, db, B, R):
    """Cartesian 3D (dg) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3 * x8
    x10 = -x2 - R[0]
    x11 = x10 * x8
    x12 = x0 * (x11 + x9)
    x13 = -x2 - A[0]
    x14 = x0 * x8
    x15 = x10 * x9
    x16 = x14 + x15
    x17 = x13 * x16
    x18 = x12 + x17
    x19 = 2.0 * x13
    x20 = x3**2 * x8
    x21 = 3.0 * x14
    x22 = x20 + x21
    x23 = x0 * (x19 * x9 + x22)
    x24 = x13 * x8
    x25 = x0 * (x24 + x9)
    x26 = x24 * x3
    x27 = x14 + x26
    x28 = x27 * x3
    x29 = x25 + x28
    x30 = x13 * x29
    x31 = x23 + x30
    x32 = x18 * x3
    x33 = x10 * x24
    x34 = x0 * (x15 + x21 + x26 + x33)
    x35 = 2.0 * x32 + 4.0 * x34
    x36 = 2.0 * x0
    x37 = x16 * x3
    x38 = 3.0 * x12 + 2.0 * x17
    x39 = x0 * (x29 + x37 + x38)
    x40 = x32 + x34
    x41 = x13 * x40
    x42 = 2.0 * x3
    x43 = x10 * x16
    x44 = x0 * (x11 + x24) + x10 * (x14 + x33)
    x45 = x0 * (x38 + x43 + x44)
    x46 = x10 * x18
    x47 = x34 + x46
    x48 = x3 * x47
    x49 = x45 + x48
    x50 = x3 * x49
    x51 = x13 * x49
    x52 = x11 * x42
    x53 = x10**2 * x8
    x54 = x21 + x53
    x55 = x0 * (x52 + x54)
    x56 = x12 + x43
    x57 = x3 * x56
    x58 = x55 + x57
    x59 = x0 * (x35 + 2.0 * x46 + x58)
    x60 = 2.0 * x39
    x61 = x13 * x47
    x62 = x51 + x59
    x63 = x0 * (2.0 * x41 + 4.0 * x45 + 2.0 * x48 + x60 + 2.0 * x61) + x3 * x62
    x64 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x65 = da * db * numpy.sqrt(ax**3.5) * numpy.sqrt(bx**5.5)
    x66 = x64 * x65
    x67 = 10.19928413298683 * x66
    x68 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x69 = 0.5641895835477563 * x1
    x70 = x68 * x69
    x71 = -x1 * (ax * A[1] + bx * B[1])
    x72 = -x71 - B[1]
    x73 = 26.98476936677017 * x72
    x74 = x66 * x70
    x75 = x63 * x74
    x76 = -x1 * (ax * A[2] + bx * B[2])
    x77 = -x76 - B[2]
    x78 = 26.98476936677017 * x77
    x79 = x62 * x66
    x80 = x68 * x7
    x81 = x72**2 * x80
    x82 = x0 * x80
    x83 = x81 + x82
    x84 = 34.83718745291631 * x83
    x85 = 0.3183098861837907 * x6
    x86 = x84 * x85
    x87 = 60.33977866125206 * x72
    x88 = x70 * x87
    x89 = x64 * x7
    x90 = x77**2 * x89
    x91 = x0 * x89
    x92 = x90 + x91
    x93 = 34.83718745291631 * x85
    x94 = x65 * x68
    x95 = x93 * x94
    x96 = x72 * x80
    x97 = x36 * x96 + x72 * x83
    x98 = 26.98476936677017 * x97
    x99 = x85 * (x45 + x61)
    x100 = x66 * x99
    x101 = 60.33977866125206 * x83
    x102 = x77 * x89
    x103 = x102 * x36 + x77 * x92
    x104 = 26.98476936677017 * x94
    x105 = x103 * x104
    x106 = 3.0 * x82
    x107 = x0 * (x106 + 3.0 * x81) + x72 * x97
    x108 = 10.19928413298683 * x107
    x109 = x0 * (x11 * x19 + x54) + x13 * x44
    x110 = x109 * x85
    x111 = x110 * x66
    x112 = 0.1795871221251666 * x65
    x113 = x112 * x92
    x114 = 3.0 * x91
    x115 = x0 * (x114 + 3.0 * x90) + x103 * x77
    x116 = 10.19928413298683 * x115
    x117 = -x71 - A[1]
    x118 = 17.66567831916427 * x117
    x119 = 2.0 * x0 * (2.0 * x12 + x37 + x43) + x3 * x58
    x120 = x50 + x59
    x121 = x74 * (x0 * (x119 + x40 * x42 + 3.0 * x45 + 3.0 * x48 + x60) + x120 * x3)
    x122 = x117 * x80
    x123 = x122 * x72
    x124 = x123 + x82
    x125 = 46.73899157377418 * x124
    x126 = x66 * x85
    x127 = x125 * x126
    x128 = 46.73899157377418 * x120
    x129 = x128 * x74
    x130 = x0 * (x122 + x96)
    x131 = x124 * x72
    x132 = x130 + x131
    x133 = 60.33977866125205 * x132
    x134 = x126 * x49
    x135 = 104.5115623587489 * x124
    x136 = x85 * x94
    x137 = x136 * x49
    x138 = 60.33977866125205 * x92
    x139 = 46.73899157377418 * x47
    x140 = 2.0 * x72
    x141 = x106 + x81
    x142 = x0 * (x122 * x140 + x141)
    x143 = x132 * x72
    x144 = x142 + x143
    x145 = x126 * x144
    x146 = 104.5115623587489 * x47
    x147 = x126 * x77
    x148 = x136 * x139
    x149 = x0 * (3.0 * x130 + 3.0 * x131 + x97) + x144 * x72
    x150 = 17.66567831916427 * x44
    x151 = x126 * x150
    x152 = 46.73899157377418 * x145
    x153 = 60.33977866125205 * x44
    x154 = x103 * x112
    x155 = x136 * x150
    x156 = -x76 - A[2]
    x157 = 17.66567831916427 * x156
    x158 = x156 * x89
    x159 = x158 * x77
    x160 = x159 + x91
    x161 = x136 * x160
    x162 = 60.33977866125205 * x156
    x163 = 104.5115623587489 * x72
    x164 = x0 * (x102 + x158)
    x165 = x160 * x77
    x166 = x164 + x165
    x167 = 60.33977866125205 * x166
    x168 = x126 * x156
    x169 = x112 * x160
    x170 = x136 * x72
    x171 = 2.0 * x77
    x172 = x114 + x90
    x173 = x0 * (x158 * x171 + x172)
    x174 = x166 * x77
    x175 = x173 + x174
    x176 = 46.73899157377418 * x169
    x177 = x112 * x166
    x178 = 46.73899157377418 * x136
    x179 = x175 * x178
    x180 = x0 * (x103 + 3.0 * x164 + 3.0 * x165) + x175 * x77
    x181 = x117**2 * x80 + x82
    x182 = (
        x0 * (x36 * (x22 + x52) + x42 * (x12 + x37) + 3.0 * x55 + 3.0 * x57) + x119 * x3
    )
    x183 = x67 * x85
    x184 = x117 * x124
    x185 = x130 + x184
    x186 = 26.98476936677017 * x126
    x187 = x119 * x186
    x188 = x117 * x132
    x189 = x142 + x188
    x190 = x66 * x93
    x191 = 60.33977866125206 * x185
    x192 = 34.83718745291631 * x113
    x193 = 2.0 * x0 * (2.0 * x130 + x131 + x184) + x189 * x72
    x194 = x186 * x193
    x195 = 60.33977866125206 * x56
    x196 = 26.98476936677017 * x154
    x197 = x14 + x53
    x198 = x0 * (5.0 * x142 + 2.0 * x143 + 3.0 * x188) + x193 * x72
    x199 = x112 * x197
    x200 = 46.73899157377418 * x117
    x201 = 104.5115623587489 * x169
    x202 = x136 * x58
    x203 = 104.5115623587489 * x177
    x204 = 60.33977866125205 * x177
    x205 = x156**2 * x89 + x91
    x206 = 10.19928413298683 * x136
    x207 = x104 * x85
    x208 = x119 * x207
    x209 = x156 * x160
    x210 = x164 + x209
    x211 = x112 * x205
    x212 = x156 * x166
    x213 = x173 + x212
    x214 = x112 * x210
    x215 = 2.0 * x0 * (2.0 * x164 + x165 + x209) + x213 * x77
    x216 = x207 * x215
    x217 = x0 * (5.0 * x173 + 2.0 * x174 + 3.0 * x212) + x215 * x77
    x218 = -x71 - R[1]
    x219 = x218**2 * x80
    x220 = x219 + x82
    x221 = x29 * x3
    x222 = x13 * x27
    x223 = 2.0 * x0 * (x222 + 2.0 * x25 + x28) + x3 * x31
    x224 = x0 * (2.0 * x221 + 5.0 * x23 + 3.0 * x30) + x223 * x3
    x225 = x218 * x80
    x226 = x0 * (x225 + x96)
    x227 = x218 * x96
    x228 = x227 + x82
    x229 = x218 * x228
    x230 = x226 + x229
    x231 = x186 * x223
    x232 = x140 * x225
    x233 = x106 + x219
    x234 = x0 * (x232 + x233)
    x235 = x230 * x72
    x236 = x234 + x235
    x237 = 60.33977866125206 * x230
    x238 = x222 + x25
    x239 = x228 * x72
    x240 = 2.0 * x0 * (2.0 * x226 + x229 + x239) + x236 * x72
    x241 = x186 * x240
    x242 = 60.33977866125206 * x236
    x243 = x13**2 * x8 + x14
    x244 = (
        x0 * (x140 * (x226 + x239) + 3.0 * x234 + 3.0 * x235 + x36 * (x141 + x232))
        + x240 * x72
    )
    x245 = x112 * x220
    x246 = x122 * x218
    x247 = x0 * (x122 + x225) + x218 * (x246 + x82)
    x248 = 17.66567831916427 * x247
    x249 = x14 + x20
    x250 = x249 * x3 + x36 * x9
    x251 = x221 + x23
    x252 = x0 * (3.0 * x25 + x250 + 3.0 * x28) + x251 * x3
    x253 = x126 * x252
    x254 = x0 * (x106 + x123 + x227 + x246)
    x255 = x117 * x228
    x256 = x226 + x255
    x257 = x218 * x256
    x258 = x254 + x257
    x259 = 46.73899157377418 * x258
    x260 = x126 * x251
    x261 = 46.73899157377418 * x260
    x262 = 60.33977866125205 * x29
    x263 = 3.0 * x226 + 2.0 * x255
    x264 = x0 * (x229 + x247 + x263)
    x265 = x258 * x72
    x266 = x264 + x265
    x267 = x126 * x266
    x268 = 104.5115623587489 * x258
    x269 = x256 * x72
    x270 = 4.0 * x254 + 2.0 * x269
    x271 = x0 * (x236 + 2.0 * x257 + x270)
    x272 = x266 * x72
    x273 = x271 + x272
    x274 = 46.73899157377418 * x27
    x275 = x126 * x274
    x276 = 104.5115623587489 * x27
    x277 = 17.66567831916427 * x13
    x278 = x0 * (x132 + x239 + x263)
    x279 = 2.0 * x278
    x280 = x254 + x269
    x281 = x5 * x69
    x282 = x281 * x66
    x283 = x282 * (
        x0 * (x140 * x280 + x240 + 3.0 * x264 + 3.0 * x265 + x279) + x273 * x72
    )
    x284 = x13 * x282
    x285 = 46.73899157377418 * x273
    x286 = x5 * x65
    x287 = x286 * x85
    x288 = x266 * x287
    x289 = x259 * x287
    x290 = x248 * x287
    x291 = 46.73899157377418 * x287
    x292 = x160 * x291
    x293 = x13 * x287
    x294 = x175 * x291
    x295 = x0 * (3.0 * x20 + x21) + x250 * x3
    x296 = 10.19928413298683 * x295
    x297 = 2.0 * x117
    x298 = x0 * (x225 * x297 + x233) + x117 * x247
    x299 = x126 * x298
    x300 = 26.98476936677017 * x250
    x301 = x117 * x258
    x302 = x264 + x301
    x303 = x126 * x302
    x304 = x117 * x266
    x305 = x271 + x304
    x306 = 34.83718745291631 * x249
    x307 = 60.33977866125206 * x77
    x308 = x117 * x280
    x309 = x0 * (4.0 * x264 + 2.0 * x265 + x279 + 2.0 * x301 + 2.0 * x308) + x305 * x72
    x310 = x282 * x309
    x311 = 26.98476936677017 * x3
    x312 = x282 * x3
    x313 = x287 * x3
    x314 = 60.33977866125206 * x313
    x315 = 26.98476936677017 * x287
    x316 = x103 * x315
    x317 = x286 * x93
    x318 = x240 * x315
    x319 = x215 * x315
    x320 = 10.19928413298683 * x287
    x321 = -x76 - R[2]
    x322 = x321**2 * x89
    x323 = x322 + x91
    x324 = x207 * x223
    x325 = x321 * x89
    x326 = x0 * (x102 + x325)
    x327 = x102 * x321
    x328 = x327 + x91
    x329 = x321 * x328
    x330 = x326 + x329
    x331 = x112 * x323
    x332 = x136 * x87
    x333 = x171 * x325
    x334 = x114 + x322
    x335 = x0 * (x333 + x334)
    x336 = x330 * x77
    x337 = x335 + x336
    x338 = x112 * x330
    x339 = x328 * x77
    x340 = 2.0 * x0 * (2.0 * x326 + x329 + x339) + x337 * x77
    x341 = x207 * x340
    x342 = x112 * x337
    x343 = (
        x0 * (x171 * (x326 + x339) + 3.0 * x335 + 3.0 * x336 + x36 * (x172 + x333))
        + x340 * x77
    )
    x344 = x136 * x252
    x345 = x178 * x251
    x346 = x136 * x262
    x347 = x136 * x274
    x348 = x149 * x287
    x349 = x144 * x291
    x350 = x133 * x287
    x351 = x125 * x287
    x352 = x286 * x70
    x353 = x13 * x352
    x354 = x158 * x321
    x355 = x0 * (x158 + x325) + x321 * (x354 + x91)
    x356 = 17.66567831916427 * x355
    x357 = x0 * (x114 + x159 + x327 + x354)
    x358 = x156 * x328
    x359 = x326 + x358
    x360 = x321 * x359
    x361 = x357 + x360
    x362 = x112 * x355
    x363 = 3.0 * x326 + 2.0 * x358
    x364 = x0 * (x329 + x355 + x363)
    x365 = x361 * x77
    x366 = x364 + x365
    x367 = x112 * x361
    x368 = x359 * x77
    x369 = 4.0 * x357 + 2.0 * x368
    x370 = x0 * (x337 + 2.0 * x360 + x369)
    x371 = x366 * x77
    x372 = x370 + x371
    x373 = 60.33977866125205 * x366
    x374 = x0 * (x166 + x339 + x363)
    x375 = 2.0 * x374
    x376 = x357 + x368
    x377 = x352 * (
        x0 * (x171 * x376 + x340 + 3.0 * x364 + 3.0 * x365 + x375) + x372 * x77
    )
    x378 = x193 * x315
    x379 = x315 * x340
    x380 = x117 * x136
    x381 = 2.0 * x156
    x382 = x0 * (x325 * x381 + x334) + x156 * x355
    x383 = x136 * x382
    x384 = x156 * x361
    x385 = x364 + x384
    x386 = x136 * x385
    x387 = x156 * x366
    x388 = x370 + x387
    x389 = x287 * x382
    x390 = x287 * x385
    x391 = x286 * x388
    x392 = x156 * x376
    x393 = x0 * (4.0 * x364 + 2.0 * x365 + x375 + 2.0 * x384 + 2.0 * x392) + x388 * x77
    x394 = x352 * x393

    # 270 item(s)
    result[0, 0, 0] = numpy.sum(
        x67
        * x70
        * (
            x0
            * (
                x36 * (x18 * x19 + x31 + x35)
                + x42 * (x39 + x41)
                + 2.0 * x50
                + 3.0 * x51
                + 5.0 * x59
            )
            + x3 * x63
        )
    )
    result[0, 0, 1] = numpy.sum(x73 * x75)
    result[0, 0, 2] = numpy.sum(x75 * x78)
    result[0, 0, 3] = numpy.sum(x79 * x86)
    result[0, 0, 4] = numpy.sum(x77 * x79 * x88)
    result[0, 0, 5] = numpy.sum(x62 * x92 * x95)
    result[0, 0, 6] = numpy.sum(x100 * x98)
    result[0, 0, 7] = numpy.sum(x100 * x101 * x77)
    result[0, 0, 8] = numpy.sum(x87 * x92 * x94 * x99)
    result[0, 0, 9] = numpy.sum(x105 * x99)
    result[0, 0, 10] = numpy.sum(x108 * x111)
    result[0, 0, 11] = numpy.sum(x111 * x77 * x98)
    result[0, 0, 12] = numpy.sum(x109 * x113 * x84)
    result[0, 0, 13] = numpy.sum(x105 * x110 * x72)
    result[0, 0, 14] = numpy.sum(x110 * x116 * x94)
    result[0, 1, 0] = numpy.sum(x118 * x121)
    result[0, 1, 1] = numpy.sum(x120 * x127)
    result[0, 1, 2] = numpy.sum(x117 * x129 * x77)
    result[0, 1, 3] = numpy.sum(x133 * x134)
    result[0, 1, 4] = numpy.sum(x134 * x135 * x77)
    result[0, 1, 5] = numpy.sum(x117 * x137 * x138)
    result[0, 1, 6] = numpy.sum(x139 * x145)
    result[0, 1, 7] = numpy.sum(x132 * x146 * x147)
    result[0, 1, 8] = numpy.sum(x113 * x124 * x146)
    result[0, 1, 9] = numpy.sum(x103 * x117 * x148)
    result[0, 1, 10] = numpy.sum(x149 * x151)
    result[0, 1, 11] = numpy.sum(x152 * x44 * x77)
    result[0, 1, 12] = numpy.sum(x113 * x132 * x153)
    result[0, 1, 13] = numpy.sum(x125 * x154 * x44)
    result[0, 1, 14] = numpy.sum(x115 * x117 * x155)
    result[0, 2, 0] = numpy.sum(x121 * x157)
    result[0, 2, 1] = numpy.sum(x129 * x156 * x72)
    result[0, 2, 2] = numpy.sum(x128 * x161)
    result[0, 2, 3] = numpy.sum(x134 * x162 * x83)
    result[0, 2, 4] = numpy.sum(x161 * x163 * x49)
    result[0, 2, 5] = numpy.sum(x137 * x167)
    result[0, 2, 6] = numpy.sum(x139 * x168 * x97)
    result[0, 2, 7] = numpy.sum(x146 * x169 * x83)
    result[0, 2, 8] = numpy.sum(x146 * x166 * x170)
    result[0, 2, 9] = numpy.sum(x148 * x175)
    result[0, 2, 10] = numpy.sum(x107 * x151 * x156)
    result[0, 2, 11] = numpy.sum(x176 * x44 * x97)
    result[0, 2, 12] = numpy.sum(x153 * x177 * x83)
    result[0, 2, 13] = numpy.sum(x179 * x44 * x72)
    result[0, 2, 14] = numpy.sum(x155 * x180)
    result[0, 3, 0] = numpy.sum(x181 * x182 * x183)
    result[0, 3, 1] = numpy.sum(x185 * x187)
    result[0, 3, 2] = numpy.sum(x181 * x187 * x77)
    result[0, 3, 3] = numpy.sum(x189 * x190 * x58)
    result[0, 3, 4] = numpy.sum(x147 * x191 * x58)
    result[0, 3, 5] = numpy.sum(x181 * x192 * x58)
    result[0, 3, 6] = numpy.sum(x194 * x56)
    result[0, 3, 7] = numpy.sum(x147 * x189 * x195)
    result[0, 3, 8] = numpy.sum(x113 * x185 * x195)
    result[0, 3, 9] = numpy.sum(x181 * x196 * x56)
    result[0, 3, 10] = numpy.sum(x183 * x197 * x198)
    result[0, 3, 11] = numpy.sum(x194 * x197 * x77)
    result[0, 3, 12] = numpy.sum(x189 * x192 * x197)
    result[0, 3, 13] = numpy.sum(x185 * x196 * x197)
    result[0, 3, 14] = numpy.sum(x116 * x181 * x199)
    result[0, 4, 0] = numpy.sum(x118 * x156 * x182 * x74)
    result[0, 4, 1] = numpy.sum(x119 * x127 * x156)
    result[0, 4, 2] = numpy.sum(x119 * x161 * x200)
    result[0, 4, 3] = numpy.sum(x133 * x168 * x58)
    result[0, 4, 4] = numpy.sum(x124 * x201 * x58)
    result[0, 4, 5] = numpy.sum(x117 * x167 * x202)
    result[0, 4, 6] = numpy.sum(x152 * x156 * x56)
    result[0, 4, 7] = numpy.sum(x132 * x201 * x56)
    result[0, 4, 8] = numpy.sum(x124 * x203 * x56)
    result[0, 4, 9] = numpy.sum(x117 * x179 * x56)
    result[0, 4, 10] = numpy.sum(x126 * x149 * x157 * x197)
    result[0, 4, 11] = numpy.sum(x144 * x176 * x197)
    result[0, 4, 12] = numpy.sum(x132 * x197 * x204)
    result[0, 4, 13] = numpy.sum(x125 * x175 * x199)
    result[0, 4, 14] = numpy.sum(x118 * x136 * x180 * x197)
    result[0, 5, 0] = numpy.sum(x182 * x205 * x206)
    result[0, 5, 1] = numpy.sum(x205 * x208 * x72)
    result[0, 5, 2] = numpy.sum(x208 * x210)
    result[0, 5, 3] = numpy.sum(x211 * x58 * x84)
    result[0, 5, 4] = numpy.sum(x202 * x210 * x87)
    result[0, 5, 5] = numpy.sum(x213 * x58 * x95)
    result[0, 5, 6] = numpy.sum(x211 * x56 * x98)
    result[0, 5, 7] = numpy.sum(x195 * x214 * x83)
    result[0, 5, 8] = numpy.sum(x170 * x195 * x213)
    result[0, 5, 9] = numpy.sum(x216 * x56)
    result[0, 5, 10] = numpy.sum(x108 * x199 * x205)
    result[0, 5, 11] = numpy.sum(x199 * x210 * x98)
    result[0, 5, 12] = numpy.sum(x199 * x213 * x84)
    result[0, 5, 13] = numpy.sum(x197 * x216 * x72)
    result[0, 5, 14] = numpy.sum(x197 * x206 * x217)
    result[1, 0, 0] = numpy.sum(x183 * x220 * x224)
    result[1, 0, 1] = numpy.sum(x230 * x231)
    result[1, 0, 2] = numpy.sum(x220 * x231 * x77)
    result[1, 0, 3] = numpy.sum(x190 * x236 * x31)
    result[1, 0, 4] = numpy.sum(x147 * x237 * x31)
    result[1, 0, 5] = numpy.sum(x192 * x220 * x31)
    result[1, 0, 6] = numpy.sum(x238 * x241)
    result[1, 0, 7] = numpy.sum(x147 * x238 * x242)
    result[1, 0, 8] = numpy.sum(x113 * x237 * x238)
    result[1, 0, 9] = numpy.sum(x196 * x220 * x238)
    result[1, 0, 10] = numpy.sum(x183 * x243 * x244)
    result[1, 0, 11] = numpy.sum(x241 * x243 * x77)
    result[1, 0, 12] = numpy.sum(x192 * x236 * x243)
    result[1, 0, 13] = numpy.sum(x196 * x230 * x243)
    result[1, 0, 14] = numpy.sum(x116 * x243 * x245)
    result[1, 1, 0] = numpy.sum(x248 * x253)
    result[1, 1, 1] = numpy.sum(x259 * x260)
    result[1, 1, 2] = numpy.sum(x247 * x261 * x77)
    result[1, 1, 3] = numpy.sum(x262 * x267)
    result[1, 1, 4] = numpy.sum(x147 * x268 * x29)
    result[1, 1, 5] = numpy.sum(x113 * x247 * x262)
    result[1, 1, 6] = numpy.sum(x273 * x275)
    result[1, 1, 7] = numpy.sum(x267 * x276 * x77)
    result[1, 1, 8] = numpy.sum(x113 * x258 * x276)
    result[1, 1, 9] = numpy.sum(x154 * x247 * x274)
    result[1, 1, 10] = numpy.sum(x277 * x283)
    result[1, 1, 11] = numpy.sum(x284 * x285 * x77)
    result[1, 1, 12] = numpy.sum(x13 * x138 * x288)
    result[1, 1, 13] = numpy.sum(x103 * x13 * x289)
    result[1, 1, 14] = numpy.sum(x115 * x13 * x290)
    result[1, 2, 0] = numpy.sum(x157 * x220 * x253)
    result[1, 2, 1] = numpy.sum(x156 * x230 * x261)
    result[1, 2, 2] = numpy.sum(x176 * x220 * x251)
    result[1, 2, 3] = numpy.sum(x168 * x236 * x262)
    result[1, 2, 4] = numpy.sum(x201 * x230 * x29)
    result[1, 2, 5] = numpy.sum(x204 * x220 * x29)
    result[1, 2, 6] = numpy.sum(x156 * x240 * x275)
    result[1, 2, 7] = numpy.sum(x201 * x236 * x27)
    result[1, 2, 8] = numpy.sum(x203 * x230 * x27)
    result[1, 2, 9] = numpy.sum(x175 * x245 * x274)
    result[1, 2, 10] = numpy.sum(x157 * x244 * x284)
    result[1, 2, 11] = numpy.sum(x13 * x240 * x292)
    result[1, 2, 12] = numpy.sum(x167 * x236 * x293)
    result[1, 2, 13] = numpy.sum(x13 * x230 * x294)
    result[1, 2, 14] = numpy.sum(x180 * x220 * x277 * x287)
    result[1, 3, 0] = numpy.sum(x296 * x299)
    result[1, 3, 1] = numpy.sum(x300 * x303)
    result[1, 3, 2] = numpy.sum(x299 * x300 * x77)
    result[1, 3, 3] = numpy.sum(x126 * x305 * x306)
    result[1, 3, 4] = numpy.sum(x249 * x303 * x307)
    result[1, 3, 5] = numpy.sum(x192 * x249 * x298)
    result[1, 3, 6] = numpy.sum(x310 * x311)
    result[1, 3, 7] = numpy.sum(x305 * x307 * x312)
    result[1, 3, 8] = numpy.sum(x302 * x314 * x92)
    result[1, 3, 9] = numpy.sum(x298 * x3 * x316)
    result[1, 3, 10] = numpy.sum(
        x281
        * x67
        * (
            x0
            * (
                x140 * (x278 + x308)
                + 5.0 * x271
                + 2.0 * x272
                + 3.0 * x304
                + x36 * (x189 + x256 * x297 + x270)
            )
            + x309 * x72
        )
    )
    result[1, 3, 11] = numpy.sum(x310 * x78)
    result[1, 3, 12] = numpy.sum(x305 * x317 * x92)
    result[1, 3, 13] = numpy.sum(x302 * x316)
    result[1, 3, 14] = numpy.sum(x116 * x287 * x298)
    result[1, 4, 0] = numpy.sum(x168 * x248 * x295)
    result[1, 4, 1] = numpy.sum(x168 * x250 * x259)
    result[1, 4, 2] = numpy.sum(x176 * x247 * x250)
    result[1, 4, 3] = numpy.sum(x162 * x249 * x267)
    result[1, 4, 4] = numpy.sum(x201 * x249 * x258)
    result[1, 4, 5] = numpy.sum(x204 * x247 * x249)
    result[1, 4, 6] = numpy.sum(x156 * x285 * x312)
    result[1, 4, 7] = numpy.sum(104.5115623587489 * x160 * x288 * x3)
    result[1, 4, 8] = numpy.sum(x166 * x268 * x313)
    result[1, 4, 9] = numpy.sum(x247 * x294 * x3)
    result[1, 4, 10] = numpy.sum(x157 * x283)
    result[1, 4, 11] = numpy.sum(x273 * x292)
    result[1, 4, 12] = numpy.sum(x167 * x288)
    result[1, 4, 13] = numpy.sum(x175 * x289)
    result[1, 4, 14] = numpy.sum(x180 * x290)
    result[1, 5, 0] = numpy.sum(x211 * x220 * x296)
    result[1, 5, 1] = numpy.sum(x211 * x230 * x300)
    result[1, 5, 2] = numpy.sum(x214 * x220 * x300)
    result[1, 5, 3] = numpy.sum(x211 * x236 * x306)
    result[1, 5, 4] = numpy.sum(x214 * x237 * x249)
    result[1, 5, 5] = numpy.sum(x213 * x245 * x306)
    result[1, 5, 6] = numpy.sum(x205 * x3 * x318)
    result[1, 5, 7] = numpy.sum(x210 * x242 * x313)
    result[1, 5, 8] = numpy.sum(x213 * x237 * x313)
    result[1, 5, 9] = numpy.sum(x220 * x3 * x319)
    result[1, 5, 10] = numpy.sum(x205 * x244 * x320)
    result[1, 5, 11] = numpy.sum(x210 * x318)
    result[1, 5, 12] = numpy.sum(x213 * x236 * x317)
    result[1, 5, 13] = numpy.sum(x230 * x319)
    result[1, 5, 14] = numpy.sum(x217 * x220 * x320)
    result[2, 0, 0] = numpy.sum(x206 * x224 * x323)
    result[2, 0, 1] = numpy.sum(x323 * x324 * x72)
    result[2, 0, 2] = numpy.sum(x324 * x330)
    result[2, 0, 3] = numpy.sum(x31 * x331 * x84)
    result[2, 0, 4] = numpy.sum(x31 * x330 * x332)
    result[2, 0, 5] = numpy.sum(x31 * x337 * x95)
    result[2, 0, 6] = numpy.sum(x238 * x331 * x98)
    result[2, 0, 7] = numpy.sum(x101 * x238 * x338)
    result[2, 0, 8] = numpy.sum(x238 * x332 * x337)
    result[2, 0, 9] = numpy.sum(x238 * x341)
    result[2, 0, 10] = numpy.sum(x108 * x243 * x331)
    result[2, 0, 11] = numpy.sum(x243 * x338 * x98)
    result[2, 0, 12] = numpy.sum(x243 * x342 * x84)
    result[2, 0, 13] = numpy.sum(x243 * x341 * x72)
    result[2, 0, 14] = numpy.sum(x206 * x243 * x343)
    result[2, 1, 0] = numpy.sum(x118 * x323 * x344)
    result[2, 1, 1] = numpy.sum(x125 * x251 * x331)
    result[2, 1, 2] = numpy.sum(x117 * x330 * x345)
    result[2, 1, 3] = numpy.sum(x132 * x262 * x331)
    result[2, 1, 4] = numpy.sum(x135 * x29 * x338)
    result[2, 1, 5] = numpy.sum(x117 * x337 * x346)
    result[2, 1, 6] = numpy.sum(x144 * x274 * x331)
    result[2, 1, 7] = numpy.sum(x132 * x276 * x338)
    result[2, 1, 8] = numpy.sum(x124 * x276 * x342)
    result[2, 1, 9] = numpy.sum(x117 * x340 * x347)
    result[2, 1, 10] = numpy.sum(x277 * x323 * x348)
    result[2, 1, 11] = numpy.sum(x13 * x330 * x349)
    result[2, 1, 12] = numpy.sum(x13 * x337 * x350)
    result[2, 1, 13] = numpy.sum(x13 * x340 * x351)
    result[2, 1, 14] = numpy.sum(x118 * x343 * x353)
    result[2, 2, 0] = numpy.sum(x344 * x356)
    result[2, 2, 1] = numpy.sum(x345 * x355 * x72)
    result[2, 2, 2] = numpy.sum(x345 * x361)
    result[2, 2, 3] = numpy.sum(x262 * x362 * x83)
    result[2, 2, 4] = numpy.sum(x136 * x163 * x29 * x361)
    result[2, 2, 5] = numpy.sum(x346 * x366)
    result[2, 2, 6] = numpy.sum(x274 * x362 * x97)
    result[2, 2, 7] = numpy.sum(x276 * x367 * x83)
    result[2, 2, 8] = numpy.sum(x170 * x276 * x366)
    result[2, 2, 9] = numpy.sum(x347 * x372)
    result[2, 2, 10] = numpy.sum(x107 * x293 * x356)
    result[2, 2, 11] = numpy.sum(x13 * x291 * x361 * x97)
    result[2, 2, 12] = numpy.sum(x293 * x373 * x83)
    result[2, 2, 13] = numpy.sum(46.73899157377418 * x353 * x372 * x72)
    result[2, 2, 14] = numpy.sum(x277 * x377)
    result[2, 3, 0] = numpy.sum(x181 * x296 * x331)
    result[2, 3, 1] = numpy.sum(x185 * x300 * x331)
    result[2, 3, 2] = numpy.sum(x181 * x300 * x338)
    result[2, 3, 3] = numpy.sum(x189 * x306 * x331)
    result[2, 3, 4] = numpy.sum(x191 * x249 * x338)
    result[2, 3, 5] = numpy.sum(x181 * x306 * x342)
    result[2, 3, 6] = numpy.sum(x3 * x323 * x378)
    result[2, 3, 7] = numpy.sum(x189 * x314 * x330)
    result[2, 3, 8] = numpy.sum(x191 * x313 * x337)
    result[2, 3, 9] = numpy.sum(x181 * x3 * x379)
    result[2, 3, 10] = numpy.sum(x198 * x320 * x323)
    result[2, 3, 11] = numpy.sum(x330 * x378)
    result[2, 3, 12] = numpy.sum(x189 * x317 * x337)
    result[2, 3, 13] = numpy.sum(x185 * x379)
    result[2, 3, 14] = numpy.sum(x181 * x320 * x343)
    result[2, 4, 0] = numpy.sum(x295 * x356 * x380)
    result[2, 4, 1] = numpy.sum(x125 * x250 * x362)
    result[2, 4, 2] = numpy.sum(x117 * x178 * x250 * x361)
    result[2, 4, 3] = numpy.sum(x133 * x249 * x362)
    result[2, 4, 4] = numpy.sum(x135 * x249 * x367)
    result[2, 4, 5] = numpy.sum(x249 * x373 * x380)
    result[2, 4, 6] = numpy.sum(x3 * x349 * x355)
    result[2, 4, 7] = numpy.sum(104.5115623587489 * x132 * x313 * x361)
    result[2, 4, 8] = numpy.sum(x135 * x313 * x366)
    result[2, 4, 9] = numpy.sum(x200 * x3 * x352 * x372)
    result[2, 4, 10] = numpy.sum(x348 * x356)
    result[2, 4, 11] = numpy.sum(x349 * x361)
    result[2, 4, 12] = numpy.sum(x350 * x366)
    result[2, 4, 13] = numpy.sum(x351 * x372)
    result[2, 4, 14] = numpy.sum(x118 * x377)
    result[2, 5, 0] = numpy.sum(x296 * x383)
    result[2, 5, 1] = numpy.sum(x300 * x383 * x72)
    result[2, 5, 2] = numpy.sum(x300 * x386)
    result[2, 5, 3] = numpy.sum(x112 * x249 * x382 * x84)
    result[2, 5, 4] = numpy.sum(x249 * x386 * x87)
    result[2, 5, 5] = numpy.sum(x136 * x306 * x388)
    result[2, 5, 6] = numpy.sum(x3 * x389 * x98)
    result[2, 5, 7] = numpy.sum(x101 * x3 * x390)
    result[2, 5, 8] = numpy.sum(x3 * x391 * x88)
    result[2, 5, 9] = numpy.sum(x311 * x394)
    result[2, 5, 10] = numpy.sum(x108 * x389)
    result[2, 5, 11] = numpy.sum(x390 * x98)
    result[2, 5, 12] = numpy.sum(x391 * x86)
    result[2, 5, 13] = numpy.sum(x394 * x73)
    result[2, 5, 14] = numpy.sum(
        10.19928413298683
        * x352
        * (
            x0
            * (
                x171 * (x374 + x392)
                + x36 * (x213 + x359 * x381 + x369)
                + 5.0 * x370
                + 2.0 * x371
                + 3.0 * x387
            )
            + x393 * x77
        )
    )
    return result


def diag_quadrupole3d_30(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fs) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 1), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = ax * bx * x1
    x3 = numpy.exp(-x2 * (A[0] - B[0]) ** 2)
    x4 = numpy.sqrt(x1)
    x5 = 1.772453850905516 * x4
    x6 = x3 * x5
    x7 = x0 * x6
    x8 = -x1 * (ax * A[0] + bx * B[0])
    x9 = -x8 - R[0]
    x10 = -x8 - A[0]
    x11 = x10 * x6
    x12 = x11 * x9 + x7
    x13 = 2.0 * x10
    x14 = x12 * x9
    x15 = x6 * x9
    x16 = x0 * (x11 + x15)
    x17 = x6 * x9**2
    x18 = x14 + x16
    x19 = x0 * (x13 * x15 + x17 + 3.0 * x7) + x10 * x18
    x20 = numpy.exp(-x2 * (A[2] - B[2]) ** 2)
    x21 = da * db * numpy.sqrt(ax**4.5) * numpy.sqrt(bx**1.5)
    x22 = x20 * x21
    x23 = 5.842373946721772 * x22
    x24 = numpy.exp(-x2 * (A[1] - B[1]) ** 2)
    x25 = 0.5641895835477563 * x1
    x26 = x24 * x25
    x27 = -x1 * (ax * A[1] + bx * B[1])
    x28 = -x27 - A[1]
    x29 = x26 * x28
    x30 = 13.06394529484362 * x22
    x31 = x19 * x30
    x32 = -x1 * (ax * A[2] + bx * B[2])
    x33 = -x32 - A[2]
    x34 = 0.3183098861837907 * x4
    x35 = x18 * x34
    x36 = x24 * x5
    x37 = x0 * x36
    x38 = x28**2 * x36 + x37
    x39 = x30 * x38
    x40 = 22.62741699796953 * x22 * x33
    x41 = x21 * x24
    x42 = x20 * x5
    x43 = x0 * x42
    x44 = x33**2 * x42 + x43
    x45 = 13.06394529484362 * x44
    x46 = x41 * x45
    x47 = 2.0 * x28
    x48 = x28 * x38 + x37 * x47
    x49 = x34 * (x17 + x7)
    x50 = 2.0 * x33
    x51 = 5.842373946721772 * x33 * x44 + 5.842373946721772 * x43 * x50
    x52 = x10**2 * x6 + x7
    x53 = x10 * x52 + x13 * x7
    x54 = -x27 - R[1]
    x55 = x36 * x54**2
    x56 = x34 * (x37 + x55)
    x57 = x28 * x36
    x58 = x36 * x54
    x59 = x0 * (x57 + x58)
    x60 = x37 + x54 * x57
    x61 = x54 * x60
    x62 = x59 + x61
    x63 = x34 * x62
    x64 = x30 * x52
    x65 = x25 * x3
    x66 = x10 * x65
    x67 = x0 * (3.0 * x37 + x47 * x58 + x55) + x28 * x62
    x68 = x30 * x67
    x69 = x21 * x3
    x70 = x45 * x69
    x71 = x34 * x41
    x72 = -x32 - R[2]
    x73 = x42 * x72**2
    x74 = x43 + x73
    x75 = 5.842373946721772 * x74
    x76 = x52 * x71
    x77 = 13.06394529484362 * x74
    x78 = x33 * x42
    x79 = x42 * x72
    x80 = x0 * (x78 + x79)
    x81 = x43 + x72 * x78
    x82 = x72 * x81
    x83 = x80 + x82
    x84 = 13.06394529484362 * x83
    x85 = x34 * x69
    x86 = x38 * x85
    x87 = x26 * x69
    x88 = x10 * x87
    x89 = x0 * (3.0 * x43 + x50 * x79 + x73) + x33 * x83
    x90 = 13.06394529484362 * x89

    # 30 item(s)
    result[0, 0, 0] = numpy.sum(
        x23 * x26 * (x0 * (x12 * x13 + 2.0 * x14 + 4.0 * x16) + x10 * x19)
    )
    result[0, 1, 0] = numpy.sum(x29 * x31)
    result[0, 2, 0] = numpy.sum(x26 * x31 * x33)
    result[0, 3, 0] = numpy.sum(x35 * x39)
    result[0, 4, 0] = numpy.sum(x18 * x29 * x40)
    result[0, 5, 0] = numpy.sum(x35 * x46)
    result[0, 6, 0] = numpy.sum(x23 * x48 * x49)
    result[0, 7, 0] = numpy.sum(x33 * x39 * x49)
    result[0, 8, 0] = numpy.sum(x28 * x46 * x49)
    result[0, 9, 0] = numpy.sum(x41 * x49 * x51)
    result[1, 0, 0] = numpy.sum(x23 * x53 * x56)
    result[1, 1, 0] = numpy.sum(x63 * x64)
    result[1, 2, 0] = numpy.sum(x33 * x56 * x64)
    result[1, 3, 0] = numpy.sum(x66 * x68)
    result[1, 4, 0] = numpy.sum(x40 * x62 * x66)
    result[1, 5, 0] = numpy.sum(x10 * x56 * x70)
    result[1, 6, 0] = numpy.sum(
        x23 * x65 * (x0 * (x47 * x60 + 4.0 * x59 + 2.0 * x61) + x28 * x67)
    )
    result[1, 7, 0] = numpy.sum(x33 * x65 * x68)
    result[1, 8, 0] = numpy.sum(x63 * x70)
    result[1, 9, 0] = numpy.sum(x51 * x56 * x69)
    result[2, 0, 0] = numpy.sum(x53 * x71 * x75)
    result[2, 1, 0] = numpy.sum(x28 * x76 * x77)
    result[2, 2, 0] = numpy.sum(x76 * x84)
    result[2, 3, 0] = numpy.sum(x10 * x77 * x86)
    result[2, 4, 0] = numpy.sum(22.62741699796953 * x28 * x83 * x88)
    result[2, 5, 0] = numpy.sum(x88 * x90)
    result[2, 6, 0] = numpy.sum(x48 * x75 * x85)
    result[2, 7, 0] = numpy.sum(x84 * x86)
    result[2, 8, 0] = numpy.sum(x28 * x87 * x90)
    result[2, 9, 0] = numpy.sum(
        5.842373946721772 * x87 * (x0 * (x50 * x81 + 4.0 * x80 + 2.0 * x82) + x33 * x89)
    )
    return result


def diag_quadrupole3d_31(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fp) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 3), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3 * x8
    x10 = -x2 - R[0]
    x11 = x10 * x8
    x12 = x0 * (x11 + x9)
    x13 = -x2 - A[0]
    x14 = x0 * x8
    x15 = x11 * x3
    x16 = x14 + x15
    x17 = x13 * x16
    x18 = x12 + x17
    x19 = 2.0 * x13
    x20 = x10 * x18
    x21 = 3.0 * x14
    x22 = x13 * x8
    x23 = x22 * x3
    x24 = x10 * x22
    x25 = x0 * (x15 + x21 + x23 + x24)
    x26 = x10**2 * x8
    x27 = x0 * (x11 + x22)
    x28 = x14 + x24
    x29 = x10 * x28
    x30 = x27 + x29
    x31 = x0 * (x11 * x19 + x21 + x26) + x13 * x30
    x32 = x10 * x16
    x33 = x20 + x25
    x34 = x0 * (3.0 * x12 + 2.0 * x17 + x30 + x32) + x13 * x33
    x35 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x36 = da * db * numpy.sqrt(ax**4.5) * numpy.sqrt(bx**2.5)
    x37 = 11.68474789344354 * x36
    x38 = x35 * x37
    x39 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x40 = 0.5641895835477563 * x1
    x41 = x39 * x40
    x42 = x38 * x41
    x43 = -x1 * (ax * A[1] + bx * B[1])
    x44 = -x43 - B[1]
    x45 = x42 * (x0 * (x19 * x28 + 4.0 * x27 + 2.0 * x29) + x13 * x31)
    x46 = -x1 * (ax * A[2] + bx * B[2])
    x47 = -x46 - B[2]
    x48 = -x43 - A[1]
    x49 = x41 * x48
    x50 = 26.12789058968724 * x36
    x51 = x35 * x50
    x52 = x34 * x51
    x53 = x0 * x7
    x54 = x39 * x53
    x55 = x39 * x7
    x56 = x48 * x55
    x57 = x44 * x56
    x58 = x54 + x57
    x59 = 0.3183098861837907 * x6
    x60 = x58 * x59
    x61 = x31 * x51
    x62 = -x46 - A[2]
    x63 = x41 * x62
    x64 = x35 * x53
    x65 = x35 * x7
    x66 = x62 * x65
    x67 = x47 * x66
    x68 = x64 + x67
    x69 = x39 * x59
    x70 = x50 * x69
    x71 = x48**2 * x55
    x72 = x54 + x71
    x73 = x51 * x59
    x74 = x72 * x73
    x75 = x44 * x55
    x76 = x0 * (x56 + x75) + x48 * x58
    x77 = x73 * x76
    x78 = 45.25483399593905 * x36
    x79 = x35 * x62
    x80 = x78 * x79
    x81 = x30 * x78
    x82 = x48 * x69
    x83 = x62**2 * x65
    x84 = x64 + x83
    x85 = x70 * x84
    x86 = x47 * x65
    x87 = x0 * (x66 + x86) + x62 * x68
    x88 = x70 * x87
    x89 = x12 + x32
    x90 = 2.0 * x48
    x91 = x48 * x72 + x54 * x90
    x92 = x38 * x59
    x93 = x91 * x92
    x94 = x14 + x26
    x95 = 3.0 * x54
    x96 = x0 * (x71 + x75 * x90 + x95) + x48 * x76
    x97 = 0.1795871221251666 * x50
    x98 = x94 * x97
    x99 = 2.0 * x62
    x100 = x62 * x84 + x64 * x99
    x101 = x37 * x69
    x102 = x100 * x101
    x103 = 3.0 * x64
    x104 = x0 * (x103 + x83 + x86 * x99) + x62 * x87
    x105 = x13**2 * x8
    x106 = x14 + x23
    x107 = x0 * (x22 + x9) + x106 * x13
    x108 = x0 * (x105 + x19 * x9 + x21) + x107 * x13
    x109 = -x43 - R[1]
    x110 = x109**2 * x55
    x111 = x110 + x54
    x112 = x111 * x92
    x113 = x109 * x55
    x114 = x0 * (x113 + x75)
    x115 = x109 * x75
    x116 = x115 + x54
    x117 = x109 * x116
    x118 = x114 + x117
    x119 = x105 + x14
    x120 = x119 * x13 + x14 * x19
    x121 = x0 * (x113 + x56)
    x122 = x109 * x56
    x123 = x122 + x54
    x124 = x109 * x123
    x125 = x121 + x124
    x126 = x125 * x73
    x127 = x0 * (x115 + x122 + x57 + x95)
    x128 = x116 * x48
    x129 = x114 + x128
    x130 = x109 * x129
    x131 = x127 + x130
    x132 = x119 * x73
    x133 = x111 * x97
    x134 = x0 * (x110 + x113 * x90 + x95) + x125 * x48
    x135 = x40 * x5
    x136 = x13 * x135
    x137 = x0 * (3.0 * x114 + x117 + x125 + 2.0 * x128) + x131 * x48
    x138 = x137 * x51
    x139 = x134 * x51
    x140 = x125 * x78
    x141 = x5 * x59
    x142 = x141 * x50
    x143 = x142 * x84
    x144 = x142 * x87
    x145 = x135 * x38
    x146 = x145 * (x0 * (4.0 * x121 + x123 * x90 + 2.0 * x124) + x134 * x48)
    x147 = x135 * x62
    x148 = x141 * x37
    x149 = x100 * x148
    x150 = -x46 - R[2]
    x151 = x150**2 * x65
    x152 = x151 + x64
    x153 = x101 * x152
    x154 = x150 * x65
    x155 = x0 * (x154 + x86)
    x156 = x150 * x86
    x157 = x156 + x64
    x158 = x150 * x157
    x159 = x155 + x158
    x160 = x107 * x70
    x161 = x152 * x97
    x162 = x119 * x70
    x163 = x0 * (x154 + x66)
    x164 = x150 * x66
    x165 = x164 + x64
    x166 = x150 * x165
    x167 = x163 + x166
    x168 = x0 * (x103 + x156 + x164 + x67)
    x169 = x157 * x62
    x170 = x155 + x169
    x171 = x150 * x170
    x172 = x168 + x171
    x173 = x142 * x76
    x174 = x142 * x72
    x175 = x167 * x78
    x176 = x5 * x60
    x177 = x41 * x5
    x178 = x13 * x177
    x179 = x0 * (x103 + x151 + x154 * x99) + x167 * x62
    x180 = x179 * x50
    x181 = x0 * (3.0 * x155 + x158 + x167 + 2.0 * x169) + x172 * x62
    x182 = x181 * x50
    x183 = x148 * x152
    x184 = x177 * x48
    x185 = x177 * x37
    x186 = x185 * (x0 * (4.0 * x163 + x165 * x99 + 2.0 * x166) + x179 * x62)

    # 90 item(s)
    result[0, 0, 0] = numpy.sum(
        x42 * (x0 * (x18 * x19 + 2.0 * x20 + 4.0 * x25 + x31) + x13 * x34)
    )
    result[0, 0, 1] = numpy.sum(x44 * x45)
    result[0, 0, 2] = numpy.sum(x45 * x47)
    result[0, 1, 0] = numpy.sum(x49 * x52)
    result[0, 1, 1] = numpy.sum(x60 * x61)
    result[0, 1, 2] = numpy.sum(x47 * x49 * x61)
    result[0, 2, 0] = numpy.sum(x52 * x63)
    result[0, 2, 1] = numpy.sum(x44 * x61 * x63)
    result[0, 2, 2] = numpy.sum(x31 * x68 * x70)
    result[0, 3, 0] = numpy.sum(x33 * x74)
    result[0, 3, 1] = numpy.sum(x30 * x77)
    result[0, 3, 2] = numpy.sum(x30 * x47 * x74)
    result[0, 4, 0] = numpy.sum(x33 * x49 * x80)
    result[0, 4, 1] = numpy.sum(x60 * x79 * x81)
    result[0, 4, 2] = numpy.sum(x68 * x81 * x82)
    result[0, 5, 0] = numpy.sum(x33 * x85)
    result[0, 5, 1] = numpy.sum(x30 * x44 * x85)
    result[0, 5, 2] = numpy.sum(x30 * x88)
    result[0, 6, 0] = numpy.sum(x89 * x93)
    result[0, 6, 1] = numpy.sum(x92 * x94 * x96)
    result[0, 6, 2] = numpy.sum(x47 * x93 * x94)
    result[0, 7, 0] = numpy.sum(x62 * x74 * x89)
    result[0, 7, 1] = numpy.sum(x62 * x77 * x94)
    result[0, 7, 2] = numpy.sum(x68 * x72 * x98)
    result[0, 8, 0] = numpy.sum(x48 * x85 * x89)
    result[0, 8, 1] = numpy.sum(x58 * x84 * x98)
    result[0, 8, 2] = numpy.sum(x48 * x88 * x94)
    result[0, 9, 0] = numpy.sum(x102 * x89)
    result[0, 9, 1] = numpy.sum(x102 * x44 * x94)
    result[0, 9, 2] = numpy.sum(x101 * x104 * x94)
    result[1, 0, 0] = numpy.sum(x108 * x112)
    result[1, 0, 1] = numpy.sum(x118 * x120 * x92)
    result[1, 0, 2] = numpy.sum(x112 * x120 * x47)
    result[1, 1, 0] = numpy.sum(x107 * x126)
    result[1, 1, 1] = numpy.sum(x131 * x132)
    result[1, 1, 2] = numpy.sum(x119 * x126 * x47)
    result[1, 2, 0] = numpy.sum(x107 * x111 * x62 * x73)
    result[1, 2, 1] = numpy.sum(x118 * x132 * x62)
    result[1, 2, 2] = numpy.sum(x119 * x133 * x68)
    result[1, 3, 0] = numpy.sum(x106 * x134 * x73)
    result[1, 3, 1] = numpy.sum(x136 * x138)
    result[1, 3, 2] = numpy.sum(x136 * x139 * x47)
    result[1, 4, 0] = numpy.sum(x106 * x140 * x59 * x79)
    result[1, 4, 1] = numpy.sum(x131 * x136 * x80)
    result[1, 4, 2] = numpy.sum(x13 * x140 * x141 * x68)
    result[1, 5, 0] = numpy.sum(x106 * x133 * x84)
    result[1, 5, 1] = numpy.sum(x118 * x13 * x143)
    result[1, 5, 2] = numpy.sum(x111 * x13 * x144)
    result[1, 6, 0] = numpy.sum(x146 * x3)
    result[1, 6, 1] = numpy.sum(
        x145 * (x0 * (4.0 * x127 + x129 * x90 + 2.0 * x130 + x134) + x137 * x48)
    )
    result[1, 6, 2] = numpy.sum(x146 * x47)
    result[1, 7, 0] = numpy.sum(x139 * x147 * x3)
    result[1, 7, 1] = numpy.sum(x138 * x147)
    result[1, 7, 2] = numpy.sum(x134 * x142 * x68)
    result[1, 8, 0] = numpy.sum(x125 * x143 * x3)
    result[1, 8, 1] = numpy.sum(x131 * x143)
    result[1, 8, 2] = numpy.sum(x125 * x144)
    result[1, 9, 0] = numpy.sum(x111 * x149 * x3)
    result[1, 9, 1] = numpy.sum(x118 * x149)
    result[1, 9, 2] = numpy.sum(x104 * x111 * x148)
    result[2, 0, 0] = numpy.sum(x108 * x153)
    result[2, 0, 1] = numpy.sum(x120 * x153 * x44)
    result[2, 0, 2] = numpy.sum(x101 * x120 * x159)
    result[2, 1, 0] = numpy.sum(x152 * x160 * x48)
    result[2, 1, 1] = numpy.sum(x119 * x161 * x58)
    result[2, 1, 2] = numpy.sum(x159 * x162 * x48)
    result[2, 2, 0] = numpy.sum(x160 * x167)
    result[2, 2, 1] = numpy.sum(x162 * x167 * x44)
    result[2, 2, 2] = numpy.sum(x162 * x172)
    result[2, 3, 0] = numpy.sum(x106 * x161 * x72)
    result[2, 3, 1] = numpy.sum(x13 * x152 * x173)
    result[2, 3, 2] = numpy.sum(x13 * x159 * x174)
    result[2, 4, 0] = numpy.sum(x106 * x175 * x82)
    result[2, 4, 1] = numpy.sum(x13 * x175 * x176)
    result[2, 4, 2] = numpy.sum(x172 * x178 * x48 * x78)
    result[2, 5, 0] = numpy.sum(x106 * x179 * x70)
    result[2, 5, 1] = numpy.sum(x178 * x180 * x44)
    result[2, 5, 2] = numpy.sum(x178 * x182)
    result[2, 6, 0] = numpy.sum(x183 * x3 * x91)
    result[2, 6, 1] = numpy.sum(x183 * x96)
    result[2, 6, 2] = numpy.sum(x148 * x159 * x91)
    result[2, 7, 0] = numpy.sum(x167 * x174 * x3)
    result[2, 7, 1] = numpy.sum(x167 * x173)
    result[2, 7, 2] = numpy.sum(x172 * x174)
    result[2, 8, 0] = numpy.sum(x180 * x184 * x3)
    result[2, 8, 1] = numpy.sum(x176 * x180)
    result[2, 8, 2] = numpy.sum(x182 * x184)
    result[2, 9, 0] = numpy.sum(x186 * x3)
    result[2, 9, 1] = numpy.sum(x186 * x44)
    result[2, 9, 2] = numpy.sum(
        x185 * (x0 * (4.0 * x168 + x170 * x99 + 2.0 * x171 + x179) + x181 * x62)
    )
    return result


def diag_quadrupole3d_32(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fd) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 6), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x0 * x8
    x10 = -x2 - R[0]
    x11 = x3 * x8
    x12 = x10 * x11
    x13 = x12 + x9
    x14 = -x2 - A[0]
    x15 = x14 * x5
    x16 = x15 * x7
    x17 = x0 * (x11 + x16)
    x18 = x16 * x3
    x19 = x18 + x9
    x20 = x19 * x3
    x21 = x17 + x20
    x22 = x13 * x14
    x23 = x10 * x8
    x24 = x0 * (x11 + x23)
    x25 = 2.0 * x22 + 3.0 * x24
    x26 = 2.0 * x0
    x27 = 3.0 * x9
    x28 = x10 * x16
    x29 = x0 * (x12 + x18 + x27 + x28)
    x30 = x22 + x24
    x31 = x3 * x30
    x32 = 2.0 * x14
    x33 = x10 * x30
    x34 = x29 + x33
    x35 = x14 * x34
    x36 = x3 * x34
    x37 = x10 * x13
    x38 = x0 * (x16 + x23)
    x39 = x28 + x9
    x40 = x10 * x39
    x41 = x38 + x40
    x42 = x0 * (x25 + x37 + x41)
    x43 = x10**2 * x8
    x44 = x27 + x43
    x45 = x24 + x37
    x46 = x0 * (2.0 * x12 + x44) + x3 * x45
    x47 = 4.0 * x29 + 2.0 * x33
    x48 = x36 + x42
    x49 = x0 * (2.0 * x31 + x46 + x47) + x14 * x48
    x50 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x51 = da * db * numpy.sqrt(ax**4.5) * numpy.sqrt(bx**3.5)
    x52 = x50 * x51
    x53 = 13.49238468338508 * x52
    x54 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x55 = 0.5641895835477563 * x1
    x56 = x54 * x55
    x57 = -x1 * (ax * A[1] + bx * B[1])
    x58 = -x57 - B[1]
    x59 = 23.36949578688709 * x58
    x60 = x0 * (x23 * x32 + x44) + x14 * x41
    x61 = x35 + x42
    x62 = x52 * x56
    x63 = x62 * (x0 * (x30 * x32 + x47 + x60) + x14 * x61)
    x64 = -x1 * (ax * A[2] + bx * B[2])
    x65 = -x64 - B[2]
    x66 = 23.36949578688709 * x65
    x67 = x0 * (x32 * x39 + 4.0 * x38 + 2.0 * x40) + x14 * x60
    x68 = x52 * x67
    x69 = x54 * x7
    x70 = x58**2 * x69
    x71 = x0 * x69
    x72 = x70 + x71
    x73 = 13.49238468338508 * x72
    x74 = 0.3183098861837907 * x6
    x75 = x73 * x74
    x76 = x56 * x59
    x77 = x50 * x7
    x78 = x65**2 * x77
    x79 = x0 * x77
    x80 = x78 + x79
    x81 = 13.49238468338508 * x80
    x82 = x51 * x74
    x83 = x54 * x82
    x84 = -x57 - A[1]
    x85 = 30.16988933062603 * x84
    x86 = x49 * x62
    x87 = x69 * x84
    x88 = x58 * x87
    x89 = x71 + x88
    x90 = 52.25578117937447 * x89
    x91 = x52 * x74
    x92 = x90 * x91
    x93 = 52.25578117937447 * x65
    x94 = x61 * x62
    x95 = x58 * x69
    x96 = x0 * (x87 + x95)
    x97 = x58 * x89
    x98 = x96 + x97
    x99 = 30.16988933062603 * x91
    x100 = x60 * x99
    x101 = x60 * x83
    x102 = -x64 - A[2]
    x103 = 30.16988933062603 * x102
    x104 = 52.25578117937447 * x102
    x105 = x102 * x77
    x106 = x105 * x65
    x107 = x106 + x79
    x108 = 52.25578117937447 * x107
    x109 = x108 * x83
    x110 = x65 * x77
    x111 = x0 * (x105 + x110)
    x112 = x107 * x65
    x113 = x111 + x112
    x114 = 30.16988933062603 * x113
    x115 = x69 * x84**2
    x116 = x115 + x71
    x117 = 30.16988933062603 * x116
    x118 = x117 * x91
    x119 = x84 * x89
    x120 = x119 + x96
    x121 = 52.25578117937447 * x91
    x122 = x121 * x34
    x123 = 3.0 * x71
    x124 = 2.0 * x84
    x125 = x123 + x124 * x95
    x126 = x0 * (x125 + x70) + x84 * x98
    x127 = x126 * x99
    x128 = x121 * x41
    x129 = 0.1795871221251666 * x51
    x130 = x129 * x41
    x131 = 90.5096679918781 * x89
    x132 = x102 * x91
    x133 = 90.5096679918781 * x107
    x134 = x34 * x83
    x135 = 52.25578117937447 * x83
    x136 = x135 * x84
    x137 = x102**2 * x77
    x138 = x137 + x79
    x139 = 30.16988933062603 * x138
    x140 = x139 * x83
    x141 = 52.25578117937447 * x138
    x142 = x102 * x107
    x143 = x111 + x142
    x144 = 52.25578117937447 * x143
    x145 = x144 * x83
    x146 = 3.0 * x79
    x147 = 2.0 * x102
    x148 = x110 * x147 + x146
    x149 = x0 * (x148 + x78) + x102 * x113
    x150 = 30.16988933062603 * x83
    x151 = x149 * x150
    x152 = x116 * x84 + x26 * x87
    x153 = 13.49238468338508 * x152
    x154 = x0 * (x115 + x125) + x120 * x84
    x155 = 23.36949578688709 * x45
    x156 = x155 * x91
    x157 = x43 + x9
    x158 = 2.0 * x0 * (x119 + 2.0 * x96 + x97) + x126 * x84
    x159 = x53 * x74
    x160 = x129 * x157
    x161 = x102 * x121
    x162 = x129 * x45
    x163 = x102 * x138 + x105 * x26
    x164 = 13.49238468338508 * x163
    x165 = x155 * x83
    x166 = x0 * (x137 + x148) + x102 * x143
    x167 = x157 * x83
    x168 = (
        26.98476936677017 * x0 * (2.0 * x111 + x112 + x142)
        + 13.49238468338508 * x102 * x149
    )
    x169 = -x57 - R[1]
    x170 = x169**2 * x69
    x171 = x170 + x71
    x172 = x14 * x19
    x173 = x3**2 * x8
    x174 = x11 * x32 + x27
    x175 = x0 * (x173 + x174) + x14 * x21
    x176 = 2.0 * x0 * (2.0 * x17 + x172 + x20) + x14 * x175
    x177 = x169 * x69
    x178 = x0 * (x177 + x95)
    x179 = x169 * x95
    x180 = x179 + x71
    x181 = x169 * x180
    x182 = x178 + x181
    x183 = 23.36949578688709 * x182
    x184 = x14**2 * x8
    x185 = x17 + x172
    x186 = x0 * (x174 + x184) + x14 * x185
    x187 = x186 * x91
    x188 = x184 + x9
    x189 = x14 * x188 + x16 * x26
    x190 = x123 + x170
    x191 = x0 * (2.0 * x179 + x190) + x182 * x58
    x192 = x129 * x171
    x193 = x0 * (x177 + x87)
    x194 = x169 * x87
    x195 = x194 + x71
    x196 = x169 * x195
    x197 = x193 + x196
    x198 = 30.16988933062603 * x197
    x199 = x0 * (x123 + x179 + x194 + x88)
    x200 = x180 * x84
    x201 = x178 + x200
    x202 = x169 * x201
    x203 = x199 + x202
    x204 = x121 * x185
    x205 = 3.0 * x178 + 2.0 * x200
    x206 = x0 * (x181 + x197 + x205)
    x207 = x203 * x58
    x208 = x206 + x207
    x209 = x188 * x99
    x210 = x129 * x188
    x211 = x0 * (x124 * x177 + x190) + x197 * x84
    x212 = x211 * x99
    x213 = x203 * x84
    x214 = x206 + x213
    x215 = x121 * x19
    x216 = 30.16988933062603 * x15
    x217 = x201 * x58
    x218 = 4.0 * x199 + 2.0 * x202
    x219 = x0 * (x191 + 2.0 * x217 + x218) + x208 * x84
    x220 = x219 * x52
    x221 = x214 * x52
    x222 = x15 * x55
    x223 = x216 * x82
    x224 = 90.5096679918781 * x19
    x225 = x129 * x19
    x226 = x15 * x82
    x227 = 52.25578117937447 * x226
    x228 = 52.25578117937447 * x225
    x229 = x173 + x9
    x230 = x0 * (x124 * x195 + 4.0 * x193 + 2.0 * x196) + x211 * x84
    x231 = 23.36949578688709 * x3
    x232 = x5 * x55
    x233 = x232 * x52 * (x0 * (x124 * x201 + x211 + x218) + x214 * x84)
    x234 = x232 * x3
    x235 = x5 * x82
    x236 = x108 * x235
    x237 = x129 * x229
    x238 = x203 * x235
    x239 = x235 * x3
    x240 = x183 * x235
    x241 = x171 * x235
    x242 = -x64 - R[2]
    x243 = x242**2 * x77
    x244 = x243 + x79
    x245 = 13.49238468338508 * x83
    x246 = x186 * x83
    x247 = x242 * x77
    x248 = x0 * (x110 + x247)
    x249 = x110 * x242
    x250 = x249 + x79
    x251 = x242 * x250
    x252 = x248 + x251
    x253 = 23.36949578688709 * x252
    x254 = x129 * x244
    x255 = x146 + x243
    x256 = x0 * (2.0 * x249 + x255) + x252 * x65
    x257 = x150 * x175
    x258 = x135 * x185
    x259 = 30.16988933062603 * x210
    x260 = x150 * x188
    x261 = x0 * (x105 + x247)
    x262 = x105 * x242
    x263 = x262 + x79
    x264 = x242 * x263
    x265 = x261 + x264
    x266 = x0 * (x106 + x146 + x249 + x262)
    x267 = x102 * x250
    x268 = x248 + x267
    x269 = x242 * x268
    x270 = x266 + x269
    x271 = 3.0 * x248 + 2.0 * x267
    x272 = x0 * (x251 + x265 + x271)
    x273 = x270 * x65
    x274 = x272 + x273
    x275 = 52.25578117937447 * x120
    x276 = 52.25578117937447 * x84
    x277 = x51 * x56
    x278 = x15 * x277
    x279 = x0 * (x147 * x247 + x255) + x102 * x265
    x280 = x150 * x279
    x281 = x135 * x19
    x282 = x102 * x270
    x283 = x272 + x282
    x284 = x268 * x65
    x285 = 4.0 * x266 + 2.0 * x269
    x286 = x0 * (x256 + 2.0 * x284 + x285) + x102 * x274
    x287 = x235 * x244
    x288 = x235 * x253
    x289 = x235 * x275
    x290 = 30.16988933062603 * x235
    x291 = x235 * x90
    x292 = x5 * x51
    x293 = x292 * x56
    x294 = x0 * (x147 * x263 + 4.0 * x261 + 2.0 * x264) + x102 * x279
    x295 = x292 * x294
    x296 = x293 * (x0 * (x147 * x268 + x279 + x285) + x102 * x283)

    # 180 item(s)
    result[0, 0, 0] = numpy.sum(
        x53
        * x56
        * (
            x0
            * (
                x26 * (x13 * x3 + x21 + x25)
                + x32 * (x29 + x31)
                + 2.0 * x35
                + 2.0 * x36
                + 4.0 * x42
            )
            + x14 * x49
        )
    )
    result[0, 0, 1] = numpy.sum(x59 * x63)
    result[0, 0, 2] = numpy.sum(x63 * x66)
    result[0, 0, 3] = numpy.sum(x68 * x75)
    result[0, 0, 4] = numpy.sum(x65 * x68 * x76)
    result[0, 0, 5] = numpy.sum(x67 * x81 * x83)
    result[0, 1, 0] = numpy.sum(x85 * x86)
    result[0, 1, 1] = numpy.sum(x61 * x92)
    result[0, 1, 2] = numpy.sum(x84 * x93 * x94)
    result[0, 1, 3] = numpy.sum(x100 * x98)
    result[0, 1, 4] = numpy.sum(x60 * x65 * x92)
    result[0, 1, 5] = numpy.sum(x101 * x80 * x85)
    result[0, 2, 0] = numpy.sum(x103 * x86)
    result[0, 2, 1] = numpy.sum(x104 * x58 * x94)
    result[0, 2, 2] = numpy.sum(x109 * x61)
    result[0, 2, 3] = numpy.sum(x100 * x102 * x72)
    result[0, 2, 4] = numpy.sum(x109 * x58 * x60)
    result[0, 2, 5] = numpy.sum(x101 * x114)
    result[0, 3, 0] = numpy.sum(x118 * x48)
    result[0, 3, 1] = numpy.sum(x120 * x122)
    result[0, 3, 2] = numpy.sum(x116 * x122 * x65)
    result[0, 3, 3] = numpy.sum(x127 * x41)
    result[0, 3, 4] = numpy.sum(x120 * x128 * x65)
    result[0, 3, 5] = numpy.sum(x117 * x130 * x80)
    result[0, 4, 0] = numpy.sum(x104 * x48 * x62 * x84)
    result[0, 4, 1] = numpy.sum(x131 * x132 * x34)
    result[0, 4, 2] = numpy.sum(x133 * x134 * x84)
    result[0, 4, 3] = numpy.sum(x102 * x128 * x98)
    result[0, 4, 4] = numpy.sum(x130 * x133 * x89)
    result[0, 4, 5] = numpy.sum(x113 * x136 * x41)
    result[0, 5, 0] = numpy.sum(x140 * x48)
    result[0, 5, 1] = numpy.sum(x134 * x141 * x58)
    result[0, 5, 2] = numpy.sum(x134 * x144)
    result[0, 5, 3] = numpy.sum(x130 * x139 * x72)
    result[0, 5, 4] = numpy.sum(x145 * x41 * x58)
    result[0, 5, 5] = numpy.sum(x151 * x41)
    result[0, 6, 0] = numpy.sum(x153 * x46 * x91)
    result[0, 6, 1] = numpy.sum(x154 * x156)
    result[0, 6, 2] = numpy.sum(x152 * x156 * x65)
    result[0, 6, 3] = numpy.sum(x157 * x158 * x159)
    result[0, 6, 4] = numpy.sum(x154 * x157 * x66 * x91)
    result[0, 6, 5] = numpy.sum(x152 * x160 * x81)
    result[0, 7, 0] = numpy.sum(x102 * x118 * x46)
    result[0, 7, 1] = numpy.sum(x120 * x161 * x45)
    result[0, 7, 2] = numpy.sum(x108 * x116 * x162)
    result[0, 7, 3] = numpy.sum(x102 * x127 * x157)
    result[0, 7, 4] = numpy.sum(x108 * x120 * x160)
    result[0, 7, 5] = numpy.sum(x113 * x117 * x160)
    result[0, 8, 0] = numpy.sum(x140 * x46 * x84)
    result[0, 8, 1] = numpy.sum(x138 * x162 * x90)
    result[0, 8, 2] = numpy.sum(x145 * x45 * x84)
    result[0, 8, 3] = numpy.sum(x139 * x160 * x98)
    result[0, 8, 4] = numpy.sum(x143 * x160 * x90)
    result[0, 8, 5] = numpy.sum(x151 * x157 * x84)
    result[0, 9, 0] = numpy.sum(x164 * x46 * x83)
    result[0, 9, 1] = numpy.sum(x163 * x165 * x58)
    result[0, 9, 2] = numpy.sum(x165 * x166)
    result[0, 9, 3] = numpy.sum(x160 * x164 * x72)
    result[0, 9, 4] = numpy.sum(x166 * x167 * x59)
    result[0, 9, 5] = numpy.sum(x167 * x168)
    result[1, 0, 0] = numpy.sum(x159 * x171 * x176)
    result[1, 0, 1] = numpy.sum(x183 * x187)
    result[1, 0, 2] = numpy.sum(x171 * x187 * x66)
    result[1, 0, 3] = numpy.sum(x159 * x189 * x191)
    result[1, 0, 4] = numpy.sum(x183 * x189 * x65 * x91)
    result[1, 0, 5] = numpy.sum(x189 * x192 * x81)
    result[1, 1, 0] = numpy.sum(x175 * x198 * x91)
    result[1, 1, 1] = numpy.sum(x203 * x204)
    result[1, 1, 2] = numpy.sum(x197 * x204 * x65)
    result[1, 1, 3] = numpy.sum(x208 * x209)
    result[1, 1, 4] = numpy.sum(x121 * x188 * x203 * x65)
    result[1, 1, 5] = numpy.sum(x198 * x210 * x80)
    result[1, 2, 0] = numpy.sum(x102 * x171 * x175 * x99)
    result[1, 2, 1] = numpy.sum(x102 * x182 * x204)
    result[1, 2, 2] = numpy.sum(x108 * x185 * x192)
    result[1, 2, 3] = numpy.sum(x102 * x191 * x209)
    result[1, 2, 4] = numpy.sum(x108 * x182 * x210)
    result[1, 2, 5] = numpy.sum(x114 * x188 * x192)
    result[1, 3, 0] = numpy.sum(x21 * x212)
    result[1, 3, 1] = numpy.sum(x214 * x215)
    result[1, 3, 2] = numpy.sum(x211 * x215 * x65)
    result[1, 3, 3] = numpy.sum(x216 * x220 * x55)
    result[1, 3, 4] = numpy.sum(x221 * x222 * x93)
    result[1, 3, 5] = numpy.sum(x211 * x223 * x80)
    result[1, 4, 0] = numpy.sum(x161 * x197 * x21)
    result[1, 4, 1] = numpy.sum(x132 * x203 * x224)
    result[1, 4, 2] = numpy.sum(x133 * x197 * x225)
    result[1, 4, 3] = numpy.sum(x104 * x208 * x222 * x52)
    result[1, 4, 4] = numpy.sum(x133 * x203 * x226)
    result[1, 4, 5] = numpy.sum(x113 * x197 * x227)
    result[1, 5, 0] = numpy.sum(x139 * x192 * x21)
    result[1, 5, 1] = numpy.sum(x138 * x182 * x228)
    result[1, 5, 2] = numpy.sum(x144 * x19 * x192)
    result[1, 5, 3] = numpy.sum(x139 * x191 * x226)
    result[1, 5, 4] = numpy.sum(x144 * x182 * x226)
    result[1, 5, 5] = numpy.sum(x149 * x171 * x223)
    result[1, 6, 0] = numpy.sum(x159 * x229 * x230)
    result[1, 6, 1] = numpy.sum(x231 * x233)
    result[1, 6, 2] = numpy.sum(x230 * x234 * x52 * x66)
    result[1, 6, 3] = numpy.sum(
        x232
        * x53
        * (
            x0
            * (
                x124 * (x199 + x217)
                + 4.0 * x206
                + 2.0 * x207
                + 2.0 * x213
                + x26 * (x180 * x58 + x205 + x98)
            )
            + x219 * x84
        )
    )
    result[1, 6, 4] = numpy.sum(x233 * x66)
    result[1, 6, 5] = numpy.sum(x230 * x235 * x81)
    result[1, 7, 0] = numpy.sum(x102 * x212 * x229)
    result[1, 7, 1] = numpy.sum(x104 * x221 * x234)
    result[1, 7, 2] = numpy.sum(x211 * x236 * x3)
    result[1, 7, 3] = numpy.sum(x103 * x220 * x232)
    result[1, 7, 4] = numpy.sum(x214 * x236)
    result[1, 7, 5] = numpy.sum(x114 * x211 * x235)
    result[1, 8, 0] = numpy.sum(x139 * x197 * x237)
    result[1, 8, 1] = numpy.sum(x141 * x238 * x3)
    result[1, 8, 2] = numpy.sum(x144 * x197 * x239)
    result[1, 8, 3] = numpy.sum(x139 * x208 * x235)
    result[1, 8, 4] = numpy.sum(x144 * x238)
    result[1, 8, 5] = numpy.sum(x149 * x198 * x235)
    result[1, 9, 0] = numpy.sum(x164 * x192 * x229)
    result[1, 9, 1] = numpy.sum(x163 * x240 * x3)
    result[1, 9, 2] = numpy.sum(x166 * x231 * x241)
    result[1, 9, 3] = numpy.sum(x164 * x191 * x235)
    result[1, 9, 4] = numpy.sum(x166 * x240)
    result[1, 9, 5] = numpy.sum(x168 * x241)
    result[2, 0, 0] = numpy.sum(x176 * x244 * x245)
    result[2, 0, 1] = numpy.sum(x244 * x246 * x59)
    result[2, 0, 2] = numpy.sum(x246 * x253)
    result[2, 0, 3] = numpy.sum(x189 * x254 * x73)
    result[2, 0, 4] = numpy.sum(x189 * x253 * x58 * x83)
    result[2, 0, 5] = numpy.sum(x189 * x245 * x256)
    result[2, 1, 0] = numpy.sum(x244 * x257 * x84)
    result[2, 1, 1] = numpy.sum(x185 * x254 * x90)
    result[2, 1, 2] = numpy.sum(x252 * x258 * x84)
    result[2, 1, 3] = numpy.sum(x244 * x259 * x98)
    result[2, 1, 4] = numpy.sum(x210 * x252 * x90)
    result[2, 1, 5] = numpy.sum(x256 * x260 * x84)
    result[2, 2, 0] = numpy.sum(x257 * x265)
    result[2, 2, 1] = numpy.sum(x258 * x265 * x58)
    result[2, 2, 2] = numpy.sum(x258 * x270)
    result[2, 2, 3] = numpy.sum(x259 * x265 * x72)
    result[2, 2, 4] = numpy.sum(x135 * x188 * x270 * x58)
    result[2, 2, 5] = numpy.sum(x260 * x274)
    result[2, 3, 0] = numpy.sum(x117 * x21 * x254)
    result[2, 3, 1] = numpy.sum(x120 * x228 * x244)
    result[2, 3, 2] = numpy.sum(x116 * x228 * x252)
    result[2, 3, 3] = numpy.sum(x126 * x223 * x244)
    result[2, 3, 4] = numpy.sum(x226 * x252 * x275)
    result[2, 3, 5] = numpy.sum(x117 * x226 * x256)
    result[2, 4, 0] = numpy.sum(x136 * x21 * x265)
    result[2, 4, 1] = numpy.sum(x131 * x225 * x265)
    result[2, 4, 2] = numpy.sum(x224 * x270 * x83 * x84)
    result[2, 4, 3] = numpy.sum(x227 * x265 * x98)
    result[2, 4, 4] = numpy.sum(x131 * x226 * x270)
    result[2, 4, 5] = numpy.sum(x274 * x276 * x278)
    result[2, 5, 0] = numpy.sum(x21 * x280)
    result[2, 5, 1] = numpy.sum(x279 * x281 * x58)
    result[2, 5, 2] = numpy.sum(x281 * x283)
    result[2, 5, 3] = numpy.sum(x223 * x279 * x72)
    result[2, 5, 4] = numpy.sum(52.25578117937447 * x278 * x283 * x58)
    result[2, 5, 5] = numpy.sum(x216 * x277 * x286)
    result[2, 6, 0] = numpy.sum(x153 * x237 * x244)
    result[2, 6, 1] = numpy.sum(x154 * x231 * x287)
    result[2, 6, 2] = numpy.sum(x152 * x288 * x3)
    result[2, 6, 3] = numpy.sum(13.49238468338508 * x158 * x287)
    result[2, 6, 4] = numpy.sum(x154 * x288)
    result[2, 6, 5] = numpy.sum(x153 * x235 * x256)
    result[2, 7, 0] = numpy.sum(x117 * x237 * x265)
    result[2, 7, 1] = numpy.sum(x265 * x289 * x3)
    result[2, 7, 2] = numpy.sum(52.25578117937447 * x116 * x239 * x270)
    result[2, 7, 3] = numpy.sum(x126 * x265 * x290)
    result[2, 7, 4] = numpy.sum(x270 * x289)
    result[2, 7, 5] = numpy.sum(x117 * x235 * x274)
    result[2, 8, 0] = numpy.sum(x229 * x280 * x84)
    result[2, 8, 1] = numpy.sum(x279 * x291 * x3)
    result[2, 8, 2] = numpy.sum(x276 * x283 * x293 * x3)
    result[2, 8, 3] = numpy.sum(x279 * x290 * x98)
    result[2, 8, 4] = numpy.sum(x283 * x291)
    result[2, 8, 5] = numpy.sum(x286 * x293 * x85)
    result[2, 9, 0] = numpy.sum(x229 * x245 * x294)
    result[2, 9, 1] = numpy.sum(x295 * x3 * x76)
    result[2, 9, 2] = numpy.sum(x231 * x296)
    result[2, 9, 3] = numpy.sum(x295 * x75)
    result[2, 9, 4] = numpy.sum(x296 * x59)
    result[2, 9, 5] = numpy.sum(
        13.49238468338508
        * x293
        * (
            x0
            * (
                x147 * (x266 + x284)
                + x26 * (x113 + x250 * x65 + x271)
                + 4.0 * x272
                + 2.0 * x273
                + 2.0 * x282
            )
            + x102 * x286
        )
    )
    return result


def diag_quadrupole3d_33(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ff) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 10), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3 * x8
    x10 = -x2 - R[0]
    x11 = x10 * x8
    x12 = x0 * (x11 + x9)
    x13 = -x2 - A[0]
    x14 = x0 * x8
    x15 = x10 * x9
    x16 = x14 + x15
    x17 = x13 * x16
    x18 = x12 + x17
    x19 = 2.0 * x13
    x20 = x18 * x19
    x21 = x3**2 * x8
    x22 = 3.0 * x14
    x23 = x19 * x9 + x22
    x24 = x0 * (x21 + x23)
    x25 = x13 * x8
    x26 = x0 * (x25 + x9)
    x27 = x25 * x3
    x28 = x14 + x27
    x29 = x28 * x3
    x30 = x26 + x29
    x31 = x13 * x30
    x32 = x24 + x31
    x33 = x18 * x3
    x34 = x10 * x25
    x35 = x0 * (x15 + x22 + x27 + x34)
    x36 = 4.0 * x35
    x37 = 2.0 * x33 + x36
    x38 = 2.0 * x0
    x39 = x16 * x3
    x40 = 3.0 * x12 + 2.0 * x17
    x41 = x0 * (x30 + x39 + x40)
    x42 = x13 * (x33 + x35)
    x43 = 2.0 * x3
    x44 = x10 * x16
    x45 = x0 * (x11 + x25)
    x46 = x14 + x34
    x47 = x10 * x46
    x48 = x45 + x47
    x49 = x0 * (x40 + x44 + x48)
    x50 = x10 * x18
    x51 = x35 + x50
    x52 = x3 * x51
    x53 = x49 + x52
    x54 = x3 * x53
    x55 = x13 * x53
    x56 = 2.0 * x50
    x57 = x10**2 * x8
    x58 = x22 + x57
    x59 = x12 + x44
    x60 = x0 * (x11 * x43 + x58) + x3 * x59
    x61 = x0 * (x37 + x56 + x60)
    x62 = x13 * x51
    x63 = 2.0 * x0 * (x41 + x42 + 2.0 * x49 + x52 + x62)
    x64 = x55 + x61
    x65 = x3 * x64 + x63
    x66 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x67 = da * db * numpy.sqrt(ax**4.5) * numpy.sqrt(bx**4.5)
    x68 = x66 * x67
    x69 = 12.06795573225041 * x68
    x70 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x71 = 0.5641895835477563 * x1
    x72 = x70 * x71
    x73 = -x1 * (ax * A[1] + bx * B[1])
    x74 = -x73 - B[1]
    x75 = x72 * x74
    x76 = 26.98476936677017 * x68
    x77 = x76 * (x13 * x64 + x63)
    x78 = -x1 * (ax * A[2] + bx * B[2])
    x79 = -x78 - B[2]
    x80 = x72 * x79
    x81 = x0 * (x11 * x19 + x58) + x13 * x48
    x82 = x49 + x62
    x83 = x0 * (x20 + x36 + x56 + x81) + x13 * x82
    x84 = x68 * x83
    x85 = x7 * x70
    x86 = x74**2 * x85
    x87 = x0 * x85
    x88 = x86 + x87
    x89 = 26.98476936677017 * x88
    x90 = 0.3183098861837907 * x6
    x91 = x89 * x90
    x92 = x66 * x7
    x93 = x79**2 * x92
    x94 = x0 * x92
    x95 = x93 + x94
    x96 = 26.98476936677017 * x95
    x97 = x67 * x90
    x98 = x70 * x97
    x99 = x96 * x98
    x100 = x0 * (x19 * x46 + 4.0 * x45 + 2.0 * x47) + x13 * x81
    x101 = x74 * x85
    x102 = x101 * x38 + x74 * x88
    x103 = 12.06795573225041 * x102
    x104 = x68 * x90
    x105 = x68 * x79
    x106 = x79 * x92
    x107 = x106 * x38 + x79 * x95
    x108 = 12.06795573225041 * x107
    x109 = -x73 - A[1]
    x110 = x109 * x72
    x111 = x65 * x76
    x112 = 60.33977866125206 * x64
    x113 = x109 * x85
    x114 = x113 * x74
    x115 = x114 + x87
    x116 = x104 * x115
    x117 = x112 * x68
    x118 = x0 * (x101 + x113)
    x119 = x115 * x74
    x120 = x118 + x119
    x121 = 60.33977866125206 * x120
    x122 = x104 * x82
    x123 = 104.5115623587489 * x82
    x124 = 60.33977866125206 * x95
    x125 = x82 * x98
    x126 = 3.0 * x87
    x127 = 2.0 * x109
    x128 = x101 * x127 + x126
    x129 = x0 * (x128 + x86)
    x130 = x120 * x74
    x131 = x129 + x130
    x132 = 26.98476936677017 * x131
    x133 = x104 * x81
    x134 = 60.33977866125206 * x81
    x135 = x104 * x79
    x136 = 0.1795871221251666 * x67
    x137 = x115 * x136
    x138 = 26.98476936677017 * x98
    x139 = x138 * x81
    x140 = -x78 - A[2]
    x141 = x140 * x92
    x142 = x141 * x79
    x143 = x142 + x94
    x144 = x143 * x98
    x145 = 60.33977866125206 * x88
    x146 = x0 * (x106 + x141)
    x147 = x143 * x79
    x148 = x146 + x147
    x149 = 60.33977866125206 * x148
    x150 = 26.98476936677017 * x102
    x151 = x136 * x143
    x152 = x74 * x98
    x153 = 3.0 * x94
    x154 = 2.0 * x140
    x155 = x106 * x154 + x153
    x156 = x0 * (x155 + x93)
    x157 = x148 * x79
    x158 = x156 + x157
    x159 = x54 + x61
    x160 = x109**2 * x85
    x161 = x160 + x87
    x162 = 26.98476936677017 * x161
    x163 = x104 * x162
    x164 = x109 * x115
    x165 = x118 + x164
    x166 = 60.33977866125206 * x104
    x167 = x165 * x166
    x168 = 60.33977866125206 * x161
    x169 = x109 * x120
    x170 = x129 + x169
    x171 = x166 * x170
    x172 = 104.5115623587489 * x51
    x173 = x124 * x136
    x174 = 2.0 * x0 * (2.0 * x118 + x119 + x164)
    x175 = x170 * x74 + x174
    x176 = 26.98476936677017 * x104
    x177 = x175 * x176
    x178 = x136 * x48
    x179 = x140 * x68
    x180 = 46.73899157377418 * x179
    x181 = 104.5115623587489 * x53
    x182 = x104 * x140
    x183 = 181.0193359837562 * x137
    x184 = 104.5115623587489 * x148
    x185 = x109 * x98
    x186 = 46.73899157377418 * x48
    x187 = 104.5115623587489 * x48
    x188 = x140**2 * x92
    x189 = x188 + x94
    x190 = x138 * x189
    x191 = 60.33977866125206 * x98
    x192 = x191 * x53
    x193 = x140 * x143
    x194 = x146 + x193
    x195 = x136 * x189
    x196 = 104.5115623587489 * x194
    x197 = x140 * x148
    x198 = x156 + x197
    x199 = x191 * x198
    x200 = 2.0 * x0 * (2.0 * x146 + x147 + x193)
    x201 = x198 * x79 + x200
    x202 = x138 * x201
    x203 = x109 * x161 + x113 * x38
    x204 = 2.0 * x0 * (2.0 * x12 + x39 + x44) + x3 * x60
    x205 = x69 * x90
    x206 = x0 * (x128 + x160) + x109 * x165
    x207 = x176 * x60
    x208 = x109 * x170 + x174
    x209 = x176 * x208
    x210 = 46.73899157377418 * x59
    x211 = x136 * x203
    x212 = x14 + x57
    x213 = x0 * (5.0 * x129 + 2.0 * x130 + 3.0 * x169) + x109 * x175
    x214 = x136 * x212
    x215 = 104.5115623587489 * x59
    x216 = x136 * x59
    x217 = 60.33977866125206 * x212
    x218 = 60.33977866125206 * x214
    x219 = 60.33977866125206 * x137
    x220 = 60.33977866125206 * x195
    x221 = 26.98476936677017 * x195
    x222 = x140 * x189 + x141 * x38
    x223 = 12.06795573225041 * x222
    x224 = x138 * x60
    x225 = x0 * (x155 + x188) + x140 * x194
    x226 = x140 * x198 + x200
    x227 = x138 * x226
    x228 = (
        12.06795573225041 * x0 * (5.0 * x156 + 2.0 * x157 + 3.0 * x197)
        + 12.06795573225041 * x140 * x201
    )
    x229 = -x73 - R[1]
    x230 = x229**2 * x85
    x231 = x230 + x87
    x232 = x3 * x30
    x233 = x13 * x28
    x234 = 2.0 * x0 * (x233 + 2.0 * x26 + x29)
    x235 = x234 + x3 * x32
    x236 = x0 * (2.0 * x232 + 5.0 * x24 + 3.0 * x31) + x13 * x235
    x237 = x229 * x85
    x238 = x0 * (x101 + x237)
    x239 = x101 * x229
    x240 = x239 + x87
    x241 = x229 * x240
    x242 = x238 + x241
    x243 = x13 * x32 + x234
    x244 = x176 * x243
    x245 = x13**2 * x8
    x246 = x233 + x26
    x247 = x0 * (x23 + x245) + x13 * x246
    x248 = 2.0 * x74
    x249 = x126 + x230
    x250 = x0 * (x237 * x248 + x249) + x242 * x74
    x251 = x176 * x250
    x252 = 46.73899157377418 * x242
    x253 = x136 * x96
    x254 = x14 + x245
    x255 = x13 * x254 + x14 * x19
    x256 = x240 * x74
    x257 = 2.0 * x0 * (2.0 * x238 + x241 + x256) + x250 * x74
    x258 = x136 * x231
    x259 = x0 * (x113 + x237)
    x260 = x113 * x229
    x261 = x260 + x87
    x262 = x229 * x261
    x263 = x259 + x262
    x264 = 26.98476936677017 * x263
    x265 = x0 * (x114 + x126 + x239 + x260)
    x266 = x109 * x240
    x267 = x238 + x266
    x268 = x229 * x267
    x269 = x265 + x268
    x270 = x166 * x32
    x271 = 3.0 * x238 + 2.0 * x266
    x272 = x0 * (x241 + x263 + x271)
    x273 = x269 * x74
    x274 = x272 + x273
    x275 = x166 * x274
    x276 = 104.5115623587489 * x269
    x277 = x267 * x74
    x278 = 2.0 * x277
    x279 = 4.0 * x265
    x280 = 2.0 * x268 + x279
    x281 = x0 * (x250 + x278 + x280)
    x282 = x274 * x74
    x283 = x281 + x282
    x284 = x176 * x254
    x285 = x136 * x254
    x286 = 60.33977866125206 * x151
    x287 = 104.5115623587489 * x151
    x288 = 26.98476936677017 * x258
    x289 = x232 + x24
    x290 = x0 * (x127 * x237 + x249) + x109 * x263
    x291 = x176 * x290
    x292 = x109 * x269
    x293 = x272 + x292
    x294 = x166 * x30
    x295 = x109 * x274
    x296 = x281 + x295
    x297 = 104.5115623587489 * x28
    x298 = x0 * (x120 + x256 + x271)
    x299 = x109 * (x265 + x277)
    x300 = 2.0 * x0 * (2.0 * x272 + x273 + x292 + x298 + x299)
    x301 = x296 * x74 + x300
    x302 = x5 * x71
    x303 = x302 * x76
    x304 = x301 * x303
    x305 = x13 * x302
    x306 = 60.33977866125206 * x296
    x307 = x5 * x97
    x308 = x293 * x307
    x309 = 26.98476936677017 * x307
    x310 = x290 * x309
    x311 = 46.73899157377418 * x263
    x312 = x136 * x263
    x313 = x13 * x307
    x314 = 104.5115623587489 * x143
    x315 = 60.33977866125206 * x258
    x316 = x136 * x242
    x317 = x189 * x309
    x318 = 60.33977866125206 * x307
    x319 = x194 * x318
    x320 = x198 * x318
    x321 = x14 + x21
    x322 = x3 * x321 + x38 * x9
    x323 = 12.06795573225041 * x322
    x324 = x0 * (x127 * x261 + 4.0 * x259 + 2.0 * x262) + x109 * x290
    x325 = x104 * x324
    x326 = x127 * x267
    x327 = x0 * (x280 + x290 + x326) + x109 * x293
    x328 = 26.98476936677017 * x321
    x329 = x303 * (x109 * x296 + x300)
    x330 = x3 * x302
    x331 = x307 * x96
    x332 = 60.33977866125206 * x321
    x333 = x3 * x307
    x334 = x250 * x309
    x335 = x226 * x309
    x336 = -x78 - R[2]
    x337 = x336**2 * x92
    x338 = x337 + x94
    x339 = 12.06795573225041 * x98
    x340 = x138 * x243
    x341 = x336 * x92
    x342 = x0 * (x106 + x341)
    x343 = x106 * x336
    x344 = x343 + x94
    x345 = x336 * x344
    x346 = x342 + x345
    x347 = x136 * x338
    x348 = 46.73899157377418 * x346
    x349 = 2.0 * x79
    x350 = x153 + x337
    x351 = x0 * (x341 * x349 + x350) + x346 * x79
    x352 = x138 * x351
    x353 = x136 * x346
    x354 = x344 * x79
    x355 = 2.0 * x0 * (2.0 * x342 + x345 + x354) + x351 * x79
    x356 = x138 * x235
    x357 = x191 * x32
    x358 = 104.5115623587489 * x137
    x359 = x191 * x246
    x360 = x138 * x254
    x361 = x0 * (x141 + x341)
    x362 = x141 * x336
    x363 = x362 + x94
    x364 = x336 * x363
    x365 = x361 + x364
    x366 = x0 * (x142 + x153 + x343 + x362)
    x367 = x140 * x344
    x368 = x342 + x367
    x369 = x336 * x368
    x370 = x366 + x369
    x371 = x136 * x365
    x372 = 104.5115623587489 * x370
    x373 = 3.0 * x342 + 2.0 * x367
    x374 = x0 * (x345 + x365 + x373)
    x375 = x370 * x79
    x376 = x374 + x375
    x377 = x368 * x79
    x378 = 2.0 * x377
    x379 = 4.0 * x366
    x380 = 2.0 * x369 + x379
    x381 = x0 * (x351 + x378 + x380)
    x382 = x376 * x79
    x383 = x381 + x382
    x384 = 60.33977866125206 * x347
    x385 = x136 * x28
    x386 = x175 * x309
    x387 = x170 * x318
    x388 = x165 * x318
    x389 = x162 * x307
    x390 = 46.73899157377418 * x365
    x391 = 104.5115623587489 * x115
    x392 = x5 * x67
    x393 = x392 * x72
    x394 = x13 * x393
    x395 = x0 * (x154 * x341 + x350) + x140 * x365
    x396 = x138 * x395
    x397 = x191 * x30
    x398 = x140 * x370
    x399 = x374 + x398
    x400 = x140 * x376
    x401 = x381 + x400
    x402 = x307 * x395
    x403 = x307 * x399
    x404 = 60.33977866125206 * x401
    x405 = x0 * (x148 + x354 + x373)
    x406 = x140 * (x366 + x377)
    x407 = 2.0 * x0 * (2.0 * x374 + x375 + x398 + x405 + x406)
    x408 = x401 * x79 + x407
    x409 = 26.98476936677017 * x393
    x410 = x408 * x409
    x411 = x208 * x309
    x412 = x309 * x351
    x413 = 12.06795573225041 * x307
    x414 = x3 * x393
    x415 = x0 * (x154 * x363 + 4.0 * x361 + 2.0 * x364) + x140 * x395
    x416 = x415 * x98
    x417 = x154 * x368
    x418 = x0 * (x380 + x395 + x417) + x140 * x399
    x419 = x392 * x91
    x420 = x409 * (x140 * x401 + x407)

    # 300 item(s)
    result[0, 0, 0] = numpy.sum(
        x69
        * x72
        * (
            x0
            * (
                x38 * (x20 + x32 + x37)
                + x43 * (x41 + x42)
                + 2.0 * x54
                + 3.0 * x55
                + 5.0 * x61
            )
            + x13 * x65
        )
    )
    result[0, 0, 1] = numpy.sum(x75 * x77)
    result[0, 0, 2] = numpy.sum(x77 * x80)
    result[0, 0, 3] = numpy.sum(x84 * x91)
    result[0, 0, 4] = numpy.sum(46.73899157377418 * x75 * x79 * x84)
    result[0, 0, 5] = numpy.sum(x83 * x99)
    result[0, 0, 6] = numpy.sum(x100 * x103 * x104)
    result[0, 0, 7] = numpy.sum(x100 * x105 * x91)
    result[0, 0, 8] = numpy.sum(x100 * x74 * x99)
    result[0, 0, 9] = numpy.sum(x100 * x108 * x98)
    result[0, 1, 0] = numpy.sum(x110 * x111)
    result[0, 1, 1] = numpy.sum(x112 * x116)
    result[0, 1, 2] = numpy.sum(x109 * x117 * x80)
    result[0, 1, 3] = numpy.sum(x121 * x122)
    result[0, 1, 4] = numpy.sum(x116 * x123 * x79)
    result[0, 1, 5] = numpy.sum(x109 * x124 * x125)
    result[0, 1, 6] = numpy.sum(x132 * x133)
    result[0, 1, 7] = numpy.sum(x120 * x134 * x135)
    result[0, 1, 8] = numpy.sum(x124 * x137 * x81)
    result[0, 1, 9] = numpy.sum(x107 * x109 * x139)
    result[0, 2, 0] = numpy.sum(x111 * x140 * x72)
    result[0, 2, 1] = numpy.sum(x117 * x140 * x75)
    result[0, 2, 2] = numpy.sum(x112 * x144)
    result[0, 2, 3] = numpy.sum(x122 * x140 * x145)
    result[0, 2, 4] = numpy.sum(x123 * x144 * x74)
    result[0, 2, 5] = numpy.sum(x125 * x149)
    result[0, 2, 6] = numpy.sum(x133 * x140 * x150)
    result[0, 2, 7] = numpy.sum(x134 * x151 * x88)
    result[0, 2, 8] = numpy.sum(x134 * x148 * x152)
    result[0, 2, 9] = numpy.sum(x139 * x158)
    result[0, 3, 0] = numpy.sum(x159 * x163)
    result[0, 3, 1] = numpy.sum(x167 * x53)
    result[0, 3, 2] = numpy.sum(x135 * x168 * x53)
    result[0, 3, 3] = numpy.sum(x171 * x51)
    result[0, 3, 4] = numpy.sum(x135 * x165 * x172)
    result[0, 3, 5] = numpy.sum(x161 * x173 * x51)
    result[0, 3, 6] = numpy.sum(x177 * x48)
    result[0, 3, 7] = numpy.sum(x171 * x48 * x79)
    result[0, 3, 8] = numpy.sum(x165 * x173 * x48)
    result[0, 3, 9] = numpy.sum(x107 * x162 * x178)
    result[0, 4, 0] = numpy.sum(x110 * x159 * x180)
    result[0, 4, 1] = numpy.sum(x116 * x140 * x181)
    result[0, 4, 2] = numpy.sum(x109 * x144 * x181)
    result[0, 4, 3] = numpy.sum(x120 * x172 * x182)
    result[0, 4, 4] = numpy.sum(x143 * x183 * x51)
    result[0, 4, 5] = numpy.sum(x184 * x185 * x51)
    result[0, 4, 6] = numpy.sum(x131 * x182 * x186)
    result[0, 4, 7] = numpy.sum(x120 * x151 * x187)
    result[0, 4, 8] = numpy.sum(x137 * x148 * x187)
    result[0, 4, 9] = numpy.sum(x158 * x185 * x186)
    result[0, 5, 0] = numpy.sum(x159 * x190)
    result[0, 5, 1] = numpy.sum(x189 * x192 * x74)
    result[0, 5, 2] = numpy.sum(x192 * x194)
    result[0, 5, 3] = numpy.sum(x145 * x195 * x51)
    result[0, 5, 4] = numpy.sum(x152 * x196 * x51)
    result[0, 5, 5] = numpy.sum(x199 * x51)
    result[0, 5, 6] = numpy.sum(x150 * x178 * x189)
    result[0, 5, 7] = numpy.sum(x145 * x178 * x194)
    result[0, 5, 8] = numpy.sum(x199 * x48 * x74)
    result[0, 5, 9] = numpy.sum(x202 * x48)
    result[0, 6, 0] = numpy.sum(x203 * x204 * x205)
    result[0, 6, 1] = numpy.sum(x206 * x207)
    result[0, 6, 2] = numpy.sum(x203 * x207 * x79)
    result[0, 6, 3] = numpy.sum(x209 * x59)
    result[0, 6, 4] = numpy.sum(x135 * x206 * x210)
    result[0, 6, 5] = numpy.sum(x211 * x59 * x96)
    result[0, 6, 6] = numpy.sum(x205 * x212 * x213)
    result[0, 6, 7] = numpy.sum(x209 * x212 * x79)
    result[0, 6, 8] = numpy.sum(x206 * x214 * x96)
    result[0, 6, 9] = numpy.sum(x108 * x211 * x212)
    result[0, 7, 0] = numpy.sum(x140 * x163 * x204)
    result[0, 7, 1] = numpy.sum(x140 * x167 * x60)
    result[0, 7, 2] = numpy.sum(x151 * x168 * x60)
    result[0, 7, 3] = numpy.sum(x140 * x171 * x59)
    result[0, 7, 4] = numpy.sum(x151 * x165 * x215)
    result[0, 7, 5] = numpy.sum(x148 * x168 * x216)
    result[0, 7, 6] = numpy.sum(x140 * x177 * x212)
    result[0, 7, 7] = numpy.sum(x151 * x170 * x217)
    result[0, 7, 8] = numpy.sum(x148 * x165 * x218)
    result[0, 7, 9] = numpy.sum(x158 * x162 * x214)
    result[0, 8, 0] = numpy.sum(x109 * x190 * x204)
    result[0, 8, 1] = numpy.sum(x189 * x219 * x60)
    result[0, 8, 2] = numpy.sum(x109 * x191 * x194 * x60)
    result[0, 8, 3] = numpy.sum(x120 * x220 * x59)
    result[0, 8, 4] = numpy.sum(x137 * x194 * x215)
    result[0, 8, 5] = numpy.sum(x109 * x199 * x59)
    result[0, 8, 6] = numpy.sum(x131 * x212 * x221)
    result[0, 8, 7] = numpy.sum(x120 * x194 * x218)
    result[0, 8, 8] = numpy.sum(x137 * x198 * x217)
    result[0, 8, 9] = numpy.sum(x109 * x202 * x212)
    result[0, 9, 0] = numpy.sum(x204 * x223 * x98)
    result[0, 9, 1] = numpy.sum(x222 * x224 * x74)
    result[0, 9, 2] = numpy.sum(x224 * x225)
    result[0, 9, 3] = numpy.sum(x216 * x222 * x89)
    result[0, 9, 4] = numpy.sum(x152 * x210 * x225)
    result[0, 9, 5] = numpy.sum(x227 * x59)
    result[0, 9, 6] = numpy.sum(x102 * x214 * x223)
    result[0, 9, 7] = numpy.sum(x214 * x225 * x89)
    result[0, 9, 8] = numpy.sum(x212 * x227 * x74)
    result[0, 9, 9] = numpy.sum(x212 * x228 * x98)
    result[1, 0, 0] = numpy.sum(x205 * x231 * x236)
    result[1, 0, 1] = numpy.sum(x242 * x244)
    result[1, 0, 2] = numpy.sum(x231 * x244 * x79)
    result[1, 0, 3] = numpy.sum(x247 * x251)
    result[1, 0, 4] = numpy.sum(x135 * x247 * x252)
    result[1, 0, 5] = numpy.sum(x231 * x247 * x253)
    result[1, 0, 6] = numpy.sum(x205 * x255 * x257)
    result[1, 0, 7] = numpy.sum(x251 * x255 * x79)
    result[1, 0, 8] = numpy.sum(x242 * x253 * x255)
    result[1, 0, 9] = numpy.sum(x108 * x255 * x258)
    result[1, 1, 0] = numpy.sum(x104 * x235 * x264)
    result[1, 1, 1] = numpy.sum(x269 * x270)
    result[1, 1, 2] = numpy.sum(x263 * x270 * x79)
    result[1, 1, 3] = numpy.sum(x246 * x275)
    result[1, 1, 4] = numpy.sum(x135 * x246 * x276)
    result[1, 1, 5] = numpy.sum(x173 * x246 * x263)
    result[1, 1, 6] = numpy.sum(x283 * x284)
    result[1, 1, 7] = numpy.sum(x254 * x275 * x79)
    result[1, 1, 8] = numpy.sum(x173 * x254 * x269)
    result[1, 1, 9] = numpy.sum(x107 * x264 * x285)
    result[1, 2, 0] = numpy.sum(x140 * x176 * x231 * x235)
    result[1, 2, 1] = numpy.sum(x140 * x242 * x270)
    result[1, 2, 2] = numpy.sum(x231 * x286 * x32)
    result[1, 2, 3] = numpy.sum(x140 * x166 * x246 * x250)
    result[1, 2, 4] = numpy.sum(x242 * x246 * x287)
    result[1, 2, 5] = numpy.sum(x149 * x246 * x258)
    result[1, 2, 6] = numpy.sum(x140 * x257 * x284)
    result[1, 2, 7] = numpy.sum(x250 * x254 * x286)
    result[1, 2, 8] = numpy.sum(x149 * x242 * x285)
    result[1, 2, 9] = numpy.sum(x158 * x254 * x288)
    result[1, 3, 0] = numpy.sum(x289 * x291)
    result[1, 3, 1] = numpy.sum(x293 * x294)
    result[1, 3, 2] = numpy.sum(x290 * x294 * x79)
    result[1, 3, 3] = numpy.sum(x166 * x28 * x296)
    result[1, 3, 4] = numpy.sum(x135 * x293 * x297)
    result[1, 3, 5] = numpy.sum(x173 * x28 * x290)
    result[1, 3, 6] = numpy.sum(x13 * x304)
    result[1, 3, 7] = numpy.sum(x105 * x305 * x306)
    result[1, 3, 8] = numpy.sum(x124 * x13 * x308)
    result[1, 3, 9] = numpy.sum(x107 * x13 * x310)
    result[1, 4, 0] = numpy.sum(x182 * x289 * x311)
    result[1, 4, 1] = numpy.sum(x182 * x276 * x30)
    result[1, 4, 2] = numpy.sum(x263 * x287 * x30)
    result[1, 4, 3] = numpy.sum(x182 * x274 * x297)
    result[1, 4, 4] = numpy.sum(181.0193359837562 * x151 * x269 * x28)
    result[1, 4, 5] = numpy.sum(x184 * x28 * x312)
    result[1, 4, 6] = numpy.sum(x180 * x283 * x305)
    result[1, 4, 7] = numpy.sum(x274 * x313 * x314)
    result[1, 4, 8] = numpy.sum(x184 * x269 * x313)
    result[1, 4, 9] = numpy.sum(x158 * x311 * x313)
    result[1, 5, 0] = numpy.sum(x221 * x231 * x289)
    result[1, 5, 1] = numpy.sum(x220 * x242 * x30)
    result[1, 5, 2] = numpy.sum(x194 * x30 * x315)
    result[1, 5, 3] = numpy.sum(x220 * x250 * x28)
    result[1, 5, 4] = numpy.sum(x196 * x28 * x316)
    result[1, 5, 5] = numpy.sum(x198 * x28 * x315)
    result[1, 5, 6] = numpy.sum(x13 * x257 * x317)
    result[1, 5, 7] = numpy.sum(x13 * x250 * x319)
    result[1, 5, 8] = numpy.sum(x13 * x242 * x320)
    result[1, 5, 9] = numpy.sum(x13 * x201 * x231 * x309)
    result[1, 6, 0] = numpy.sum(x323 * x325)
    result[1, 6, 1] = numpy.sum(x104 * x327 * x328)
    result[1, 6, 2] = numpy.sum(x325 * x328 * x79)
    result[1, 6, 3] = numpy.sum(x3 * x329)
    result[1, 6, 4] = numpy.sum(46.73899157377418 * x105 * x327 * x330)
    result[1, 6, 5] = numpy.sum(x3 * x324 * x331)
    result[1, 6, 6] = numpy.sum(
        x302
        * x69
        * (
            x0
            * (
                x248 * (x298 + x299)
                + 5.0 * x281
                + 2.0 * x282
                + 3.0 * x295
                + x38 * (x170 + x278 + x279 + x326)
            )
            + x109 * x301
        )
    )
    result[1, 6, 7] = numpy.sum(x329 * x79)
    result[1, 6, 8] = numpy.sum(x327 * x331)
    result[1, 6, 9] = numpy.sum(x108 * x307 * x324)
    result[1, 7, 0] = numpy.sum(x140 * x291 * x322)
    result[1, 7, 1] = numpy.sum(x182 * x293 * x332)
    result[1, 7, 2] = numpy.sum(x286 * x290 * x321)
    result[1, 7, 3] = numpy.sum(x179 * x306 * x330)
    result[1, 7, 4] = numpy.sum(x3 * x308 * x314)
    result[1, 7, 5] = numpy.sum(x149 * x290 * x333)
    result[1, 7, 6] = numpy.sum(x140 * x304)
    result[1, 7, 7] = numpy.sum(x143 * x296 * x318)
    result[1, 7, 8] = numpy.sum(x149 * x308)
    result[1, 7, 9] = numpy.sum(x158 * x310)
    result[1, 8, 0] = numpy.sum(x221 * x263 * x322)
    result[1, 8, 1] = numpy.sum(x220 * x269 * x321)
    result[1, 8, 2] = numpy.sum(x194 * x312 * x332)
    result[1, 8, 3] = numpy.sum(x189 * x274 * x3 * x318)
    result[1, 8, 4] = numpy.sum(x196 * x269 * x333)
    result[1, 8, 5] = numpy.sum(x263 * x3 * x320)
    result[1, 8, 6] = numpy.sum(x283 * x317)
    result[1, 8, 7] = numpy.sum(x274 * x319)
    result[1, 8, 8] = numpy.sum(x269 * x320)
    result[1, 8, 9] = numpy.sum(x201 * x264 * x307)
    result[1, 9, 0] = numpy.sum(x223 * x258 * x322)
    result[1, 9, 1] = numpy.sum(x222 * x316 * x328)
    result[1, 9, 2] = numpy.sum(x225 * x288 * x321)
    result[1, 9, 3] = numpy.sum(x222 * x3 * x334)
    result[1, 9, 4] = numpy.sum(x225 * x252 * x333)
    result[1, 9, 5] = numpy.sum(x231 * x3 * x335)
    result[1, 9, 6] = numpy.sum(x223 * x257 * x307)
    result[1, 9, 7] = numpy.sum(x225 * x334)
    result[1, 9, 8] = numpy.sum(x242 * x335)
    result[1, 9, 9] = numpy.sum(x228 * x231 * x307)
    result[2, 0, 0] = numpy.sum(x236 * x338 * x339)
    result[2, 0, 1] = numpy.sum(x338 * x340 * x74)
    result[2, 0, 2] = numpy.sum(x340 * x346)
    result[2, 0, 3] = numpy.sum(x247 * x347 * x89)
    result[2, 0, 4] = numpy.sum(x152 * x247 * x348)
    result[2, 0, 5] = numpy.sum(x247 * x352)
    result[2, 0, 6] = numpy.sum(x103 * x255 * x347)
    result[2, 0, 7] = numpy.sum(x255 * x353 * x89)
    result[2, 0, 8] = numpy.sum(x255 * x352 * x74)
    result[2, 0, 9] = numpy.sum(x255 * x339 * x355)
    result[2, 1, 0] = numpy.sum(x109 * x338 * x356)
    result[2, 1, 1] = numpy.sum(x219 * x32 * x338)
    result[2, 1, 2] = numpy.sum(x109 * x346 * x357)
    result[2, 1, 3] = numpy.sum(x121 * x246 * x347)
    result[2, 1, 4] = numpy.sum(x246 * x346 * x358)
    result[2, 1, 5] = numpy.sum(x109 * x351 * x359)
    result[2, 1, 6] = numpy.sum(x132 * x285 * x338)
    result[2, 1, 7] = numpy.sum(x121 * x285 * x346)
    result[2, 1, 8] = numpy.sum(x219 * x254 * x351)
    result[2, 1, 9] = numpy.sum(x109 * x355 * x360)
    result[2, 2, 0] = numpy.sum(x356 * x365)
    result[2, 2, 1] = numpy.sum(x357 * x365 * x74)
    result[2, 2, 2] = numpy.sum(x357 * x370)
    result[2, 2, 3] = numpy.sum(x145 * x246 * x371)
    result[2, 2, 4] = numpy.sum(x152 * x246 * x372)
    result[2, 2, 5] = numpy.sum(x359 * x376)
    result[2, 2, 6] = numpy.sum(x150 * x285 * x365)
    result[2, 2, 7] = numpy.sum(x145 * x285 * x370)
    result[2, 2, 8] = numpy.sum(x191 * x254 * x376 * x74)
    result[2, 2, 9] = numpy.sum(x360 * x383)
    result[2, 3, 0] = numpy.sum(x162 * x289 * x347)
    result[2, 3, 1] = numpy.sum(x165 * x30 * x384)
    result[2, 3, 2] = numpy.sum(x168 * x30 * x353)
    result[2, 3, 3] = numpy.sum(x170 * x28 * x384)
    result[2, 3, 4] = numpy.sum(x165 * x297 * x353)
    result[2, 3, 5] = numpy.sum(x168 * x351 * x385)
    result[2, 3, 6] = numpy.sum(x13 * x338 * x386)
    result[2, 3, 7] = numpy.sum(x13 * x346 * x387)
    result[2, 3, 8] = numpy.sum(x13 * x351 * x388)
    result[2, 3, 9] = numpy.sum(x13 * x355 * x389)
    result[2, 4, 0] = numpy.sum(x185 * x289 * x390)
    result[2, 4, 1] = numpy.sum(x30 * x358 * x365)
    result[2, 4, 2] = numpy.sum(x185 * x30 * x372)
    result[2, 4, 3] = numpy.sum(x120 * x297 * x371)
    result[2, 4, 4] = numpy.sum(x183 * x28 * x370)
    result[2, 4, 5] = numpy.sum(x185 * x297 * x376)
    result[2, 4, 6] = numpy.sum(x131 * x313 * x390)
    result[2, 4, 7] = numpy.sum(x120 * x313 * x372)
    result[2, 4, 8] = numpy.sum(x313 * x376 * x391)
    result[2, 4, 9] = numpy.sum(46.73899157377418 * x109 * x383 * x394)
    result[2, 5, 0] = numpy.sum(x289 * x396)
    result[2, 5, 1] = numpy.sum(x395 * x397 * x74)
    result[2, 5, 2] = numpy.sum(x397 * x399)
    result[2, 5, 3] = numpy.sum(x145 * x385 * x395)
    result[2, 5, 4] = numpy.sum(x152 * x297 * x399)
    result[2, 5, 5] = numpy.sum(x191 * x28 * x401)
    result[2, 5, 6] = numpy.sum(x13 * x150 * x402)
    result[2, 5, 7] = numpy.sum(x13 * x145 * x403)
    result[2, 5, 8] = numpy.sum(x394 * x404 * x74)
    result[2, 5, 9] = numpy.sum(x13 * x410)
    result[2, 6, 0] = numpy.sum(x211 * x323 * x338)
    result[2, 6, 1] = numpy.sum(x206 * x328 * x347)
    result[2, 6, 2] = numpy.sum(x211 * x328 * x346)
    result[2, 6, 3] = numpy.sum(x3 * x338 * x411)
    result[2, 6, 4] = numpy.sum(x206 * x333 * x348)
    result[2, 6, 5] = numpy.sum(x203 * x3 * x412)
    result[2, 6, 6] = numpy.sum(x213 * x338 * x413)
    result[2, 6, 7] = numpy.sum(x346 * x411)
    result[2, 6, 8] = numpy.sum(x206 * x412)
    result[2, 6, 9] = numpy.sum(x203 * x355 * x413)
    result[2, 7, 0] = numpy.sum(x162 * x322 * x371)
    result[2, 7, 1] = numpy.sum(x165 * x332 * x371)
    result[2, 7, 2] = numpy.sum(x136 * x168 * x321 * x370)
    result[2, 7, 3] = numpy.sum(x3 * x365 * x387)
    result[2, 7, 4] = numpy.sum(x165 * x333 * x372)
    result[2, 7, 5] = numpy.sum(x168 * x333 * x376)
    result[2, 7, 6] = numpy.sum(x365 * x386)
    result[2, 7, 7] = numpy.sum(x370 * x387)
    result[2, 7, 8] = numpy.sum(x376 * x388)
    result[2, 7, 9] = numpy.sum(x383 * x389)
    result[2, 8, 0] = numpy.sum(x109 * x322 * x396)
    result[2, 8, 1] = numpy.sum(x219 * x321 * x395)
    result[2, 8, 2] = numpy.sum(x185 * x332 * x399)
    result[2, 8, 3] = numpy.sum(x121 * x3 * x402)
    result[2, 8, 4] = numpy.sum(x3 * x391 * x403)
    result[2, 8, 5] = numpy.sum(x109 * x404 * x414)
    result[2, 8, 6] = numpy.sum(x132 * x402)
    result[2, 8, 7] = numpy.sum(x121 * x403)
    result[2, 8, 8] = numpy.sum(x115 * x318 * x401)
    result[2, 8, 9] = numpy.sum(x109 * x410)
    result[2, 9, 0] = numpy.sum(x323 * x416)
    result[2, 9, 1] = numpy.sum(x328 * x416 * x74)
    result[2, 9, 2] = numpy.sum(x328 * x418 * x98)
    result[2, 9, 3] = numpy.sum(x3 * x415 * x419)
    result[2, 9, 4] = numpy.sum(46.73899157377418 * x414 * x418 * x74)
    result[2, 9, 5] = numpy.sum(x3 * x420)
    result[2, 9, 6] = numpy.sum(x103 * x307 * x415)
    result[2, 9, 7] = numpy.sum(x418 * x419)
    result[2, 9, 8] = numpy.sum(x420 * x74)
    result[2, 9, 9] = numpy.sum(
        12.06795573225041
        * x393
        * (
            x0
            * (
                x349 * (x405 + x406)
                + x38 * (x198 + x378 + x379 + x417)
                + 5.0 * x381
                + 2.0 * x382
                + 3.0 * x400
            )
            + x140 * x408
        )
    )
    return result


def diag_quadrupole3d_34(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fg) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = ax * bx * x1
    x3 = numpy.exp(-x2 * (A[0] - B[0]) ** 2)
    x4 = numpy.sqrt(x1)
    x5 = 1.772453850905516 * x4
    x6 = x3 * x5
    x7 = x0 * x6
    x8 = 3.0 * x7
    x9 = -x1 * (ax * A[0] + bx * B[0])
    x10 = -x9 - B[0]
    x11 = -x9 - A[0]
    x12 = x11 * x6
    x13 = x10 * x12
    x14 = -x9 - R[0]
    x15 = x12 * x14
    x16 = x10 * x6
    x17 = x14 * x16
    x18 = x0 * (x13 + x15 + x17 + x8)
    x19 = x14 * x6
    x20 = x0 * (x16 + x19)
    x21 = x17 + x7
    x22 = x11 * x21
    x23 = x20 + x22
    x24 = x10 * x23
    x25 = x18 + x24
    x26 = 2.0 * x10
    x27 = x25 * x26
    x28 = x11 * x25
    x29 = x10 * x21
    x30 = x0 * (x12 + x16)
    x31 = x13 + x7
    x32 = x10 * x31
    x33 = x30 + x32
    x34 = 3.0 * x20 + 2.0 * x22
    x35 = x0 * (x29 + x33 + x34)
    x36 = x11 * x31
    x37 = 2.0 * x0 * (2.0 * x30 + x32 + x36)
    x38 = x12 * x26
    x39 = x10**2 * x6
    x40 = x39 + x8
    x41 = x0 * (x38 + x40)
    x42 = x11 * x33
    x43 = x41 + x42
    x44 = x10 * x43
    x45 = x37 + x44
    x46 = 2.0 * x0
    x47 = 2.0 * x11
    x48 = x23 * x47
    x49 = 4.0 * x18
    x50 = 2.0 * x24 + x49
    x51 = x0 * (x43 + x48 + x50)
    x52 = x10 * (x28 + x35)
    x53 = x14 * x23
    x54 = 2.0 * x53
    x55 = x19 * x26
    x56 = x14**2 * x6
    x57 = x56 + x8
    x58 = x0 * (x55 + x57)
    x59 = x14 * x21
    x60 = x20 + x59
    x61 = x10 * x60
    x62 = x58 + x61
    x63 = x0 * (x50 + x54 + x62)
    x64 = x0 * (x12 + x19)
    x65 = x15 + x7
    x66 = x14 * x65
    x67 = x64 + x66
    x68 = x0 * (x34 + x59 + x67)
    x69 = x18 + x53
    x70 = x10 * x69
    x71 = x68 + x70
    x72 = x11 * x71
    x73 = x63 + x72
    x74 = x11 * x73
    x75 = x10 * x73
    x76 = 2.0 * x35
    x77 = x11 * x69
    x78 = x0 * (2.0 * x28 + 4.0 * x68 + 2.0 * x70 + x76 + 2.0 * x77)
    x79 = x10 * x71
    x80 = x0 * (2.0 * x51 + 2.0 * x52 + 5.0 * x63 + 3.0 * x72 + 2.0 * x79)
    x81 = x75 + x78
    x82 = x11 * x81 + x80
    x83 = numpy.exp(-x2 * (A[2] - B[2]) ** 2)
    x84 = da * db * numpy.sqrt(ax**4.5) * numpy.sqrt(bx**5.5)
    x85 = x83 * x84
    x86 = 9.122517057277419 * x85
    x87 = numpy.exp(-x2 * (A[1] - B[1]) ** 2)
    x88 = 0.5641895835477563 * x1
    x89 = x87 * x88
    x90 = -x1 * (ax * A[1] + bx * B[1])
    x91 = -x90 - B[1]
    x92 = 24.13591146450082 * x91
    x93 = x85 * x89
    x94 = x82 * x93
    x95 = -x1 * (ax * A[2] + bx * B[2])
    x96 = -x95 - B[2]
    x97 = 24.13591146450082 * x96
    x98 = x74 + x78
    x99 = x85 * x98
    x100 = x5 * x87
    x101 = x100 * x91**2
    x102 = x0 * x100
    x103 = x101 + x102
    x104 = 31.15932771584945 * x103
    x105 = 0.3183098861837907 * x4
    x106 = x104 * x105
    x107 = 53.96953873354034 * x96
    x108 = x89 * x91
    x109 = x5 * x83
    x110 = x109 * x96**2
    x111 = x0 * x109
    x112 = x110 + x111
    x113 = 31.15932771584945 * x105
    x114 = x84 * x87
    x115 = x113 * x114
    x116 = x100 * x91
    x117 = x103 * x91 + x116 * x46
    x118 = 24.13591146450082 * x117
    x119 = x0 * (x19 * x47 + x57) + x11 * x67
    x120 = x68 + x77
    x121 = x105 * (x0 * (x119 + x48 + x49 + x54) + x11 * x120)
    x122 = x121 * x85
    x123 = 53.96953873354034 * x103
    x124 = x114 * x121
    x125 = 53.96953873354034 * x112
    x126 = x109 * x96
    x127 = x112 * x96 + x126 * x46
    x128 = 24.13591146450082 * x127
    x129 = 3.0 * x102
    x130 = x0 * (3.0 * x101 + x129) + x117 * x91
    x131 = 9.122517057277419 * x130
    x132 = x0 * (x47 * x65 + 4.0 * x64 + 2.0 * x66) + x11 * x119
    x133 = x105 * x132
    x134 = x133 * x85
    x135 = 0.1795871221251666 * x84
    x136 = x112 * x135
    x137 = x114 * x133
    x138 = 3.0 * x111
    x139 = x0 * (3.0 * x110 + x138) + x127 * x96
    x140 = 9.122517057277419 * x139
    x141 = -x90 - A[1]
    x142 = 20.39856826597365 * x141
    x143 = x93 * (x10 * x81 + x80)
    x144 = 53.96953873354034 * x81
    x145 = x100 * x141
    x146 = x145 * x91
    x147 = x102 + x146
    x148 = x105 * x85
    x149 = x147 * x148
    x150 = x144 * x93
    x151 = x0 * (x116 + x145)
    x152 = x147 * x91
    x153 = x151 + x152
    x154 = 69.67437490583262 * x153
    x155 = x148 * x73
    x156 = 120.6795573225041 * x73
    x157 = x105 * x114
    x158 = 69.67437490583262 * x157
    x159 = x158 * x73
    x160 = 2.0 * x91
    x161 = x129 + x145 * x160
    x162 = x0 * (x101 + x161)
    x163 = x153 * x91
    x164 = x162 + x163
    x165 = 53.96953873354034 * x164
    x166 = x148 * x165
    x167 = 120.6795573225041 * x120
    x168 = x148 * x96
    x169 = 53.96953873354034 * x127
    x170 = x120 * x157
    x171 = x0 * (x117 + 3.0 * x151 + 3.0 * x152) + x164 * x91
    x172 = 20.39856826597365 * x171
    x173 = x119 * x148
    x174 = 69.67437490583262 * x119
    x175 = x135 * x147
    x176 = x119 * x157
    x177 = -x95 - A[2]
    x178 = 20.39856826597365 * x177
    x179 = x109 * x177
    x180 = x179 * x96
    x181 = x111 + x180
    x182 = x157 * x181
    x183 = 69.67437490583262 * x103
    x184 = x0 * (x126 + x179)
    x185 = x181 * x96
    x186 = x184 + x185
    x187 = 53.96953873354034 * x117
    x188 = x148 * x177
    x189 = x135 * x181
    x190 = x157 * x186
    x191 = 2.0 * x96
    x192 = x138 + x179 * x191
    x193 = x0 * (x110 + x192)
    x194 = x186 * x96
    x195 = x193 + x194
    x196 = 53.96953873354034 * x195
    x197 = 20.39856826597365 * x130
    x198 = x135 * x186
    x199 = x0 * (x127 + 3.0 * x184 + 3.0 * x185) + x195 * x96
    x200 = 20.39856826597365 * x199
    x201 = 2.0 * x0 * (2.0 * x20 + x29 + x59) + x10 * x62
    x202 = x63 + x79
    x203 = x0 * (x201 + x27 + 3.0 * x68 + 3.0 * x70 + x76) + x10 * x202
    x204 = x100 * x141**2
    x205 = x102 + x204
    x206 = 20.39856826597365 * x205
    x207 = x148 * x206
    x208 = x141 * x147
    x209 = x151 + x208
    x210 = 53.96953873354034 * x148
    x211 = x202 * x210
    x212 = x141 * x153
    x213 = x162 + x212
    x214 = 69.67437490583262 * x148
    x215 = x213 * x214
    x216 = 120.6795573225041 * x209
    x217 = 69.67437490583262 * x136
    x218 = 2.0 * x0 * (2.0 * x151 + x152 + x208)
    x219 = x213 * x91
    x220 = x218 + x219
    x221 = x210 * x220
    x222 = 120.6795573225041 * x69
    x223 = x135 * x169
    x224 = 20.39856826597365 * x67
    x225 = x0 * (5.0 * x162 + 2.0 * x163 + 3.0 * x212)
    x226 = x220 * x91 + x225
    x227 = x148 * x226
    x228 = x135 * x67
    x229 = 93.47798314754836 * x202
    x230 = 120.6795573225041 * x153
    x231 = 209.0231247174979 * x175
    x232 = 120.6795573225041 * x141
    x233 = 93.47798314754836 * x69
    x234 = 209.0231247174979 * x189
    x235 = x141 * x157
    x236 = 35.33135663832854 * x67
    x237 = 93.47798314754836 * x67
    x238 = 120.6795573225041 * x198
    x239 = x109 * x177**2
    x240 = x111 + x239
    x241 = 20.39856826597365 * x240
    x242 = x157 * x241
    x243 = 53.96953873354034 * x157
    x244 = x202 * x243
    x245 = x177 * x181
    x246 = x184 + x245
    x247 = x135 * x240
    x248 = x157 * x91
    x249 = 120.6795573225041 * x246
    x250 = x177 * x186
    x251 = x193 + x250
    x252 = x158 * x251
    x253 = x135 * x246
    x254 = 2.0 * x0 * (2.0 * x184 + x185 + x245)
    x255 = x251 * x96
    x256 = x254 + x255
    x257 = x243 * x256
    x258 = x0 * (5.0 * x193 + 2.0 * x194 + 3.0 * x250)
    x259 = x256 * x96 + x258
    x260 = x157 * x259
    x261 = x141 * x205 + x145 * x46
    x262 = (
        x0 * (x26 * (x20 + x29) + x46 * (x40 + x55) + 3.0 * x58 + 3.0 * x61) + x10 * x201
    )
    x263 = x105 * x86
    x264 = x0 * (x161 + x204) + x141 * x209
    x265 = 24.13591146450082 * x148
    x266 = x201 * x265
    x267 = x141 * x213
    x268 = x218 + x267
    x269 = x113 * x85
    x270 = 53.96953873354034 * x264
    x271 = 31.15932771584945 * x136
    x272 = x141 * x220 + x225
    x273 = x265 * x272
    x274 = 53.96953873354034 * x60
    x275 = x135 * x261
    x276 = x56 + x7
    x277 = 3.0 * x0 * (2.0 * x218 + x219 + x267) + x272 * x91
    x278 = x135 * x276
    x279 = x177 * x210
    x280 = 53.96953873354034 * x189
    x281 = 120.6795573225041 * x189
    x282 = 69.67437490583262 * x198
    x283 = 120.6795573225041 * x60
    x284 = x135 * x274
    x285 = 53.96953873354034 * x175
    x286 = 120.6795573225041 * x175
    x287 = 20.39856826597365 * x247
    x288 = 53.96953873354034 * x253
    x289 = x177 * x240 + x179 * x46
    x290 = 9.122517057277419 * x157
    x291 = 24.13591146450082 * x157
    x292 = x201 * x291
    x293 = x0 * (x192 + x239) + x177 * x246
    x294 = x135 * x289
    x295 = x243 * x91
    x296 = x177 * x251
    x297 = x254 + x296
    x298 = x177 * x256 + x258
    x299 = x291 * x298
    x300 = 3.0 * x0 * (2.0 * x254 + x255 + x296) + x298 * x96
    x301 = -x90 - R[1]
    x302 = x100 * x301**2
    x303 = x102 + x302
    x304 = x11 * x43
    x305 = x10 * x33
    x306 = x0 * (2.0 * x305 + 5.0 * x41 + 3.0 * x42)
    x307 = x11 * x45 + x306
    x308 = 3.0 * x0 * (x304 + 2.0 * x37 + x44) + x10 * x307
    x309 = x100 * x301
    x310 = x0 * (x116 + x309)
    x311 = x116 * x301
    x312 = x102 + x311
    x313 = x301 * x312
    x314 = x310 + x313
    x315 = x265 * x307
    x316 = x129 + x160 * x309
    x317 = x0 * (x302 + x316)
    x318 = x314 * x91
    x319 = x317 + x318
    x320 = x304 + x37
    x321 = 53.96953873354034 * x314
    x322 = x11**2 * x6
    x323 = x30 + x36
    x324 = x0 * (x322 + x38 + x8) + x11 * x323
    x325 = x312 * x91
    x326 = 2.0 * x0 * (2.0 * x310 + x313 + x325) + x319 * x91
    x327 = x265 * x326
    x328 = x210 * x96
    x329 = x128 * x135
    x330 = x322 + x7
    x331 = x11 * x330 + x12 * x46
    x332 = (
        x0 * (x160 * (x310 + x325) + 3.0 * x317 + 3.0 * x318 + x46 * (x101 + x316))
        + x326 * x91
    )
    x333 = x135 * x303
    x334 = x0 * (x145 + x309)
    x335 = x145 * x301
    x336 = x102 + x335
    x337 = x301 * x336
    x338 = x334 + x337
    x339 = 20.39856826597365 * x338
    x340 = x10 * x45 + x306
    x341 = x148 * x340
    x342 = x0 * (x129 + x146 + x311 + x335)
    x343 = x141 * x312
    x344 = x310 + x343
    x345 = x301 * x344
    x346 = x342 + x345
    x347 = x210 * x45
    x348 = 3.0 * x310 + 2.0 * x343
    x349 = x0 * (x313 + x338 + x348)
    x350 = x346 * x91
    x351 = x349 + x350
    x352 = x214 * x43
    x353 = 120.6795573225041 * x168
    x354 = 2.0 * x345
    x355 = x344 * x91
    x356 = 4.0 * x342
    x357 = 2.0 * x355 + x356
    x358 = x0 * (x319 + x354 + x357)
    x359 = x351 * x91
    x360 = x358 + x359
    x361 = x210 * x360
    x362 = 120.6795573225041 * x323
    x363 = x0 * (x153 + x325 + x348)
    x364 = 2.0 * x363
    x365 = x342 + x355
    x366 = x160 * x365
    x367 = x0 * (x326 + 3.0 * x349 + 3.0 * x350 + x364 + x366) + x360 * x91
    x368 = 20.39856826597365 * x148
    x369 = x330 * x368
    x370 = x135 * x330
    x371 = x39 + x7
    x372 = x10 * x371 + x26 * x7
    x373 = x305 + x41
    x374 = x0 * (3.0 * x30 + 3.0 * x32 + x372) + x10 * x373
    x375 = 2.0 * x141
    x376 = x0 * (x129 + x302 + x309 * x375) + x141 * x338
    x377 = x368 * x376
    x378 = x141 * x346
    x379 = x349 + x378
    x380 = 53.96953873354034 * x373
    x381 = x148 * x380
    x382 = 69.67437490583262 * x33
    x383 = x141 * x351
    x384 = x358 + x383
    x385 = x148 * x384
    x386 = x141 * x365
    x387 = x0 * (4.0 * x349 + 2.0 * x350 + x364 + 2.0 * x378 + 2.0 * x386)
    x388 = x384 * x91
    x389 = x387 + x388
    x390 = 53.96953873354034 * x31
    x391 = 120.6795573225041 * x31
    x392 = 20.39856826597365 * x11
    x393 = x344 * x375
    x394 = x0 * (x213 + x357 + x393)
    x395 = x91 * (x363 + x386)
    x396 = x0 * (5.0 * x358 + 2.0 * x359 + 3.0 * x383 + 2.0 * x394 + 2.0 * x395)
    x397 = x3 * x88
    x398 = x397 * x85
    x399 = x398 * (x389 * x91 + x396)
    x400 = x107 * x398
    x401 = x3 * x84
    x402 = x105 * x401
    x403 = 69.67437490583262 * x402
    x404 = x384 * x403
    x405 = x379 * x402
    x406 = x376 * x402
    x407 = 35.33135663832854 * x338
    x408 = 93.47798314754836 * x188
    x409 = 93.47798314754836 * x338
    x410 = 120.6795573225041 * x351
    x411 = 209.0231247174979 * x31
    x412 = x135 * x31
    x413 = 35.33135663832854 * x11
    x414 = x177 * x398
    x415 = x11 * x402
    x416 = 93.47798314754836 * x415
    x417 = 120.6795573225041 * x253
    x418 = x135 * x251
    x419 = x241 * x402
    x420 = 53.96953873354034 * x402
    x421 = x246 * x420
    x422 = x251 * x403
    x423 = x259 * x402
    x424 = x0 * (3.0 * x39 + x8) + x10 * x372
    x425 = 9.122517057277419 * x424
    x426 = x0 * (4.0 * x334 + x336 * x375 + 2.0 * x337) + x141 * x376
    x427 = x148 * x426
    x428 = x0 * (x354 + x356 + x376 + x393) + x141 * x379
    x429 = 24.13591146450082 * x372
    x430 = x141 * x384
    x431 = x387 + x430
    x432 = 31.15932771584945 * x371
    x433 = x141 * x389 + x396
    x434 = x398 * x433
    x435 = 24.13591146450082 * x10
    x436 = x402 * x428
    x437 = x402 * x426
    x438 = x113 * x401
    x439 = 53.96953873354034 * x372
    x440 = 69.67437490583262 * x371
    x441 = 53.96953873354034 * x10
    x442 = 120.6795573225041 * x10
    x443 = x402 * x442
    x444 = x10 * x420
    x445 = x10 * x402
    x446 = x256 * x420
    x447 = x135 * x371
    x448 = 24.13591146450082 * x402
    x449 = x326 * x448
    x450 = x298 * x448
    x451 = 9.122517057277419 * x402
    x452 = -x95 - R[2]
    x453 = x109 * x452**2
    x454 = x111 + x453
    x455 = x291 * x307
    x456 = x109 * x452
    x457 = x0 * (x126 + x456)
    x458 = x126 * x452
    x459 = x111 + x458
    x460 = x452 * x459
    x461 = x457 + x460
    x462 = x135 * x454
    x463 = x138 + x191 * x456
    x464 = x0 * (x453 + x463)
    x465 = x461 * x96
    x466 = x464 + x465
    x467 = x135 * x461
    x468 = x459 * x96
    x469 = 2.0 * x0 * (2.0 * x457 + x460 + x468) + x466 * x96
    x470 = x291 * x469
    x471 = x135 * x466
    x472 = (
        x0 * (x191 * (x457 + x468) + x46 * (x110 + x463) + 3.0 * x464 + 3.0 * x465)
        + x469 * x96
    )
    x473 = 20.39856826597365 * x157
    x474 = x340 * x473
    x475 = x243 * x45
    x476 = x158 * x43
    x477 = x243 * x323
    x478 = x330 * x473
    x479 = x0 * (x179 + x456)
    x480 = x179 * x452
    x481 = x111 + x480
    x482 = x452 * x481
    x483 = x479 + x482
    x484 = x0 * (x138 + x180 + x458 + x480)
    x485 = x177 * x459
    x486 = x457 + x485
    x487 = x452 * x486
    x488 = x484 + x487
    x489 = x135 * x483
    x490 = 120.6795573225041 * x248
    x491 = 3.0 * x457 + 2.0 * x485
    x492 = x0 * (x460 + x483 + x491)
    x493 = x488 * x96
    x494 = x492 + x493
    x495 = x135 * x488
    x496 = 2.0 * x487
    x497 = x486 * x96
    x498 = 4.0 * x484
    x499 = 2.0 * x497 + x498
    x500 = x0 * (x466 + x496 + x499)
    x501 = x494 * x96
    x502 = x500 + x501
    x503 = x0 * (x186 + x468 + x491)
    x504 = 2.0 * x503
    x505 = x484 + x497
    x506 = x191 * x505
    x507 = x0 * (x469 + 3.0 * x492 + 3.0 * x493 + x504 + x506) + x502 * x96
    x508 = 53.96953873354034 * x412
    x509 = 20.39856826597365 * x226
    x510 = x220 * x420
    x511 = x213 * x403
    x512 = x209 * x420
    x513 = x206 * x402
    x514 = 93.47798314754836 * x483
    x515 = 93.47798314754836 * x235
    x516 = x402 * x483
    x517 = x401 * x89
    x518 = x141 * x517
    x519 = 2.0 * x177
    x520 = x0 * (x138 + x453 + x456 * x519) + x177 * x483
    x521 = x473 * x520
    x522 = x157 * x380
    x523 = x177 * x488
    x524 = x492 + x523
    x525 = x177 * x494
    x526 = x500 + x525
    x527 = x157 * x526
    x528 = x177 * x505
    x529 = x0 * (4.0 * x492 + 2.0 * x493 + x504 + 2.0 * x523 + 2.0 * x528)
    x530 = x526 * x96
    x531 = x529 + x530
    x532 = x402 * x520
    x533 = x402 * x524
    x534 = x402 * x526
    x535 = x486 * x519
    x536 = x0 * (x251 + x499 + x535)
    x537 = x96 * (x503 + x528)
    x538 = x0 * (5.0 * x500 + 2.0 * x501 + 3.0 * x525 + 2.0 * x536 + 2.0 * x537)
    x539 = x517 * (x531 * x96 + x538)
    x540 = x272 * x448
    x541 = x448 * x469
    x542 = x0 * (4.0 * x479 + x481 * x519 + 2.0 * x482) + x177 * x520
    x543 = x157 * x542
    x544 = x0 * (x496 + x498 + x520 + x535) + x177 * x524
    x545 = x177 * x526
    x546 = x529 + x545
    x547 = x402 * x542
    x548 = x402 * x544
    x549 = x401 * x546
    x550 = x177 * x531 + x538
    x551 = x517 * x550

    # 450 item(s)
    result[0, 0, 0] = numpy.sum(
        x86
        * x89
        * (
            x0
            * (
                x46 * (x27 + 3.0 * x28 + 5.0 * x35 + x45)
                + x47 * (x51 + x52)
                + 3.0 * x74
                + 3.0 * x75
                + 6.0 * x78
            )
            + x10 * x82
        )
    )
    result[0, 0, 1] = numpy.sum(x92 * x94)
    result[0, 0, 2] = numpy.sum(x94 * x97)
    result[0, 0, 3] = numpy.sum(x106 * x99)
    result[0, 0, 4] = numpy.sum(x107 * x108 * x99)
    result[0, 0, 5] = numpy.sum(x112 * x115 * x98)
    result[0, 0, 6] = numpy.sum(x118 * x122)
    result[0, 0, 7] = numpy.sum(x122 * x123 * x96)
    result[0, 0, 8] = numpy.sum(x124 * x125 * x91)
    result[0, 0, 9] = numpy.sum(x124 * x128)
    result[0, 0, 10] = numpy.sum(x131 * x134)
    result[0, 0, 11] = numpy.sum(x118 * x134 * x96)
    result[0, 0, 12] = numpy.sum(x104 * x132 * x136)
    result[0, 0, 13] = numpy.sum(x128 * x137 * x91)
    result[0, 0, 14] = numpy.sum(x137 * x140)
    result[0, 1, 0] = numpy.sum(x142 * x143)
    result[0, 1, 1] = numpy.sum(x144 * x149)
    result[0, 1, 2] = numpy.sum(x141 * x150 * x96)
    result[0, 1, 3] = numpy.sum(x154 * x155)
    result[0, 1, 4] = numpy.sum(x149 * x156 * x96)
    result[0, 1, 5] = numpy.sum(x112 * x141 * x159)
    result[0, 1, 6] = numpy.sum(x120 * x166)
    result[0, 1, 7] = numpy.sum(x153 * x167 * x168)
    result[0, 1, 8] = numpy.sum(x136 * x147 * x167)
    result[0, 1, 9] = numpy.sum(x141 * x169 * x170)
    result[0, 1, 10] = numpy.sum(x172 * x173)
    result[0, 1, 11] = numpy.sum(x119 * x166 * x96)
    result[0, 1, 12] = numpy.sum(x136 * x153 * x174)
    result[0, 1, 13] = numpy.sum(x119 * x169 * x175)
    result[0, 1, 14] = numpy.sum(x139 * x142 * x176)
    result[0, 2, 0] = numpy.sum(x143 * x178)
    result[0, 2, 1] = numpy.sum(x150 * x177 * x91)
    result[0, 2, 2] = numpy.sum(x144 * x182)
    result[0, 2, 3] = numpy.sum(x155 * x177 * x183)
    result[0, 2, 4] = numpy.sum(x156 * x182 * x91)
    result[0, 2, 5] = numpy.sum(x159 * x186)
    result[0, 2, 6] = numpy.sum(x120 * x187 * x188)
    result[0, 2, 7] = numpy.sum(x103 * x167 * x189)
    result[0, 2, 8] = numpy.sum(x167 * x190 * x91)
    result[0, 2, 9] = numpy.sum(x170 * x196)
    result[0, 2, 10] = numpy.sum(x173 * x177 * x197)
    result[0, 2, 11] = numpy.sum(x119 * x187 * x189)
    result[0, 2, 12] = numpy.sum(x103 * x174 * x198)
    result[0, 2, 13] = numpy.sum(x176 * x196 * x91)
    result[0, 2, 14] = numpy.sum(x176 * x200)
    result[0, 3, 0] = numpy.sum(x203 * x207)
    result[0, 3, 1] = numpy.sum(x209 * x211)
    result[0, 3, 2] = numpy.sum(x205 * x211 * x96)
    result[0, 3, 3] = numpy.sum(x215 * x71)
    result[0, 3, 4] = numpy.sum(x168 * x216 * x71)
    result[0, 3, 5] = numpy.sum(x205 * x217 * x71)
    result[0, 3, 6] = numpy.sum(x221 * x69)
    result[0, 3, 7] = numpy.sum(x168 * x213 * x222)
    result[0, 3, 8] = numpy.sum(x136 * x209 * x222)
    result[0, 3, 9] = numpy.sum(x205 * x223 * x69)
    result[0, 3, 10] = numpy.sum(x224 * x227)
    result[0, 3, 11] = numpy.sum(x221 * x67 * x96)
    result[0, 3, 12] = numpy.sum(x213 * x217 * x67)
    result[0, 3, 13] = numpy.sum(x209 * x223 * x67)
    result[0, 3, 14] = numpy.sum(x139 * x206 * x228)
    result[0, 4, 0] = numpy.sum(35.33135663832854 * x141 * x177 * x203 * x93)
    result[0, 4, 1] = numpy.sum(x149 * x177 * x229)
    result[0, 4, 2] = numpy.sum(x141 * x182 * x229)
    result[0, 4, 3] = numpy.sum(x188 * x230 * x71)
    result[0, 4, 4] = numpy.sum(x181 * x231 * x71)
    result[0, 4, 5] = numpy.sum(x190 * x232 * x71)
    result[0, 4, 6] = numpy.sum(x164 * x188 * x233)
    result[0, 4, 7] = numpy.sum(x153 * x234 * x69)
    result[0, 4, 8] = numpy.sum(x186 * x231 * x69)
    result[0, 4, 9] = numpy.sum(x195 * x233 * x235)
    result[0, 4, 10] = numpy.sum(x171 * x188 * x236)
    result[0, 4, 11] = numpy.sum(x164 * x189 * x237)
    result[0, 4, 12] = numpy.sum(x153 * x238 * x67)
    result[0, 4, 13] = numpy.sum(x175 * x195 * x237)
    result[0, 4, 14] = numpy.sum(x199 * x235 * x236)
    result[0, 5, 0] = numpy.sum(x203 * x242)
    result[0, 5, 1] = numpy.sum(x240 * x244 * x91)
    result[0, 5, 2] = numpy.sum(x244 * x246)
    result[0, 5, 3] = numpy.sum(x183 * x247 * x71)
    result[0, 5, 4] = numpy.sum(x248 * x249 * x71)
    result[0, 5, 5] = numpy.sum(x252 * x71)
    result[0, 5, 6] = numpy.sum(x187 * x247 * x69)
    result[0, 5, 7] = numpy.sum(x103 * x222 * x253)
    result[0, 5, 8] = numpy.sum(x222 * x248 * x251)
    result[0, 5, 9] = numpy.sum(x257 * x69)
    result[0, 5, 10] = numpy.sum(x197 * x228 * x240)
    result[0, 5, 11] = numpy.sum(x187 * x228 * x246)
    result[0, 5, 12] = numpy.sum(x183 * x228 * x251)
    result[0, 5, 13] = numpy.sum(x257 * x67 * x91)
    result[0, 5, 14] = numpy.sum(x224 * x260)
    result[0, 6, 0] = numpy.sum(x261 * x262 * x263)
    result[0, 6, 1] = numpy.sum(x264 * x266)
    result[0, 6, 2] = numpy.sum(x261 * x266 * x96)
    result[0, 6, 3] = numpy.sum(x268 * x269 * x62)
    result[0, 6, 4] = numpy.sum(x168 * x270 * x62)
    result[0, 6, 5] = numpy.sum(x261 * x271 * x62)
    result[0, 6, 6] = numpy.sum(x273 * x60)
    result[0, 6, 7] = numpy.sum(x168 * x268 * x274)
    result[0, 6, 8] = numpy.sum(x136 * x264 * x274)
    result[0, 6, 9] = numpy.sum(x128 * x275 * x60)
    result[0, 6, 10] = numpy.sum(x263 * x276 * x277)
    result[0, 6, 11] = numpy.sum(x273 * x276 * x96)
    result[0, 6, 12] = numpy.sum(x268 * x271 * x276)
    result[0, 6, 13] = numpy.sum(x128 * x264 * x278)
    result[0, 6, 14] = numpy.sum(x140 * x275 * x276)
    result[0, 7, 0] = numpy.sum(x177 * x207 * x262)
    result[0, 7, 1] = numpy.sum(x201 * x209 * x279)
    result[0, 7, 2] = numpy.sum(x201 * x205 * x280)
    result[0, 7, 3] = numpy.sum(x177 * x215 * x62)
    result[0, 7, 4] = numpy.sum(x209 * x281 * x62)
    result[0, 7, 5] = numpy.sum(x205 * x282 * x62)
    result[0, 7, 6] = numpy.sum(x188 * x220 * x274)
    result[0, 7, 7] = numpy.sum(x213 * x281 * x60)
    result[0, 7, 8] = numpy.sum(x198 * x209 * x283)
    result[0, 7, 9] = numpy.sum(x195 * x205 * x284)
    result[0, 7, 10] = numpy.sum(x178 * x227 * x276)
    result[0, 7, 11] = numpy.sum(x220 * x276 * x280)
    result[0, 7, 12] = numpy.sum(x213 * x276 * x282)
    result[0, 7, 13] = numpy.sum(x196 * x209 * x278)
    result[0, 7, 14] = numpy.sum(x199 * x206 * x278)
    result[0, 8, 0] = numpy.sum(x141 * x242 * x262)
    result[0, 8, 1] = numpy.sum(x201 * x240 * x285)
    result[0, 8, 2] = numpy.sum(x141 * x201 * x243 * x246)
    result[0, 8, 3] = numpy.sum(x154 * x247 * x62)
    result[0, 8, 4] = numpy.sum(x246 * x286 * x62)
    result[0, 8, 5] = numpy.sum(x141 * x252 * x62)
    result[0, 8, 6] = numpy.sum(x164 * x247 * x274)
    result[0, 8, 7] = numpy.sum(x153 * x253 * x283)
    result[0, 8, 8] = numpy.sum(x175 * x251 * x283)
    result[0, 8, 9] = numpy.sum(x235 * x256 * x274)
    result[0, 8, 10] = numpy.sum(x171 * x276 * x287)
    result[0, 8, 11] = numpy.sum(x164 * x276 * x288)
    result[0, 8, 12] = numpy.sum(x154 * x251 * x278)
    result[0, 8, 13] = numpy.sum(x256 * x276 * x285)
    result[0, 8, 14] = numpy.sum(x142 * x260 * x276)
    result[0, 9, 0] = numpy.sum(x262 * x289 * x290)
    result[0, 9, 1] = numpy.sum(x289 * x292 * x91)
    result[0, 9, 2] = numpy.sum(x292 * x293)
    result[0, 9, 3] = numpy.sum(x104 * x294 * x62)
    result[0, 9, 4] = numpy.sum(x293 * x295 * x62)
    result[0, 9, 5] = numpy.sum(x115 * x297 * x62)
    result[0, 9, 6] = numpy.sum(x118 * x294 * x60)
    result[0, 9, 7] = numpy.sum(x103 * x284 * x293)
    result[0, 9, 8] = numpy.sum(x248 * x274 * x297)
    result[0, 9, 9] = numpy.sum(x299 * x60)
    result[0, 9, 10] = numpy.sum(x131 * x278 * x289)
    result[0, 9, 11] = numpy.sum(x118 * x278 * x293)
    result[0, 9, 12] = numpy.sum(x104 * x278 * x297)
    result[0, 9, 13] = numpy.sum(x276 * x299 * x91)
    result[0, 9, 14] = numpy.sum(x276 * x290 * x300)
    result[1, 0, 0] = numpy.sum(x263 * x303 * x308)
    result[1, 0, 1] = numpy.sum(x314 * x315)
    result[1, 0, 2] = numpy.sum(x303 * x315 * x96)
    result[1, 0, 3] = numpy.sum(x269 * x319 * x320)
    result[1, 0, 4] = numpy.sum(x168 * x320 * x321)
    result[1, 0, 5] = numpy.sum(x271 * x303 * x320)
    result[1, 0, 6] = numpy.sum(x324 * x327)
    result[1, 0, 7] = numpy.sum(x319 * x324 * x328)
    result[1, 0, 8] = numpy.sum(x136 * x321 * x324)
    result[1, 0, 9] = numpy.sum(x303 * x324 * x329)
    result[1, 0, 10] = numpy.sum(x263 * x331 * x332)
    result[1, 0, 11] = numpy.sum(x327 * x331 * x96)
    result[1, 0, 12] = numpy.sum(x271 * x319 * x331)
    result[1, 0, 13] = numpy.sum(x314 * x329 * x331)
    result[1, 0, 14] = numpy.sum(x140 * x331 * x333)
    result[1, 1, 0] = numpy.sum(x339 * x341)
    result[1, 1, 1] = numpy.sum(x346 * x347)
    result[1, 1, 2] = numpy.sum(x338 * x347 * x96)
    result[1, 1, 3] = numpy.sum(x351 * x352)
    result[1, 1, 4] = numpy.sum(x346 * x353 * x43)
    result[1, 1, 5] = numpy.sum(x217 * x338 * x43)
    result[1, 1, 6] = numpy.sum(x323 * x361)
    result[1, 1, 7] = numpy.sum(x168 * x351 * x362)
    result[1, 1, 8] = numpy.sum(x136 * x346 * x362)
    result[1, 1, 9] = numpy.sum(x223 * x323 * x338)
    result[1, 1, 10] = numpy.sum(x367 * x369)
    result[1, 1, 11] = numpy.sum(x330 * x361 * x96)
    result[1, 1, 12] = numpy.sum(x217 * x330 * x351)
    result[1, 1, 13] = numpy.sum(x223 * x330 * x346)
    result[1, 1, 14] = numpy.sum(x139 * x339 * x370)
    result[1, 2, 0] = numpy.sum(x178 * x303 * x341)
    result[1, 2, 1] = numpy.sum(x188 * x321 * x45)
    result[1, 2, 2] = numpy.sum(x280 * x303 * x45)
    result[1, 2, 3] = numpy.sum(x177 * x319 * x352)
    result[1, 2, 4] = numpy.sum(x281 * x314 * x43)
    result[1, 2, 5] = numpy.sum(x282 * x303 * x43)
    result[1, 2, 6] = numpy.sum(x279 * x323 * x326)
    result[1, 2, 7] = numpy.sum(x281 * x319 * x323)
    result[1, 2, 8] = numpy.sum(x198 * x314 * x362)
    result[1, 2, 9] = numpy.sum(x196 * x323 * x333)
    result[1, 2, 10] = numpy.sum(x177 * x332 * x369)
    result[1, 2, 11] = numpy.sum(x280 * x326 * x330)
    result[1, 2, 12] = numpy.sum(x282 * x319 * x330)
    result[1, 2, 13] = numpy.sum(x196 * x314 * x370)
    result[1, 2, 14] = numpy.sum(x200 * x330 * x333)
    result[1, 3, 0] = numpy.sum(x374 * x377)
    result[1, 3, 1] = numpy.sum(x379 * x381)
    result[1, 3, 2] = numpy.sum(x376 * x381 * x96)
    result[1, 3, 3] = numpy.sum(x382 * x385)
    result[1, 3, 4] = numpy.sum(x33 * x353 * x379)
    result[1, 3, 5] = numpy.sum(x217 * x33 * x376)
    result[1, 3, 6] = numpy.sum(x148 * x389 * x390)
    result[1, 3, 7] = numpy.sum(x385 * x391 * x96)
    result[1, 3, 8] = numpy.sum(x136 * x379 * x391)
    result[1, 3, 9] = numpy.sum(x223 * x31 * x376)
    result[1, 3, 10] = numpy.sum(x392 * x399)
    result[1, 3, 11] = numpy.sum(x11 * x389 * x400)
    result[1, 3, 12] = numpy.sum(x11 * x112 * x404)
    result[1, 3, 13] = numpy.sum(x11 * x169 * x405)
    result[1, 3, 14] = numpy.sum(x139 * x392 * x406)
    result[1, 4, 0] = numpy.sum(x188 * x374 * x407)
    result[1, 4, 1] = numpy.sum(x346 * x373 * x408)
    result[1, 4, 2] = numpy.sum(x189 * x373 * x409)
    result[1, 4, 3] = numpy.sum(x188 * x33 * x410)
    result[1, 4, 4] = numpy.sum(x234 * x33 * x346)
    result[1, 4, 5] = numpy.sum(x238 * x33 * x338)
    result[1, 4, 6] = numpy.sum(x31 * x360 * x408)
    result[1, 4, 7] = numpy.sum(x234 * x31 * x351)
    result[1, 4, 8] = numpy.sum(x198 * x346 * x411)
    result[1, 4, 9] = numpy.sum(x195 * x409 * x412)
    result[1, 4, 10] = numpy.sum(x367 * x413 * x414)
    result[1, 4, 11] = numpy.sum(x181 * x360 * x416)
    result[1, 4, 12] = numpy.sum(x186 * x410 * x415)
    result[1, 4, 13] = numpy.sum(x195 * x346 * x416)
    result[1, 4, 14] = numpy.sum(x199 * x407 * x415)
    result[1, 5, 0] = numpy.sum(x287 * x303 * x374)
    result[1, 5, 1] = numpy.sum(x247 * x321 * x373)
    result[1, 5, 2] = numpy.sum(x288 * x303 * x373)
    result[1, 5, 3] = numpy.sum(x247 * x319 * x382)
    result[1, 5, 4] = numpy.sum(x314 * x33 * x417)
    result[1, 5, 5] = numpy.sum(x251 * x333 * x382)
    result[1, 5, 6] = numpy.sum(x247 * x326 * x390)
    result[1, 5, 7] = numpy.sum(x253 * x319 * x391)
    result[1, 5, 8] = numpy.sum(x314 * x391 * x418)
    result[1, 5, 9] = numpy.sum(x256 * x333 * x390)
    result[1, 5, 10] = numpy.sum(x11 * x332 * x419)
    result[1, 5, 11] = numpy.sum(x11 * x326 * x421)
    result[1, 5, 12] = numpy.sum(x11 * x319 * x422)
    result[1, 5, 13] = numpy.sum(x256 * x321 * x415)
    result[1, 5, 14] = numpy.sum(x303 * x392 * x423)
    result[1, 6, 0] = numpy.sum(x425 * x427)
    result[1, 6, 1] = numpy.sum(x148 * x428 * x429)
    result[1, 6, 2] = numpy.sum(x427 * x429 * x96)
    result[1, 6, 3] = numpy.sum(x148 * x431 * x432)
    result[1, 6, 4] = numpy.sum(x328 * x371 * x428)
    result[1, 6, 5] = numpy.sum(x271 * x371 * x426)
    result[1, 6, 6] = numpy.sum(x434 * x435)
    result[1, 6, 7] = numpy.sum(x10 * x400 * x431)
    result[1, 6, 8] = numpy.sum(x10 * x125 * x436)
    result[1, 6, 9] = numpy.sum(x10 * x128 * x437)
    result[1, 6, 10] = numpy.sum(
        x397
        * x86
        * (
            x0
            * (
                x375 * (x394 + x395)
                + 6.0 * x387
                + 3.0 * x388
                + 3.0 * x430
                + x46 * (x220 + 5.0 * x363 + x366 + 3.0 * x386)
            )
            + x433 * x91
        )
    )
    result[1, 6, 11] = numpy.sum(x434 * x97)
    result[1, 6, 12] = numpy.sum(x112 * x431 * x438)
    result[1, 6, 13] = numpy.sum(x128 * x436)
    result[1, 6, 14] = numpy.sum(x140 * x437)
    result[1, 7, 0] = numpy.sum(x177 * x377 * x424)
    result[1, 7, 1] = numpy.sum(x188 * x379 * x439)
    result[1, 7, 2] = numpy.sum(x280 * x372 * x376)
    result[1, 7, 3] = numpy.sum(x177 * x385 * x440)
    result[1, 7, 4] = numpy.sum(x281 * x371 * x379)
    result[1, 7, 5] = numpy.sum(x282 * x371 * x376)
    result[1, 7, 6] = numpy.sum(x389 * x414 * x441)
    result[1, 7, 7] = numpy.sum(x181 * x384 * x443)
    result[1, 7, 8] = numpy.sum(x186 * x405 * x442)
    result[1, 7, 9] = numpy.sum(x10 * x196 * x406)
    result[1, 7, 10] = numpy.sum(x178 * x399)
    result[1, 7, 11] = numpy.sum(x181 * x389 * x420)
    result[1, 7, 12] = numpy.sum(x186 * x404)
    result[1, 7, 13] = numpy.sum(x196 * x405)
    result[1, 7, 14] = numpy.sum(x200 * x406)
    result[1, 8, 0] = numpy.sum(x287 * x338 * x424)
    result[1, 8, 1] = numpy.sum(x247 * x346 * x439)
    result[1, 8, 2] = numpy.sum(x288 * x338 * x372)
    result[1, 8, 3] = numpy.sum(x247 * x351 * x440)
    result[1, 8, 4] = numpy.sum(x346 * x371 * x417)
    result[1, 8, 5] = numpy.sum(x338 * x418 * x440)
    result[1, 8, 6] = numpy.sum(x240 * x360 * x444)
    result[1, 8, 7] = numpy.sum(x249 * x351 * x445)
    result[1, 8, 8] = numpy.sum(x251 * x346 * x443)
    result[1, 8, 9] = numpy.sum(x10 * x338 * x446)
    result[1, 8, 10] = numpy.sum(x367 * x419)
    result[1, 8, 11] = numpy.sum(x360 * x421)
    result[1, 8, 12] = numpy.sum(x351 * x422)
    result[1, 8, 13] = numpy.sum(x346 * x446)
    result[1, 8, 14] = numpy.sum(x339 * x423)
    result[1, 9, 0] = numpy.sum(x294 * x303 * x425)
    result[1, 9, 1] = numpy.sum(x294 * x314 * x429)
    result[1, 9, 2] = numpy.sum(x293 * x333 * x429)
    result[1, 9, 3] = numpy.sum(x294 * x319 * x432)
    result[1, 9, 4] = numpy.sum(x293 * x321 * x447)
    result[1, 9, 5] = numpy.sum(x297 * x333 * x432)
    result[1, 9, 6] = numpy.sum(x10 * x289 * x449)
    result[1, 9, 7] = numpy.sum(x293 * x319 * x444)
    result[1, 9, 8] = numpy.sum(x297 * x321 * x445)
    result[1, 9, 9] = numpy.sum(x10 * x303 * x450)
    result[1, 9, 10] = numpy.sum(x289 * x332 * x451)
    result[1, 9, 11] = numpy.sum(x293 * x449)
    result[1, 9, 12] = numpy.sum(x297 * x319 * x438)
    result[1, 9, 13] = numpy.sum(x314 * x450)
    result[1, 9, 14] = numpy.sum(x300 * x303 * x451)
    result[2, 0, 0] = numpy.sum(x290 * x308 * x454)
    result[2, 0, 1] = numpy.sum(x454 * x455 * x91)
    result[2, 0, 2] = numpy.sum(x455 * x461)
    result[2, 0, 3] = numpy.sum(x104 * x320 * x462)
    result[2, 0, 4] = numpy.sum(x295 * x320 * x461)
    result[2, 0, 5] = numpy.sum(x115 * x320 * x466)
    result[2, 0, 6] = numpy.sum(x118 * x324 * x462)
    result[2, 0, 7] = numpy.sum(x123 * x324 * x467)
    result[2, 0, 8] = numpy.sum(x295 * x324 * x466)
    result[2, 0, 9] = numpy.sum(x324 * x470)
    result[2, 0, 10] = numpy.sum(x131 * x331 * x462)
    result[2, 0, 11] = numpy.sum(x118 * x331 * x467)
    result[2, 0, 12] = numpy.sum(x104 * x331 * x471)
    result[2, 0, 13] = numpy.sum(x331 * x470 * x91)
    result[2, 0, 14] = numpy.sum(x290 * x331 * x472)
    result[2, 1, 0] = numpy.sum(x141 * x454 * x474)
    result[2, 1, 1] = numpy.sum(x285 * x45 * x454)
    result[2, 1, 2] = numpy.sum(x141 * x461 * x475)
    result[2, 1, 3] = numpy.sum(x154 * x43 * x462)
    result[2, 1, 4] = numpy.sum(x286 * x43 * x461)
    result[2, 1, 5] = numpy.sum(x141 * x466 * x476)
    result[2, 1, 6] = numpy.sum(x165 * x323 * x462)
    result[2, 1, 7] = numpy.sum(x153 * x362 * x467)
    result[2, 1, 8] = numpy.sum(x286 * x323 * x466)
    result[2, 1, 9] = numpy.sum(x141 * x469 * x477)
    result[2, 1, 10] = numpy.sum(x172 * x370 * x454)
    result[2, 1, 11] = numpy.sum(x165 * x370 * x461)
    result[2, 1, 12] = numpy.sum(x154 * x370 * x466)
    result[2, 1, 13] = numpy.sum(x285 * x330 * x469)
    result[2, 1, 14] = numpy.sum(x141 * x472 * x478)
    result[2, 2, 0] = numpy.sum(x474 * x483)
    result[2, 2, 1] = numpy.sum(x475 * x483 * x91)
    result[2, 2, 2] = numpy.sum(x475 * x488)
    result[2, 2, 3] = numpy.sum(x183 * x43 * x489)
    result[2, 2, 4] = numpy.sum(x43 * x488 * x490)
    result[2, 2, 5] = numpy.sum(x476 * x494)
    result[2, 2, 6] = numpy.sum(x187 * x323 * x489)
    result[2, 2, 7] = numpy.sum(x103 * x362 * x495)
    result[2, 2, 8] = numpy.sum(x248 * x362 * x494)
    result[2, 2, 9] = numpy.sum(x477 * x502)
    result[2, 2, 10] = numpy.sum(x197 * x370 * x483)
    result[2, 2, 11] = numpy.sum(x187 * x370 * x488)
    result[2, 2, 12] = numpy.sum(x183 * x370 * x494)
    result[2, 2, 13] = numpy.sum(x295 * x330 * x502)
    result[2, 2, 14] = numpy.sum(x478 * x507)
    result[2, 3, 0] = numpy.sum(x206 * x374 * x462)
    result[2, 3, 1] = numpy.sum(x209 * x380 * x462)
    result[2, 3, 2] = numpy.sum(x205 * x380 * x467)
    result[2, 3, 3] = numpy.sum(x213 * x382 * x462)
    result[2, 3, 4] = numpy.sum(x216 * x33 * x467)
    result[2, 3, 5] = numpy.sum(x205 * x382 * x471)
    result[2, 3, 6] = numpy.sum(x220 * x454 * x508)
    result[2, 3, 7] = numpy.sum(x213 * x391 * x467)
    result[2, 3, 8] = numpy.sum(x209 * x391 * x471)
    result[2, 3, 9] = numpy.sum(x205 * x469 * x508)
    result[2, 3, 10] = numpy.sum(x415 * x454 * x509)
    result[2, 3, 11] = numpy.sum(x11 * x461 * x510)
    result[2, 3, 12] = numpy.sum(x11 * x466 * x511)
    result[2, 3, 13] = numpy.sum(x11 * x469 * x512)
    result[2, 3, 14] = numpy.sum(x11 * x472 * x513)
    result[2, 4, 0] = numpy.sum(35.33135663832854 * x235 * x374 * x483)
    result[2, 4, 1] = numpy.sum(x175 * x373 * x514)
    result[2, 4, 2] = numpy.sum(x373 * x488 * x515)
    result[2, 4, 3] = numpy.sum(x230 * x33 * x489)
    result[2, 4, 4] = numpy.sum(x231 * x33 * x488)
    result[2, 4, 5] = numpy.sum(x157 * x232 * x33 * x494)
    result[2, 4, 6] = numpy.sum(x164 * x412 * x514)
    result[2, 4, 7] = numpy.sum(x153 * x411 * x495)
    result[2, 4, 8] = numpy.sum(x231 * x31 * x494)
    result[2, 4, 9] = numpy.sum(x31 * x502 * x515)
    result[2, 4, 10] = numpy.sum(x171 * x413 * x516)
    result[2, 4, 11] = numpy.sum(x164 * x416 * x488)
    result[2, 4, 12] = numpy.sum(x230 * x415 * x494)
    result[2, 4, 13] = numpy.sum(x147 * x416 * x502)
    result[2, 4, 14] = numpy.sum(x413 * x507 * x518)
    result[2, 5, 0] = numpy.sum(x374 * x521)
    result[2, 5, 1] = numpy.sum(x520 * x522 * x91)
    result[2, 5, 2] = numpy.sum(x522 * x524)
    result[2, 5, 3] = numpy.sum(x135 * x183 * x33 * x520)
    result[2, 5, 4] = numpy.sum(x33 * x490 * x524)
    result[2, 5, 5] = numpy.sum(x382 * x527)
    result[2, 5, 6] = numpy.sum(x187 * x412 * x520)
    result[2, 5, 7] = numpy.sum(x103 * x135 * x391 * x524)
    result[2, 5, 8] = numpy.sum(x391 * x527 * x91)
    result[2, 5, 9] = numpy.sum(x157 * x390 * x531)
    result[2, 5, 10] = numpy.sum(x11 * x197 * x532)
    result[2, 5, 11] = numpy.sum(x11 * x187 * x533)
    result[2, 5, 12] = numpy.sum(x11 * x183 * x534)
    result[2, 5, 13] = numpy.sum(53.96953873354034 * x11 * x517 * x531 * x91)
    result[2, 5, 14] = numpy.sum(x392 * x539)
    result[2, 6, 0] = numpy.sum(x275 * x425 * x454)
    result[2, 6, 1] = numpy.sum(x264 * x429 * x462)
    result[2, 6, 2] = numpy.sum(x275 * x429 * x461)
    result[2, 6, 3] = numpy.sum(x268 * x432 * x462)
    result[2, 6, 4] = numpy.sum(x270 * x447 * x461)
    result[2, 6, 5] = numpy.sum(x275 * x432 * x466)
    result[2, 6, 6] = numpy.sum(x10 * x454 * x540)
    result[2, 6, 7] = numpy.sum(x268 * x444 * x461)
    result[2, 6, 8] = numpy.sum(x270 * x445 * x466)
    result[2, 6, 9] = numpy.sum(x10 * x261 * x541)
    result[2, 6, 10] = numpy.sum(x277 * x451 * x454)
    result[2, 6, 11] = numpy.sum(x461 * x540)
    result[2, 6, 12] = numpy.sum(x268 * x438 * x466)
    result[2, 6, 13] = numpy.sum(x264 * x541)
    result[2, 6, 14] = numpy.sum(x261 * x451 * x472)
    result[2, 7, 0] = numpy.sum(x206 * x424 * x489)
    result[2, 7, 1] = numpy.sum(x209 * x439 * x489)
    result[2, 7, 2] = numpy.sum(x205 * x439 * x495)
    result[2, 7, 3] = numpy.sum(x213 * x440 * x489)
    result[2, 7, 4] = numpy.sum(x216 * x447 * x488)
    result[2, 7, 5] = numpy.sum(x135 * x205 * x440 * x494)
    result[2, 7, 6] = numpy.sum(x10 * x483 * x510)
    result[2, 7, 7] = numpy.sum(x213 * x443 * x488)
    result[2, 7, 8] = numpy.sum(x216 * x445 * x494)
    result[2, 7, 9] = numpy.sum(x205 * x444 * x502)
    result[2, 7, 10] = numpy.sum(x509 * x516)
    result[2, 7, 11] = numpy.sum(x488 * x510)
    result[2, 7, 12] = numpy.sum(x494 * x511)
    result[2, 7, 13] = numpy.sum(x502 * x512)
    result[2, 7, 14] = numpy.sum(x507 * x513)
    result[2, 8, 0] = numpy.sum(x141 * x424 * x521)
    result[2, 8, 1] = numpy.sum(x285 * x372 * x520)
    result[2, 8, 2] = numpy.sum(x235 * x439 * x524)
    result[2, 8, 3] = numpy.sum(x154 * x447 * x520)
    result[2, 8, 4] = numpy.sum(x286 * x371 * x524)
    result[2, 8, 5] = numpy.sum(x141 * x440 * x527)
    result[2, 8, 6] = numpy.sum(x10 * x165 * x532)
    result[2, 8, 7] = numpy.sum(x153 * x442 * x533)
    result[2, 8, 8] = numpy.sum(x147 * x442 * x534)
    result[2, 8, 9] = numpy.sum(x441 * x518 * x531)
    result[2, 8, 10] = numpy.sum(x172 * x532)
    result[2, 8, 11] = numpy.sum(x165 * x533)
    result[2, 8, 12] = numpy.sum(x154 * x534)
    result[2, 8, 13] = numpy.sum(x147 * x420 * x531)
    result[2, 8, 14] = numpy.sum(x142 * x539)
    result[2, 9, 0] = numpy.sum(x425 * x543)
    result[2, 9, 1] = numpy.sum(x429 * x543 * x91)
    result[2, 9, 2] = numpy.sum(x157 * x429 * x544)
    result[2, 9, 3] = numpy.sum(x104 * x447 * x542)
    result[2, 9, 4] = numpy.sum(x295 * x371 * x544)
    result[2, 9, 5] = numpy.sum(x157 * x432 * x546)
    result[2, 9, 6] = numpy.sum(x10 * x118 * x547)
    result[2, 9, 7] = numpy.sum(x10 * x123 * x548)
    result[2, 9, 8] = numpy.sum(x108 * x441 * x549)
    result[2, 9, 9] = numpy.sum(x435 * x551)
    result[2, 9, 10] = numpy.sum(x131 * x547)
    result[2, 9, 11] = numpy.sum(x118 * x548)
    result[2, 9, 12] = numpy.sum(x106 * x549)
    result[2, 9, 13] = numpy.sum(x551 * x92)
    result[2, 9, 14] = numpy.sum(
        9.122517057277419
        * x517
        * (
            x0
            * (
                x46 * (x256 + 5.0 * x503 + x506 + 3.0 * x528)
                + x519 * (x536 + x537)
                + 6.0 * x529
                + 3.0 * x530
                + 3.0 * x545
            )
            + x550 * x96
        )
    )
    return result


def diag_quadrupole3d_40(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gs) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 1), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3**2 * x8
    x10 = x0 * x8
    x11 = 3.0 * x10
    x12 = 2.0 * x3
    x13 = -x2 - R[0]
    x14 = x13 * x8
    x15 = x11 + x12 * x14
    x16 = 2.0 * x0
    x17 = x3 * x8
    x18 = x0 * (x14 + x17)
    x19 = x10 + x13 * x17
    x20 = x19 * x3
    x21 = x13**2 * x8
    x22 = x0 * (x15 + x21)
    x23 = x13 * x19
    x24 = x18 + x23
    x25 = x24 * x3
    x26 = x22 + x25
    x27 = 2.0 * x0 * (2.0 * x18 + x20 + x23) + x26 * x3
    x28 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x29 = 4.416419579791068 * x28
    x30 = 0.5641895835477563
    x31 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x32 = da * db * numpy.sqrt(ax**5.5) * numpy.sqrt(bx**1.5)
    x33 = x31 * x32
    x34 = x1 * x30 * x33
    x35 = -x1 * (ax * A[1] + bx * B[1])
    x36 = -x35 - A[1]
    x37 = 11.68474789344354 * x36
    x38 = x28 * x37
    x39 = x27 * x34
    x40 = -x1 * (ax * A[2] + bx * B[2])
    x41 = -x40 - A[2]
    x42 = 11.68474789344354 * x41
    x43 = x28 * x7
    x44 = x36**2 * x43
    x45 = x0 * x43
    x46 = x44 + x45
    x47 = 15.08494466531301 * x46
    x48 = 0.3183098861837907 * x6
    x49 = x26 * x48
    x50 = 26.12789058968724 * x41
    x51 = x28 * x32
    x52 = x31 * x7
    x53 = x41**2 * x52
    x54 = x0 * x52
    x55 = x53 + x54
    x56 = 15.08494466531301 * x55
    x57 = x36 * x43
    x58 = x16 * x57 + x36 * x46
    x59 = x33 * x48
    x60 = 11.68474789344354 * x24
    x61 = 26.12789058968724 * x24
    x62 = x48 * x51
    x63 = x41 * x52
    x64 = x16 * x63 + x41 * x55
    x65 = x48 * x64
    x66 = 3.0 * x45
    x67 = 4.416419579791068 * x0 * (3.0 * x44 + x66) + 4.416419579791068 * x36 * x58
    x68 = x32 * (x10 + x21)
    x69 = x48 * x68
    x70 = x31 * x69
    x71 = 0.1795871221251666
    x72 = x55 * x71
    x73 = 3.0 * x54
    x74 = x0 * (3.0 * x53 + x73) + x41 * x64
    x75 = x10 + x9
    x76 = x16 * x17 + x3 * x75
    x77 = x0 * (x11 + 3.0 * x9) + x3 * x76
    x78 = -x35 - R[1]
    x79 = x43 * x78**2
    x80 = x45 + x79
    x81 = 4.416419579791068 * x80
    x82 = x43 * x78
    x83 = x0 * (x57 + x82)
    x84 = x45 + x57 * x78
    x85 = x78 * x84
    x86 = x83 + x85
    x87 = 11.68474789344354 * x86
    x88 = x59 * x76
    x89 = x32 * x75
    x90 = 15.08494466531301 * x89
    x91 = 2.0 * x36
    x92 = x66 + x82 * x91
    x93 = x0 * (x79 + x92)
    x94 = x36 * x86
    x95 = x93 + x94
    x96 = x48 * x95
    x97 = 26.12789058968724 * x86
    x98 = 11.68474789344354 * x3
    x99 = x36 * x84
    x100 = 2.0 * x0 * (2.0 * x83 + x85 + x99) + x36 * x95
    x101 = x34 * x5
    x102 = x100 * x101
    x103 = x32 * x5
    x104 = x103 * x48
    x105 = x104 * x3
    x106 = x103 * x65
    x107 = -x40 - R[2]
    x108 = x107**2 * x52
    x109 = x108 + x54
    x110 = x109 * x48
    x111 = x37 * x51
    x112 = x107 * x52
    x113 = x0 * (x112 + x63)
    x114 = x107 * x63 + x54
    x115 = x107 * x114
    x116 = x113 + x115
    x117 = 11.68474789344354 * x116
    x118 = x28 * x48
    x119 = 26.12789058968724 * x116
    x120 = 2.0 * x41
    x121 = x112 * x120 + x73
    x122 = x0 * (x108 + x121)
    x123 = x116 * x41
    x124 = x122 + x123
    x125 = x104 * x109
    x126 = x1 * x30
    x127 = x114 * x41
    x128 = 2.0 * x0 * (2.0 * x113 + x115 + x127) + x124 * x41
    x129 = x126 * x128 * x5

    # 45 item(s)
    result[0, 0, 0] = numpy.sum(
        x29
        * x34
        * (x0 * (x12 * (x18 + x20) + x16 * (x15 + x9) + 3.0 * x22 + 3.0 * x25) + x27 * x3)
    )
    result[0, 1, 0] = numpy.sum(x38 * x39)
    result[0, 2, 0] = numpy.sum(x28 * x39 * x42)
    result[0, 3, 0] = numpy.sum(x33 * x47 * x49)
    result[0, 4, 0] = numpy.sum(x26 * x28 * x34 * x36 * x50)
    result[0, 5, 0] = numpy.sum(x49 * x51 * x56)
    result[0, 6, 0] = numpy.sum(x58 * x59 * x60)
    result[0, 7, 0] = numpy.sum(x41 * x46 * x59 * x61)
    result[0, 8, 0] = numpy.sum(x36 * x55 * x61 * x62)
    result[0, 9, 0] = numpy.sum(x51 * x60 * x65)
    result[0, 10, 0] = numpy.sum(x67 * x70)
    result[0, 11, 0] = numpy.sum(x42 * x58 * x70)
    result[0, 12, 0] = numpy.sum(x47 * x68 * x72)
    result[0, 13, 0] = numpy.sum(x38 * x65 * x68)
    result[0, 14, 0] = numpy.sum(x29 * x69 * x74)
    result[1, 0, 0] = numpy.sum(x59 * x77 * x81)
    result[1, 1, 0] = numpy.sum(x87 * x88)
    result[1, 2, 0] = numpy.sum(x42 * x80 * x88)
    result[1, 3, 0] = numpy.sum(x31 * x90 * x96)
    result[1, 4, 0] = numpy.sum(x31 * x41 * x48 * x89 * x97)
    result[1, 5, 0] = numpy.sum(x72 * x80 * x90)
    result[1, 6, 0] = numpy.sum(x102 * x98)
    result[1, 7, 0] = numpy.sum(x101 * x3 * x50 * x95)
    result[1, 8, 0] = numpy.sum(x105 * x55 * x97)
    result[1, 9, 0] = numpy.sum(x106 * x80 * x98)
    result[1, 10, 0] = numpy.sum(
        4.416419579791068
        * x101
        * (
            x0 * (x16 * (x44 + x92) + x91 * (x83 + x99) + 3.0 * x93 + 3.0 * x94)
            + x100 * x36
        )
    )
    result[1, 11, 0] = numpy.sum(x102 * x42)
    result[1, 12, 0] = numpy.sum(x103 * x56 * x96)
    result[1, 13, 0] = numpy.sum(x106 * x87)
    result[1, 14, 0] = numpy.sum(x104 * x74 * x81)
    result[2, 0, 0] = numpy.sum(x110 * x29 * x32 * x77)
    result[2, 1, 0] = numpy.sum(x110 * x111 * x76)
    result[2, 2, 0] = numpy.sum(x117 * x62 * x76)
    result[2, 3, 0] = numpy.sum(x109 * x47 * x71 * x89)
    result[2, 4, 0] = numpy.sum(x118 * x119 * x36 * x89)
    result[2, 5, 0] = numpy.sum(x118 * x124 * x90)
    result[2, 6, 0] = numpy.sum(x125 * x58 * x98)
    result[2, 7, 0] = numpy.sum(x105 * x119 * x46)
    result[2, 8, 0] = numpy.sum(26.12789058968724 * x124 * x126 * x3 * x36 * x5 * x51)
    result[2, 9, 0] = numpy.sum(x129 * x51 * x98)
    result[2, 10, 0] = numpy.sum(x125 * x67)
    result[2, 11, 0] = numpy.sum(x104 * x117 * x58)
    result[2, 12, 0] = numpy.sum(x104 * x124 * x47)
    result[2, 13, 0] = numpy.sum(x111 * x129)
    result[2, 14, 0] = numpy.sum(
        x103
        * x126
        * x29
        * (
            x0 * (x120 * (x113 + x127) + 3.0 * x122 + 3.0 * x123 + x16 * (x121 + x53))
            + x128 * x41
        )
    )
    return result


def diag_quadrupole3d_41(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gp) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 3), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x0 * x8
    x10 = -x2 - B[0]
    x11 = -x2 - R[0]
    x12 = x11 * x8
    x13 = x10 * x12
    x14 = x13 + x9
    x15 = x14 * x3
    x16 = 2.0 * x15
    x17 = x10 * x8
    x18 = x0 * (x12 + x17)
    x19 = x3 * x8
    x20 = x0 * (x12 + x19)
    x21 = x11 * x19
    x22 = x21 + x9
    x23 = x22 * x3
    x24 = x20 + x23
    x25 = x0 * (x17 + x19)
    x26 = x10 * x19
    x27 = x26 + x9
    x28 = x27 * x3
    x29 = x25 + x28
    x30 = 2.0 * x0
    x31 = 3.0 * x9
    x32 = x0 * (x13 + x21 + x26 + x31)
    x33 = x15 + x18
    x34 = x3 * x33
    x35 = 2.0 * x3
    x36 = x11 * x14
    x37 = x11 * x22
    x38 = x20 + x37
    x39 = x0 * (x16 + 3.0 * x18 + x36 + x38)
    x40 = x11 * x33
    x41 = x32 + x40
    x42 = x3 * x41
    x43 = x11**2 * x8
    x44 = x12 * x35 + x31
    x45 = x0 * (x43 + x44)
    x46 = x3 * x38
    x47 = x45 + x46
    x48 = 2.0 * x0 * (2.0 * x20 + x23 + x37) + x3 * x47
    x49 = x39 + x42
    x50 = x0 * (4.0 * x32 + 2.0 * x34 + 2.0 * x40 + x47) + x3 * x49
    x51 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x52 = da * db * numpy.sqrt(ax**5.5) * numpy.sqrt(bx**2.5)
    x53 = x51 * x52
    x54 = 8.832839159582136 * x53
    x55 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x56 = 0.5641895835477563 * x1
    x57 = x55 * x56
    x58 = x54 * x57
    x59 = -x1 * (ax * A[1] + bx * B[1])
    x60 = -x59 - B[1]
    x61 = x3**2 * x8
    x62 = x58 * (x0 * (x24 * x35 + x30 * (x44 + x61) + 3.0 * x45 + 3.0 * x46) + x3 * x48)
    x63 = -x1 * (ax * A[2] + bx * B[2])
    x64 = -x63 - B[2]
    x65 = -x59 - A[1]
    x66 = x57 * x65
    x67 = 23.36949578688709 * x53
    x68 = x50 * x67
    x69 = x48 * x53
    x70 = x0 * x7
    x71 = x55 * x70
    x72 = x55 * x7
    x73 = x65 * x72
    x74 = x60 * x73
    x75 = x71 + x74
    x76 = 23.36949578688709 * x75
    x77 = 0.3183098861837907 * x6
    x78 = x76 * x77
    x79 = 23.36949578688709 * x69
    x80 = -x63 - A[2]
    x81 = x57 * x80
    x82 = x51 * x70
    x83 = x51 * x7
    x84 = x80 * x83
    x85 = x64 * x84
    x86 = x82 + x85
    x87 = 23.36949578688709 * x77
    x88 = x52 * x55
    x89 = x87 * x88
    x90 = x49 * x53
    x91 = x65**2 * x72
    x92 = x71 + x91
    x93 = 30.16988933062603 * x77
    x94 = x92 * x93
    x95 = x47 * x93
    x96 = x60 * x72
    x97 = x0 * (x73 + x96)
    x98 = x65 * x75
    x99 = x97 + x98
    x100 = x53 * x99
    x101 = x47 * x53
    x102 = 52.25578117937447 * x80
    x103 = 52.25578117937447 * x75
    x104 = x77 * x80
    x105 = x65 * x88
    x106 = 52.25578117937447 * x77
    x107 = x106 * x86
    x108 = x80**2 * x83
    x109 = x108 + x82
    x110 = x109 * x93
    x111 = x88 * x95
    x112 = x64 * x83
    x113 = x0 * (x112 + x84)
    x114 = x80 * x86
    x115 = x113 + x114
    x116 = x30 * x73 + x65 * x92
    x117 = 23.36949578688709 * x116
    x118 = x117 * x77
    x119 = x118 * x53
    x120 = 2.0 * x65
    x121 = 3.0 * x71
    x122 = x121 + x91
    x123 = x0 * (x120 * x96 + x122) + x65 * x99
    x124 = x53 * x87
    x125 = 52.25578117937447 * x92
    x126 = x104 * x53
    x127 = 0.1795871221251666 * x52
    x128 = x127 * x86
    x129 = x105 * x106
    x130 = x109 * x127
    x131 = x109 * x80 + x30 * x84
    x132 = x131 * x89
    x133 = 2.0 * x80
    x134 = 3.0 * x82
    x135 = x108 + x134
    x136 = x0 * (x112 * x133 + x135) + x115 * x80
    x137 = x18 + x36
    x138 = x0 * (x121 + 3.0 * x91) + x116 * x65
    x139 = x54 * x77
    x140 = x138 * x139
    x141 = x43 + x9
    x142 = x0 * (x116 + 3.0 * x97 + 3.0 * x98) + x123 * x65
    x143 = 23.36949578688709 * x141
    x144 = 30.16988933062603 * x130
    x145 = 30.16988933062603 * x127
    x146 = x115 * x145
    x147 = x127 * x131
    x148 = x136 * x77
    x149 = x0 * (3.0 * x108 + x134) + x131 * x80
    x150 = 8.832839159582136 * x77
    x151 = x150 * x88
    x152 = x149 * x151
    x153 = x0 * (3.0 * x113 + 3.0 * x114 + x131) + x136 * x80
    x154 = x61 + x9
    x155 = x154 * x3 + x19 * x30
    x156 = x0 * (x17 * x35 + x31 + x61) + x29 * x3
    x157 = x0 * (x155 + 3.0 * x25 + 3.0 * x28) + x156 * x3
    x158 = -x59 - R[1]
    x159 = x158**2 * x72
    x160 = x159 + x71
    x161 = x139 * x160
    x162 = x158 * x72
    x163 = x0 * (x162 + x96)
    x164 = x158 * x96
    x165 = x164 + x71
    x166 = x158 * x165
    x167 = x163 + x166
    x168 = x0 * (x31 + 3.0 * x61) + x155 * x3
    x169 = x0 * (x162 + x73)
    x170 = x158 * x73
    x171 = x170 + x71
    x172 = x158 * x171
    x173 = x169 + x172
    x174 = x124 * x173
    x175 = x0 * (x121 + x164 + x170 + x74)
    x176 = x165 * x65
    x177 = x163 + x176
    x178 = x158 * x177
    x179 = x175 + x178
    x180 = x124 * x155
    x181 = 23.36949578688709 * x160
    x182 = x120 * x162
    x183 = x0 * (x121 + x159 + x182)
    x184 = x173 * x65
    x185 = x183 + x184
    x186 = x53 * x93
    x187 = x185 * x186
    x188 = 2.0 * x176
    x189 = x0 * (3.0 * x163 + x166 + x173 + x188)
    x190 = x179 * x65
    x191 = x189 + x190
    x192 = 52.25578117937447 * x173
    x193 = 52.25578117937447 * x126
    x194 = x171 * x65
    x195 = 2.0 * x0 * (2.0 * x169 + x172 + x194) + x185 * x65
    x196 = x5 * x56
    x197 = x196 * x3
    x198 = x177 * x65
    x199 = x0 * (4.0 * x175 + 2.0 * x178 + x185 + 2.0 * x198) + x191 * x65
    x200 = x199 * x67
    x201 = x195 * x67
    x202 = x5 * x52
    x203 = x202 * x3
    x204 = x106 * x203
    x205 = x203 * x77
    x206 = x202 * x87
    x207 = x131 * x206
    x208 = x169 + x194
    x209 = x196 * x54
    x210 = x209 * (
        x0 * (x120 * x208 + 3.0 * x183 + 3.0 * x184 + x30 * (x122 + x182)) + x195 * x65
    )
    x211 = x196 * x80
    x212 = x110 * x202
    x213 = x202 * x93
    x214 = x150 * x202
    x215 = x149 * x214
    x216 = -x63 - R[2]
    x217 = x216**2 * x83
    x218 = x217 + x82
    x219 = x151 * x218
    x220 = x216 * x83
    x221 = x0 * (x112 + x220)
    x222 = x112 * x216
    x223 = x222 + x82
    x224 = x216 * x223
    x225 = x221 + x224
    x226 = x156 * x89
    x227 = x127 * x218
    x228 = x155 * x89
    x229 = x0 * (x220 + x84)
    x230 = x216 * x84
    x231 = x230 + x82
    x232 = x216 * x231
    x233 = x229 + x232
    x234 = x0 * (x134 + x222 + x230 + x85)
    x235 = x223 * x80
    x236 = x221 + x235
    x237 = x216 * x236
    x238 = x234 + x237
    x239 = x145 * x218
    x240 = x127 * x233
    x241 = x133 * x220
    x242 = x0 * (x134 + x217 + x241)
    x243 = x233 * x80
    x244 = x242 + x243
    x245 = x88 * x93
    x246 = x244 * x245
    x247 = 2.0 * x235
    x248 = x0 * (3.0 * x221 + x224 + x233 + x247)
    x249 = x238 * x80
    x250 = x248 + x249
    x251 = x123 * x206
    x252 = x118 * x202
    x253 = x202 * x57
    x254 = x253 * x3
    x255 = x231 * x80
    x256 = 2.0 * x0 * (2.0 * x229 + x232 + x255) + x244 * x80
    x257 = x202 * x256
    x258 = 23.36949578688709 * x257
    x259 = x236 * x80
    x260 = x0 * (4.0 * x234 + 2.0 * x237 + x244 + 2.0 * x259) + x250 * x80
    x261 = 23.36949578688709 * x260
    x262 = x214 * x218
    x263 = x202 * x94
    x264 = x229 + x255
    x265 = 8.832839159582136 * x253
    x266 = x265 * (
        x0 * (x133 * x264 + 3.0 * x242 + 3.0 * x243 + x30 * (x135 + x241)) + x256 * x80
    )

    # 135 item(s)
    result[0, 0, 0] = numpy.sum(
        x58
        * (
            x0
            * (
                x30 * (x16 + 2.0 * x18 + x24 + x29)
                + x35 * (x32 + x34)
                + 3.0 * x39
                + 3.0 * x42
                + x48
            )
            + x3 * x50
        )
    )
    result[0, 0, 1] = numpy.sum(x60 * x62)
    result[0, 0, 2] = numpy.sum(x62 * x64)
    result[0, 1, 0] = numpy.sum(x66 * x68)
    result[0, 1, 1] = numpy.sum(x69 * x78)
    result[0, 1, 2] = numpy.sum(x64 * x66 * x79)
    result[0, 2, 0] = numpy.sum(x68 * x81)
    result[0, 2, 1] = numpy.sum(x60 * x79 * x81)
    result[0, 2, 2] = numpy.sum(x48 * x86 * x89)
    result[0, 3, 0] = numpy.sum(x90 * x94)
    result[0, 3, 1] = numpy.sum(x100 * x95)
    result[0, 3, 2] = numpy.sum(x101 * x64 * x94)
    result[0, 4, 0] = numpy.sum(x102 * x66 * x90)
    result[0, 4, 1] = numpy.sum(x101 * x103 * x104)
    result[0, 4, 2] = numpy.sum(x105 * x107 * x47)
    result[0, 5, 0] = numpy.sum(x110 * x49 * x88)
    result[0, 5, 1] = numpy.sum(x109 * x111 * x60)
    result[0, 5, 2] = numpy.sum(x111 * x115)
    result[0, 6, 0] = numpy.sum(x119 * x41)
    result[0, 6, 1] = numpy.sum(x123 * x124 * x38)
    result[0, 6, 2] = numpy.sum(x119 * x38 * x64)
    result[0, 7, 0] = numpy.sum(x125 * x126 * x41)
    result[0, 7, 1] = numpy.sum(52.25578117937447 * x100 * x104 * x38)
    result[0, 7, 2] = numpy.sum(x125 * x128 * x38)
    result[0, 8, 0] = numpy.sum(x109 * x129 * x41)
    result[0, 8, 1] = numpy.sum(x103 * x130 * x38)
    result[0, 8, 2] = numpy.sum(x115 * x129 * x38)
    result[0, 9, 0] = numpy.sum(x132 * x41)
    result[0, 9, 1] = numpy.sum(x132 * x38 * x60)
    result[0, 9, 2] = numpy.sum(x136 * x38 * x89)
    result[0, 10, 0] = numpy.sum(x137 * x140)
    result[0, 10, 1] = numpy.sum(x139 * x141 * x142)
    result[0, 10, 2] = numpy.sum(x140 * x141 * x64)
    result[0, 11, 0] = numpy.sum(x119 * x137 * x80)
    result[0, 11, 1] = numpy.sum(x123 * x126 * x143)
    result[0, 11, 2] = numpy.sum(x116 * x128 * x143)
    result[0, 12, 0] = numpy.sum(x137 * x144 * x92)
    result[0, 12, 1] = numpy.sum(x141 * x144 * x99)
    result[0, 12, 2] = numpy.sum(x141 * x146 * x92)
    result[0, 13, 0] = numpy.sum(x132 * x137 * x65)
    result[0, 13, 1] = numpy.sum(x143 * x147 * x75)
    result[0, 13, 2] = numpy.sum(x105 * x143 * x148)
    result[0, 14, 0] = numpy.sum(x137 * x152)
    result[0, 14, 1] = numpy.sum(x141 * x152 * x60)
    result[0, 14, 2] = numpy.sum(x141 * x151 * x153)
    result[1, 0, 0] = numpy.sum(x157 * x161)
    result[1, 0, 1] = numpy.sum(x139 * x167 * x168)
    result[1, 0, 2] = numpy.sum(x161 * x168 * x64)
    result[1, 1, 0] = numpy.sum(x156 * x174)
    result[1, 1, 1] = numpy.sum(x179 * x180)
    result[1, 1, 2] = numpy.sum(x155 * x174 * x64)
    result[1, 2, 0] = numpy.sum(x126 * x156 * x181)
    result[1, 2, 1] = numpy.sum(x167 * x180 * x80)
    result[1, 2, 2] = numpy.sum(x128 * x155 * x181)
    result[1, 3, 0] = numpy.sum(x187 * x29)
    result[1, 3, 1] = numpy.sum(x154 * x186 * x191)
    result[1, 3, 2] = numpy.sum(x154 * x187 * x64)
    result[1, 4, 0] = numpy.sum(x126 * x192 * x29)
    result[1, 4, 1] = numpy.sum(x154 * x179 * x193)
    result[1, 4, 2] = numpy.sum(x128 * x154 * x192)
    result[1, 5, 0] = numpy.sum(x144 * x160 * x29)
    result[1, 5, 1] = numpy.sum(x144 * x154 * x167)
    result[1, 5, 2] = numpy.sum(x146 * x154 * x160)
    result[1, 6, 0] = numpy.sum(x124 * x195 * x27)
    result[1, 6, 1] = numpy.sum(x197 * x200)
    result[1, 6, 2] = numpy.sum(x197 * x201 * x64)
    result[1, 7, 0] = numpy.sum(x185 * x193 * x27)
    result[1, 7, 1] = numpy.sum(x102 * x191 * x197 * x53)
    result[1, 7, 2] = numpy.sum(x107 * x185 * x203)
    result[1, 8, 0] = numpy.sum(x130 * x192 * x27)
    result[1, 8, 1] = numpy.sum(x109 * x179 * x204)
    result[1, 8, 2] = numpy.sum(x115 * x192 * x205)
    result[1, 9, 0] = numpy.sum(x147 * x181 * x27)
    result[1, 9, 1] = numpy.sum(x167 * x207 * x3)
    result[1, 9, 2] = numpy.sum(x148 * x181 * x203)
    result[1, 10, 0] = numpy.sum(x10 * x210)
    result[1, 10, 1] = numpy.sum(
        x209
        * (
            x0
            * (
                x120 * (x175 + x198)
                + 3.0 * x189
                + 3.0 * x190
                + x195
                + x30 * (2.0 * x163 + x188 + x208 + x99)
            )
            + x199 * x65
        )
    )
    result[1, 10, 2] = numpy.sum(x210 * x64)
    result[1, 11, 0] = numpy.sum(x10 * x201 * x211)
    result[1, 11, 1] = numpy.sum(x200 * x211)
    result[1, 11, 2] = numpy.sum(x195 * x206 * x86)
    result[1, 12, 0] = numpy.sum(x10 * x185 * x212)
    result[1, 12, 1] = numpy.sum(x191 * x212)
    result[1, 12, 2] = numpy.sum(x115 * x185 * x213)
    result[1, 13, 0] = numpy.sum(x10 * x173 * x207)
    result[1, 13, 1] = numpy.sum(x179 * x207)
    result[1, 13, 2] = numpy.sum(x136 * x173 * x206)
    result[1, 14, 0] = numpy.sum(x10 * x160 * x215)
    result[1, 14, 1] = numpy.sum(x167 * x215)
    result[1, 14, 2] = numpy.sum(x153 * x160 * x214)
    result[2, 0, 0] = numpy.sum(x157 * x219)
    result[2, 0, 1] = numpy.sum(x168 * x219 * x60)
    result[2, 0, 2] = numpy.sum(x151 * x168 * x225)
    result[2, 1, 0] = numpy.sum(x218 * x226 * x65)
    result[2, 1, 1] = numpy.sum(x155 * x227 * x76)
    result[2, 1, 2] = numpy.sum(x225 * x228 * x65)
    result[2, 2, 0] = numpy.sum(x226 * x233)
    result[2, 2, 1] = numpy.sum(x228 * x233 * x60)
    result[2, 2, 2] = numpy.sum(x228 * x238)
    result[2, 3, 0] = numpy.sum(x239 * x29 * x92)
    result[2, 3, 1] = numpy.sum(x154 * x239 * x99)
    result[2, 3, 2] = numpy.sum(x145 * x154 * x225 * x92)
    result[2, 4, 0] = numpy.sum(x129 * x233 * x29)
    result[2, 4, 1] = numpy.sum(x103 * x154 * x240)
    result[2, 4, 2] = numpy.sum(x129 * x154 * x238)
    result[2, 5, 0] = numpy.sum(x246 * x29)
    result[2, 5, 1] = numpy.sum(x154 * x246 * x60)
    result[2, 5, 2] = numpy.sum(x154 * x245 * x250)
    result[2, 6, 0] = numpy.sum(x117 * x227 * x27)
    result[2, 6, 1] = numpy.sum(x218 * x251 * x3)
    result[2, 6, 2] = numpy.sum(x225 * x252 * x3)
    result[2, 7, 0] = numpy.sum(x125 * x240 * x27)
    result[2, 7, 1] = numpy.sum(x204 * x233 * x99)
    result[2, 7, 2] = numpy.sum(x125 * x205 * x238)
    result[2, 8, 0] = numpy.sum(x129 * x244 * x27)
    result[2, 8, 1] = numpy.sum(x103 * x205 * x244)
    result[2, 8, 2] = numpy.sum(52.25578117937447 * x250 * x254 * x65)
    result[2, 9, 0] = numpy.sum(x256 * x27 * x89)
    result[2, 9, 1] = numpy.sum(x258 * x3 * x57 * x60)
    result[2, 9, 2] = numpy.sum(x254 * x261)
    result[2, 10, 0] = numpy.sum(x10 * x138 * x262)
    result[2, 10, 1] = numpy.sum(x142 * x262)
    result[2, 10, 2] = numpy.sum(x138 * x214 * x225)
    result[2, 11, 0] = numpy.sum(x10 * x233 * x252)
    result[2, 11, 1] = numpy.sum(x233 * x251)
    result[2, 11, 2] = numpy.sum(x238 * x252)
    result[2, 12, 0] = numpy.sum(x10 * x244 * x263)
    result[2, 12, 1] = numpy.sum(x213 * x244 * x99)
    result[2, 12, 2] = numpy.sum(x250 * x263)
    result[2, 13, 0] = numpy.sum(x10 * x258 * x66)
    result[2, 13, 1] = numpy.sum(x257 * x78)
    result[2, 13, 2] = numpy.sum(x253 * x261 * x65)
    result[2, 14, 0] = numpy.sum(x10 * x266)
    result[2, 14, 1] = numpy.sum(x266 * x60)
    result[2, 14, 2] = numpy.sum(
        x265
        * (
            x0
            * (
                x133 * (x234 + x259)
                + 3.0 * x248
                + 3.0 * x249
                + x256
                + x30 * (x115 + 2.0 * x221 + x247 + x264)
            )
            + x260 * x80
        )
    )
    return result


def diag_quadrupole3d_42(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gd) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 6), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = numpy.sqrt(x1)
    x7 = 1.772453850905516 * x6
    x8 = x5 * x7
    x9 = x3 * x8
    x10 = -x2 - R[0]
    x11 = x10 * x8
    x12 = x0 * (x11 + x9)
    x13 = -x2 - A[0]
    x14 = x0 * x8
    x15 = x10 * x9
    x16 = x14 + x15
    x17 = x13 * x16
    x18 = x12 + x17
    x19 = x18 * x3
    x20 = 2.0 * x19
    x21 = x3**2 * x8
    x22 = 3.0 * x14
    x23 = 2.0 * x13
    x24 = x22 + x23 * x9
    x25 = x0 * (x21 + x24)
    x26 = x13 * x8
    x27 = x0 * (x26 + x9)
    x28 = x26 * x3
    x29 = x14 + x28
    x30 = x29 * x3
    x31 = x27 + x30
    x32 = x13 * x31
    x33 = x25 + x32
    x34 = x13 * x18
    x35 = x10 * x26
    x36 = x0 * (x15 + x22 + x28 + x35)
    x37 = 4.0 * x36
    x38 = 2.0 * x34 + x37
    x39 = 2.0 * x0
    x40 = x10 * x18
    x41 = 2.0 * x40
    x42 = x11 * x23
    x43 = x10**2 * x8
    x44 = x22 + x43
    x45 = x0 * (x42 + x44)
    x46 = x0 * (x11 + x26)
    x47 = x14 + x35
    x48 = x10 * x47
    x49 = x46 + x48
    x50 = x13 * x49
    x51 = x45 + x50
    x52 = x0 * (x38 + x41 + x51)
    x53 = 2.0 * x17
    x54 = 3.0 * x12 + x53
    x55 = x0 * (x16 * x3 + x31 + x54)
    x56 = x13 * (x19 + x36)
    x57 = x10 * x16
    x58 = x0 * (x49 + x54 + x57)
    x59 = x36 + x40
    x60 = x13 * x59
    x61 = x58 + x60
    x62 = x13 * x61
    x63 = x12 + x57
    x64 = x0 * (2.0 * x15 + x44) + x3 * x63
    x65 = x0 * (x20 + x37 + x41 + x64)
    x66 = x3 * x59
    x67 = x58 + x66
    x68 = x13 * x67
    x69 = x65 + x68
    x70 = 2.0 * x0 * (x55 + x56 + 2.0 * x58 + x60 + x66) + x13 * x69
    x71 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x72 = da * db * numpy.sqrt(ax**5.5) * numpy.sqrt(bx**3.5)
    x73 = x71 * x72
    x74 = 10.19928413298683 * x73
    x75 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x76 = 0.5641895835477563 * x1
    x77 = x75 * x76
    x78 = -x1 * (ax * A[1] + bx * B[1])
    x79 = -x78 - B[1]
    x80 = 17.66567831916427 * x79
    x81 = x13 * x47
    x82 = x46 + x81
    x83 = x13 * x29
    x84 = x27 + x83
    x85 = 2.0 * x0 * (2.0 * x46 + x48 + x81) + x13 * x51
    x86 = x52 + x62
    x87 = x73 * x77
    x88 = x87 * (
        x0
        * (
            x23 * (x34 + x36)
            + x39 * (2.0 * x12 + x53 + x82 + x84)
            + 3.0 * x58
            + 3.0 * x60
            + x85
        )
        + x13 * x86
    )
    x89 = -x1 * (ax * A[2] + bx * B[2])
    x90 = -x89 - B[2]
    x91 = 17.66567831916427 * x90
    x92 = x13**2 * x8
    x93 = x0 * (x23 * x82 + x39 * (x22 + x42 + x92) + 3.0 * x45 + 3.0 * x50) + x13 * x85
    x94 = x73 * x93
    x95 = x7 * x75
    x96 = x79**2 * x95
    x97 = x0 * x95
    x98 = x96 + x97
    x99 = 10.19928413298683 * x98
    x100 = 0.3183098861837907 * x6
    x101 = x100 * x99
    x102 = x77 * x80
    x103 = x7 * x71
    x104 = x103 * x90**2
    x105 = x0 * x103
    x106 = x104 + x105
    x107 = 10.19928413298683 * x106
    x108 = x100 * x72
    x109 = x108 * x75
    x110 = -x78 - A[1]
    x111 = 26.98476936677017 * x110
    x112 = x70 * x87
    x113 = x110 * x95
    x114 = x113 * x79
    x115 = x114 + x97
    x116 = 46.73899157377418 * x115
    x117 = x100 * x73
    x118 = x116 * x117
    x119 = 46.73899157377418 * x90
    x120 = x86 * x87
    x121 = x79 * x95
    x122 = x0 * (x113 + x121)
    x123 = x115 * x79
    x124 = x122 + x123
    x125 = 26.98476936677017 * x117
    x126 = x125 * x85
    x127 = x109 * x85
    x128 = -x89 - A[2]
    x129 = 26.98476936677017 * x128
    x130 = x103 * x128
    x131 = x130 * x90
    x132 = x105 + x131
    x133 = 46.73899157377418 * x132
    x134 = x109 * x133
    x135 = x103 * x90
    x136 = x0 * (x130 + x135)
    x137 = x132 * x90
    x138 = x136 + x137
    x139 = 26.98476936677017 * x138
    x140 = x110**2 * x95
    x141 = x140 + x97
    x142 = 34.83718745291631 * x141
    x143 = x110 * x115
    x144 = x122 + x143
    x145 = 60.33977866125205 * x144
    x146 = x117 * x61
    x147 = 60.33977866125205 * x90
    x148 = 3.0 * x97
    x149 = 2.0 * x110
    x150 = x121 * x149 + x148
    x151 = x0 * (x150 + x96)
    x152 = x110 * x124
    x153 = x151 + x152
    x154 = 34.83718745291631 * x117
    x155 = x117 * x51
    x156 = 0.1795871221251666 * x72
    x157 = x156 * x51
    x158 = 60.33977866125206 * x128
    x159 = 104.5115623587489 * x115
    x160 = 104.5115623587489 * x132
    x161 = x109 * x61
    x162 = x109 * x51
    x163 = 60.33977866125206 * x110
    x164 = x103 * x128**2
    x165 = x105 + x164
    x166 = 34.83718745291631 * x165
    x167 = 60.33977866125205 * x165
    x168 = x128 * x132
    x169 = x136 + x168
    x170 = 60.33977866125205 * x169
    x171 = 3.0 * x105
    x172 = 2.0 * x128
    x173 = x135 * x172 + x171
    x174 = x0 * (x104 + x173)
    x175 = x128 * x138
    x176 = x174 + x175
    x177 = 34.83718745291631 * x176
    x178 = x110 * x141 + x113 * x39
    x179 = 26.98476936677017 * x178
    x180 = x117 * x67
    x181 = x0 * (x140 + x150)
    x182 = x110 * x144
    x183 = x181 + x182
    x184 = 46.73899157377418 * x59
    x185 = x117 * x184
    x186 = 2.0 * x0 * (2.0 * x122 + x123 + x143) + x110 * x153
    x187 = x125 * x186
    x188 = x117 * x49
    x189 = x156 * x49
    x190 = 104.5115623587489 * x59
    x191 = x117 * x128
    x192 = x156 * x59
    x193 = 60.33977866125206 * x189
    x194 = x109 * x67
    x195 = x109 * x110
    x196 = x109 * x49
    x197 = x128 * x165 + x130 * x39
    x198 = 26.98476936677017 * x197
    x199 = x109 * x184
    x200 = x0 * (x164 + x173)
    x201 = x128 * x169
    x202 = x200 + x201
    x203 = 46.73899157377418 * x202
    x204 = 2.0 * x0 * (2.0 * x136 + x137 + x168) + x128 * x176
    x205 = 26.98476936677017 * x109
    x206 = x204 * x205
    x207 = x0 * (3.0 * x140 + x148) + x110 * x178
    x208 = 10.19928413298683 * x207
    x209 = x117 * x64
    x210 = x0 * (3.0 * x122 + 3.0 * x143 + x178) + x110 * x183
    x211 = 17.66567831916427 * x63
    x212 = x117 * x211
    x213 = x14 + x43
    x214 = x0 * (3.0 * x151 + 3.0 * x152 + 2.0 * x181 + 2.0 * x182) + x110 * x186
    x215 = x100 * x74
    x216 = x156 * x213
    x217 = x156 * x63
    x218 = x156 * x165
    x219 = 60.33977866125205 * x217
    x220 = x109 * x64
    x221 = x0 * (3.0 * x164 + x171) + x128 * x197
    x222 = 10.19928413298683 * x221
    x223 = x109 * x211
    x224 = x0 * (3.0 * x136 + 3.0 * x168 + x197) + x128 * x202
    x225 = x109 * x213
    x226 = (
        10.19928413298683 * x0 * (3.0 * x174 + 3.0 * x175 + 2.0 * x200 + 2.0 * x201)
        + 10.19928413298683 * x128 * x204
    )
    x227 = -x78 - R[1]
    x228 = x227**2 * x95
    x229 = x228 + x97
    x230 = x0 * (x24 + x92)
    x231 = x13 * x84
    x232 = 2.0 * x0 * (2.0 * x27 + x30 + x83) + x13 * x33
    x233 = x0 * (2.0 * x230 + 2.0 * x231 + 3.0 * x25 + 3.0 * x32) + x13 * x232
    x234 = x227 * x95
    x235 = x0 * (x121 + x234)
    x236 = x121 * x227
    x237 = x236 + x97
    x238 = x227 * x237
    x239 = x235 + x238
    x240 = 17.66567831916427 * x239
    x241 = x14 + x92
    x242 = x13 * x241 + x26 * x39
    x243 = x230 + x231
    x244 = x0 * (x242 + 3.0 * x27 + 3.0 * x83) + x13 * x243
    x245 = x117 * x244
    x246 = x0 * (x22 + 3.0 * x92) + x13 * x242
    x247 = x148 + x228
    x248 = x0 * (2.0 * x236 + x247) + x239 * x79
    x249 = x117 * x90
    x250 = x156 * x229
    x251 = x0 * (x113 + x234)
    x252 = x113 * x227
    x253 = x252 + x97
    x254 = x227 * x253
    x255 = x251 + x254
    x256 = 26.98476936677017 * x255
    x257 = x0 * (x114 + x148 + x236 + x252)
    x258 = x110 * x237
    x259 = x235 + x258
    x260 = x227 * x259
    x261 = x257 + x260
    x262 = 46.73899157377418 * x261
    x263 = x117 * x243
    x264 = 2.0 * x258
    x265 = 3.0 * x235 + x264
    x266 = x0 * (x238 + x255 + x265)
    x267 = x261 * x79
    x268 = x266 + x267
    x269 = x125 * x242
    x270 = x156 * x242
    x271 = 46.73899157377418 * x239
    x272 = x149 * x234
    x273 = x0 * (x247 + x272)
    x274 = x110 * x255
    x275 = x273 + x274
    x276 = 34.83718745291631 * x275
    x277 = x117 * x33
    x278 = x110 * x261
    x279 = x266 + x278
    x280 = 60.33977866125205 * x84
    x281 = x117 * x280
    x282 = x259 * x79
    x283 = 2.0 * x282
    x284 = 4.0 * x257
    x285 = 2.0 * x260 + x284
    x286 = x0 * (x248 + x283 + x285)
    x287 = x110 * x268
    x288 = x286 + x287
    x289 = x117 * x241
    x290 = x156 * x241
    x291 = 60.33977866125206 * x255
    x292 = 104.5115623587489 * x261
    x293 = x156 * x160
    x294 = x110 * x253
    x295 = 2.0 * x0 * (2.0 * x251 + x254 + x294) + x110 * x275
    x296 = x125 * x295
    x297 = x110 * x259
    x298 = 2.0 * x297
    x299 = x0 * (x275 + x285 + x298)
    x300 = x110 * x279
    x301 = x299 + x300
    x302 = 46.73899157377418 * x29
    x303 = x117 * x302
    x304 = 26.98476936677017 * x13
    x305 = x0 * (x124 + x237 * x79 + x265)
    x306 = x110 * (x257 + x282)
    x307 = 2.0 * x0 * (2.0 * x266 + x267 + x278 + x305 + x306) + x110 * x288
    x308 = x5 * x76
    x309 = x308 * x73
    x310 = x307 * x309
    x311 = x13 * x309
    x312 = x108 * x5
    x313 = x295 * x312
    x314 = 104.5115623587489 * x29
    x315 = x279 * x312
    x316 = 60.33977866125206 * x13
    x317 = x275 * x312
    x318 = x156 * x255
    x319 = x268 * x312
    x320 = x13 * x312
    x321 = x176 * x312
    x322 = x156 * x302
    x323 = x248 * x312
    x324 = x202 * x312
    x325 = x204 * x312
    x326 = x14 + x21
    x327 = x251 + x294
    x328 = (
        x0 * (x149 * x327 + 3.0 * x273 + 3.0 * x274 + x39 * (x140 + x148 + x272))
        + x110 * x295
    )
    x329 = x309 * (
        x0
        * (
            x149 * (x257 + x297)
            + 3.0 * x266
            + 3.0 * x278
            + x295
            + x39 * (x144 + 2.0 * x235 + x264 + x327)
        )
        + x110 * x301
    )
    x330 = 17.66567831916427 * x3
    x331 = 46.73899157377418 * x3
    x332 = x133 * x312
    x333 = x156 * x326
    x334 = x3 * x312
    x335 = x240 * x312
    x336 = x229 * x312
    x337 = -x89 - R[2]
    x338 = x103 * x337**2
    x339 = x105 + x338
    x340 = 10.19928413298683 * x109
    x341 = x109 * x244
    x342 = x103 * x337
    x343 = x0 * (x135 + x342)
    x344 = x135 * x337
    x345 = x105 + x344
    x346 = x337 * x345
    x347 = x343 + x346
    x348 = 17.66567831916427 * x347
    x349 = x156 * x339
    x350 = x109 * x79
    x351 = x171 + x338
    x352 = x0 * (2.0 * x344 + x351) + x347 * x90
    x353 = x205 * x232
    x354 = x109 * x243
    x355 = 46.73899157377418 * x354
    x356 = 26.98476936677017 * x270
    x357 = x205 * x242
    x358 = x0 * (x130 + x342)
    x359 = x130 * x337
    x360 = x105 + x359
    x361 = x337 * x360
    x362 = x358 + x361
    x363 = x0 * (x131 + x171 + x344 + x359)
    x364 = x128 * x345
    x365 = x343 + x364
    x366 = x337 * x365
    x367 = x363 + x366
    x368 = 46.73899157377418 * x367
    x369 = 2.0 * x364
    x370 = 3.0 * x343 + x369
    x371 = x0 * (x346 + x362 + x370)
    x372 = x367 * x90
    x373 = x371 + x372
    x374 = x141 * x156
    x375 = 34.83718745291631 * x290
    x376 = 60.33977866125206 * x362
    x377 = x156 * x362
    x378 = 104.5115623587489 * x367
    x379 = x109 * x163
    x380 = x172 * x342
    x381 = x0 * (x351 + x380)
    x382 = x128 * x362
    x383 = x381 + x382
    x384 = 34.83718745291631 * x109
    x385 = x109 * x280
    x386 = x128 * x367
    x387 = x371 + x386
    x388 = x365 * x90
    x389 = 2.0 * x388
    x390 = 4.0 * x363
    x391 = 2.0 * x366 + x390
    x392 = x0 * (x352 + x389 + x391)
    x393 = x128 * x373
    x394 = x392 + x393
    x395 = x312 * x339
    x396 = x183 * x312
    x397 = 46.73899157377418 * x13
    x398 = x312 * x352
    x399 = x153 * x312
    x400 = x312 * x373
    x401 = x312 * x387
    x402 = x5 * x72
    x403 = x402 * x77
    x404 = x128 * x360
    x405 = 2.0 * x0 * (2.0 * x358 + x361 + x404) + x128 * x383
    x406 = x205 * x405
    x407 = x109 * x302
    x408 = x128 * x365
    x409 = 2.0 * x408
    x410 = x0 * (x383 + x391 + x409)
    x411 = x128 * x387
    x412 = x410 + x411
    x413 = 26.98476936677017 * x312
    x414 = x405 * x413
    x415 = x403 * x412
    x416 = x0 * (x138 + x345 * x90 + x370)
    x417 = x128 * (x363 + x388)
    x418 = 2.0 * x0 * (2.0 * x371 + x372 + x386 + x416 + x417) + x128 * x394
    x419 = x403 * x418
    x420 = x312 * x348
    x421 = x116 * x312
    x422 = x358 + x404
    x423 = (
        x0 * (x172 * x422 + 3.0 * x381 + 3.0 * x382 + x39 * (x164 + x171 + x380))
        + x128 * x405
    )
    x424 = x402 * x423
    x425 = x403 * (
        x0
        * (
            x172 * (x363 + x408)
            + 3.0 * x371
            + 3.0 * x386
            + x39 * (x169 + 2.0 * x343 + x369 + x422)
            + x405
        )
        + x128 * x412
    )

    # 270 item(s)
    result[0, 0, 0] = numpy.sum(
        x74
        * x77
        * (
            x0
            * (
                x23 * (x55 + x56)
                + x39 * (x20 + x33 + x38)
                + 2.0 * x52
                + 2.0 * x62
                + 3.0 * x65
                + 3.0 * x68
            )
            + x13 * x70
        )
    )
    result[0, 0, 1] = numpy.sum(x80 * x88)
    result[0, 0, 2] = numpy.sum(x88 * x91)
    result[0, 0, 3] = numpy.sum(x101 * x94)
    result[0, 0, 4] = numpy.sum(x102 * x90 * x94)
    result[0, 0, 5] = numpy.sum(x107 * x109 * x93)
    result[0, 1, 0] = numpy.sum(x111 * x112)
    result[0, 1, 1] = numpy.sum(x118 * x86)
    result[0, 1, 2] = numpy.sum(x110 * x119 * x120)
    result[0, 1, 3] = numpy.sum(x124 * x126)
    result[0, 1, 4] = numpy.sum(x118 * x85 * x90)
    result[0, 1, 5] = numpy.sum(x106 * x111 * x127)
    result[0, 2, 0] = numpy.sum(x112 * x129)
    result[0, 2, 1] = numpy.sum(46.73899157377418 * x120 * x128 * x79)
    result[0, 2, 2] = numpy.sum(x134 * x86)
    result[0, 2, 3] = numpy.sum(x126 * x128 * x98)
    result[0, 2, 4] = numpy.sum(x134 * x79 * x85)
    result[0, 2, 5] = numpy.sum(x127 * x139)
    result[0, 3, 0] = numpy.sum(x117 * x142 * x69)
    result[0, 3, 1] = numpy.sum(x145 * x146)
    result[0, 3, 2] = numpy.sum(x141 * x146 * x147)
    result[0, 3, 3] = numpy.sum(x153 * x154 * x51)
    result[0, 3, 4] = numpy.sum(x145 * x155 * x90)
    result[0, 3, 5] = numpy.sum(x106 * x142 * x157)
    result[0, 4, 0] = numpy.sum(x110 * x158 * x69 * x87)
    result[0, 4, 1] = numpy.sum(x128 * x146 * x159)
    result[0, 4, 2] = numpy.sum(x110 * x160 * x161)
    result[0, 4, 3] = numpy.sum(x124 * x155 * x158)
    result[0, 4, 4] = numpy.sum(x115 * x157 * x160)
    result[0, 4, 5] = numpy.sum(x138 * x162 * x163)
    result[0, 5, 0] = numpy.sum(x109 * x166 * x69)
    result[0, 5, 1] = numpy.sum(x161 * x167 * x79)
    result[0, 5, 2] = numpy.sum(x161 * x170)
    result[0, 5, 3] = numpy.sum(x157 * x166 * x98)
    result[0, 5, 4] = numpy.sum(x162 * x170 * x79)
    result[0, 5, 5] = numpy.sum(x162 * x177)
    result[0, 6, 0] = numpy.sum(x179 * x180)
    result[0, 6, 1] = numpy.sum(x183 * x185)
    result[0, 6, 2] = numpy.sum(x178 * x185 * x90)
    result[0, 6, 3] = numpy.sum(x187 * x49)
    result[0, 6, 4] = numpy.sum(x119 * x183 * x188)
    result[0, 6, 5] = numpy.sum(x106 * x179 * x189)
    result[0, 7, 0] = numpy.sum(x141 * x158 * x180)
    result[0, 7, 1] = numpy.sum(x144 * x190 * x191)
    result[0, 7, 2] = numpy.sum(x141 * x160 * x192)
    result[0, 7, 3] = numpy.sum(x153 * x158 * x188)
    result[0, 7, 4] = numpy.sum(x144 * x160 * x189)
    result[0, 7, 5] = numpy.sum(x138 * x141 * x193)
    result[0, 8, 0] = numpy.sum(x163 * x165 * x194)
    result[0, 8, 1] = numpy.sum(x159 * x165 * x192)
    result[0, 8, 2] = numpy.sum(x169 * x190 * x195)
    result[0, 8, 3] = numpy.sum(x124 * x165 * x193)
    result[0, 8, 4] = numpy.sum(x159 * x169 * x189)
    result[0, 8, 5] = numpy.sum(x163 * x176 * x196)
    result[0, 9, 0] = numpy.sum(x194 * x198)
    result[0, 9, 1] = numpy.sum(x197 * x199 * x79)
    result[0, 9, 2] = numpy.sum(x199 * x202)
    result[0, 9, 3] = numpy.sum(x189 * x198 * x98)
    result[0, 9, 4] = numpy.sum(x196 * x203 * x79)
    result[0, 9, 5] = numpy.sum(x206 * x49)
    result[0, 10, 0] = numpy.sum(x208 * x209)
    result[0, 10, 1] = numpy.sum(x210 * x212)
    result[0, 10, 2] = numpy.sum(x207 * x212 * x90)
    result[0, 10, 3] = numpy.sum(x213 * x214 * x215)
    result[0, 10, 4] = numpy.sum(x117 * x210 * x213 * x91)
    result[0, 10, 5] = numpy.sum(x107 * x207 * x216)
    result[0, 11, 0] = numpy.sum(x128 * x179 * x209)
    result[0, 11, 1] = numpy.sum(46.73899157377418 * x183 * x191 * x63)
    result[0, 11, 2] = numpy.sum(x133 * x178 * x217)
    result[0, 11, 3] = numpy.sum(x128 * x187 * x213)
    result[0, 11, 4] = numpy.sum(x133 * x183 * x216)
    result[0, 11, 5] = numpy.sum(x138 * x179 * x216)
    result[0, 12, 0] = numpy.sum(x142 * x218 * x64)
    result[0, 12, 1] = numpy.sum(x144 * x165 * x219)
    result[0, 12, 2] = numpy.sum(x141 * x169 * x219)
    result[0, 12, 3] = numpy.sum(x153 * x166 * x216)
    result[0, 12, 4] = numpy.sum(x144 * x170 * x216)
    result[0, 12, 5] = numpy.sum(x142 * x176 * x216)
    result[0, 13, 0] = numpy.sum(x110 * x198 * x220)
    result[0, 13, 1] = numpy.sum(x116 * x197 * x217)
    result[0, 13, 2] = numpy.sum(x195 * x203 * x63)
    result[0, 13, 3] = numpy.sum(x124 * x198 * x216)
    result[0, 13, 4] = numpy.sum(x116 * x202 * x216)
    result[0, 13, 5] = numpy.sum(x110 * x206 * x213)
    result[0, 14, 0] = numpy.sum(x220 * x222)
    result[0, 14, 1] = numpy.sum(x221 * x223 * x79)
    result[0, 14, 2] = numpy.sum(x223 * x224)
    result[0, 14, 3] = numpy.sum(x216 * x222 * x98)
    result[0, 14, 4] = numpy.sum(x224 * x225 * x80)
    result[0, 14, 5] = numpy.sum(x225 * x226)
    result[1, 0, 0] = numpy.sum(x215 * x229 * x233)
    result[1, 0, 1] = numpy.sum(x240 * x245)
    result[1, 0, 2] = numpy.sum(x229 * x245 * x91)
    result[1, 0, 3] = numpy.sum(x215 * x246 * x248)
    result[1, 0, 4] = numpy.sum(x240 * x246 * x249)
    result[1, 0, 5] = numpy.sum(x107 * x246 * x250)
    result[1, 1, 0] = numpy.sum(x117 * x232 * x256)
    result[1, 1, 1] = numpy.sum(x262 * x263)
    result[1, 1, 2] = numpy.sum(x119 * x255 * x263)
    result[1, 1, 3] = numpy.sum(x268 * x269)
    result[1, 1, 4] = numpy.sum(x242 * x249 * x262)
    result[1, 1, 5] = numpy.sum(x106 * x256 * x270)
    result[1, 2, 0] = numpy.sum(x125 * x128 * x229 * x232)
    result[1, 2, 1] = numpy.sum(x128 * x263 * x271)
    result[1, 2, 2] = numpy.sum(x133 * x243 * x250)
    result[1, 2, 3] = numpy.sum(x128 * x248 * x269)
    result[1, 2, 4] = numpy.sum(x133 * x239 * x270)
    result[1, 2, 5] = numpy.sum(x139 * x242 * x250)
    result[1, 3, 0] = numpy.sum(x276 * x277)
    result[1, 3, 1] = numpy.sum(x279 * x281)
    result[1, 3, 2] = numpy.sum(x275 * x281 * x90)
    result[1, 3, 3] = numpy.sum(x154 * x241 * x288)
    result[1, 3, 4] = numpy.sum(x147 * x279 * x289)
    result[1, 3, 5] = numpy.sum(x106 * x276 * x290)
    result[1, 4, 0] = numpy.sum(x128 * x277 * x291)
    result[1, 4, 1] = numpy.sum(x191 * x292 * x84)
    result[1, 4, 2] = numpy.sum(x255 * x293 * x84)
    result[1, 4, 3] = numpy.sum(x158 * x268 * x289)
    result[1, 4, 4] = numpy.sum(x160 * x261 * x290)
    result[1, 4, 5] = numpy.sum(x138 * x290 * x291)
    result[1, 5, 0] = numpy.sum(x166 * x250 * x33)
    result[1, 5, 1] = numpy.sum(x218 * x239 * x280)
    result[1, 5, 2] = numpy.sum(x170 * x250 * x84)
    result[1, 5, 3] = numpy.sum(x166 * x248 * x290)
    result[1, 5, 4] = numpy.sum(x170 * x239 * x290)
    result[1, 5, 5] = numpy.sum(x177 * x241 * x250)
    result[1, 6, 0] = numpy.sum(x296 * x31)
    result[1, 6, 1] = numpy.sum(x301 * x303)
    result[1, 6, 2] = numpy.sum(x295 * x303 * x90)
    result[1, 6, 3] = numpy.sum(x304 * x310)
    result[1, 6, 4] = numpy.sum(x119 * x301 * x311)
    result[1, 6, 5] = numpy.sum(x106 * x304 * x313)
    result[1, 7, 0] = numpy.sum(x117 * x158 * x275 * x31)
    result[1, 7, 1] = numpy.sum(x191 * x279 * x314)
    result[1, 7, 2] = numpy.sum(x275 * x29 * x293)
    result[1, 7, 3] = numpy.sum(x158 * x288 * x311)
    result[1, 7, 4] = numpy.sum(x13 * x160 * x315)
    result[1, 7, 5] = numpy.sum(x138 * x316 * x317)
    result[1, 8, 0] = numpy.sum(x218 * x291 * x31)
    result[1, 8, 1] = numpy.sum(x218 * x261 * x314)
    result[1, 8, 2] = numpy.sum(x169 * x314 * x318)
    result[1, 8, 3] = numpy.sum(x165 * x316 * x319)
    result[1, 8, 4] = numpy.sum(x169 * x292 * x320)
    result[1, 8, 5] = numpy.sum(x13 * x291 * x321)
    result[1, 9, 0] = numpy.sum(x198 * x250 * x31)
    result[1, 9, 1] = numpy.sum(x197 * x239 * x322)
    result[1, 9, 2] = numpy.sum(x202 * x250 * x302)
    result[1, 9, 3] = numpy.sum(x13 * x198 * x323)
    result[1, 9, 4] = numpy.sum(x13 * x271 * x324)
    result[1, 9, 5] = numpy.sum(x229 * x304 * x325)
    result[1, 10, 0] = numpy.sum(x215 * x326 * x328)
    result[1, 10, 1] = numpy.sum(x329 * x330)
    result[1, 10, 2] = numpy.sum(x3 * x309 * x328 * x91)
    result[1, 10, 3] = numpy.sum(
        x308
        * x74
        * (
            x0
            * (
                x149 * (x305 + x306)
                + 3.0 * x286
                + 3.0 * x287
                + 2.0 * x299
                + 2.0 * x300
                + x39 * (x153 + x283 + x284 + x298)
            )
            + x110 * x307
        )
    )
    result[1, 10, 4] = numpy.sum(x329 * x91)
    result[1, 10, 5] = numpy.sum(x107 * x312 * x328)
    result[1, 11, 0] = numpy.sum(x128 * x296 * x326)
    result[1, 11, 1] = numpy.sum(x128 * x301 * x309 * x331)
    result[1, 11, 2] = numpy.sum(x295 * x3 * x332)
    result[1, 11, 3] = numpy.sum(x129 * x310)
    result[1, 11, 4] = numpy.sum(x301 * x332)
    result[1, 11, 5] = numpy.sum(x139 * x313)
    result[1, 12, 0] = numpy.sum(x166 * x275 * x333)
    result[1, 12, 1] = numpy.sum(x167 * x3 * x315)
    result[1, 12, 2] = numpy.sum(x170 * x3 * x317)
    result[1, 12, 3] = numpy.sum(x166 * x288 * x312)
    result[1, 12, 4] = numpy.sum(x170 * x315)
    result[1, 12, 5] = numpy.sum(x276 * x321)
    result[1, 13, 0] = numpy.sum(x198 * x318 * x326)
    result[1, 13, 1] = numpy.sum(x197 * x262 * x334)
    result[1, 13, 2] = numpy.sum(x255 * x324 * x331)
    result[1, 13, 3] = numpy.sum(x198 * x319)
    result[1, 13, 4] = numpy.sum(x262 * x324)
    result[1, 13, 5] = numpy.sum(x256 * x325)
    result[1, 14, 0] = numpy.sum(x222 * x250 * x326)
    result[1, 14, 1] = numpy.sum(x221 * x3 * x335)
    result[1, 14, 2] = numpy.sum(x224 * x330 * x336)
    result[1, 14, 3] = numpy.sum(x222 * x323)
    result[1, 14, 4] = numpy.sum(x224 * x335)
    result[1, 14, 5] = numpy.sum(x226 * x336)
    result[2, 0, 0] = numpy.sum(x233 * x339 * x340)
    result[2, 0, 1] = numpy.sum(x339 * x341 * x80)
    result[2, 0, 2] = numpy.sum(x341 * x348)
    result[2, 0, 3] = numpy.sum(x246 * x349 * x99)
    result[2, 0, 4] = numpy.sum(x246 * x348 * x350)
    result[2, 0, 5] = numpy.sum(x246 * x340 * x352)
    result[2, 1, 0] = numpy.sum(x110 * x339 * x353)
    result[2, 1, 1] = numpy.sum(x116 * x243 * x349)
    result[2, 1, 2] = numpy.sum(x110 * x347 * x355)
    result[2, 1, 3] = numpy.sum(x124 * x339 * x356)
    result[2, 1, 4] = numpy.sum(x116 * x270 * x347)
    result[2, 1, 5] = numpy.sum(x110 * x352 * x357)
    result[2, 2, 0] = numpy.sum(x353 * x362)
    result[2, 2, 1] = numpy.sum(x355 * x362 * x79)
    result[2, 2, 2] = numpy.sum(x354 * x368)
    result[2, 2, 3] = numpy.sum(x356 * x362 * x98)
    result[2, 2, 4] = numpy.sum(x242 * x350 * x368)
    result[2, 2, 5] = numpy.sum(x357 * x373)
    result[2, 3, 0] = numpy.sum(x142 * x33 * x349)
    result[2, 3, 1] = numpy.sum(x144 * x280 * x349)
    result[2, 3, 2] = numpy.sum(x280 * x347 * x374)
    result[2, 3, 3] = numpy.sum(x153 * x339 * x375)
    result[2, 3, 4] = numpy.sum(x145 * x290 * x347)
    result[2, 3, 5] = numpy.sum(x142 * x290 * x352)
    result[2, 4, 0] = numpy.sum(x195 * x33 * x376)
    result[2, 4, 1] = numpy.sum(x159 * x377 * x84)
    result[2, 4, 2] = numpy.sum(x195 * x378 * x84)
    result[2, 4, 3] = numpy.sum(x124 * x290 * x376)
    result[2, 4, 4] = numpy.sum(x159 * x290 * x367)
    result[2, 4, 5] = numpy.sum(x241 * x373 * x379)
    result[2, 5, 0] = numpy.sum(x33 * x383 * x384)
    result[2, 5, 1] = numpy.sum(x383 * x385 * x79)
    result[2, 5, 2] = numpy.sum(x385 * x387)
    result[2, 5, 3] = numpy.sum(x375 * x383 * x98)
    result[2, 5, 4] = numpy.sum(60.33977866125205 * x241 * x350 * x387)
    result[2, 5, 5] = numpy.sum(x241 * x384 * x394)
    result[2, 6, 0] = numpy.sum(x179 * x31 * x349)
    result[2, 6, 1] = numpy.sum(x183 * x322 * x339)
    result[2, 6, 2] = numpy.sum(x178 * x322 * x347)
    result[2, 6, 3] = numpy.sum(x186 * x304 * x395)
    result[2, 6, 4] = numpy.sum(x347 * x396 * x397)
    result[2, 6, 5] = numpy.sum(x13 * x179 * x398)
    result[2, 7, 0] = numpy.sum(x31 * x374 * x376)
    result[2, 7, 1] = numpy.sum(x144 * x314 * x377)
    result[2, 7, 2] = numpy.sum(x314 * x367 * x374)
    result[2, 7, 3] = numpy.sum(x13 * x376 * x399)
    result[2, 7, 4] = numpy.sum(x144 * x320 * x378)
    result[2, 7, 5] = numpy.sum(x141 * x316 * x400)
    result[2, 8, 0] = numpy.sum(x31 * x379 * x383)
    result[2, 8, 1] = numpy.sum(x156 * x159 * x29 * x383)
    result[2, 8, 2] = numpy.sum(x195 * x314 * x387)
    result[2, 8, 3] = numpy.sum(x124 * x312 * x316 * x383)
    result[2, 8, 4] = numpy.sum(x13 * x159 * x401)
    result[2, 8, 5] = numpy.sum(x13 * x163 * x394 * x403)
    result[2, 9, 0] = numpy.sum(x31 * x406)
    result[2, 9, 1] = numpy.sum(x405 * x407 * x79)
    result[2, 9, 2] = numpy.sum(x407 * x412)
    result[2, 9, 3] = numpy.sum(x13 * x414 * x98)
    result[2, 9, 4] = numpy.sum(x397 * x415 * x79)
    result[2, 9, 5] = numpy.sum(x304 * x419)
    result[2, 10, 0] = numpy.sum(x208 * x333 * x339)
    result[2, 10, 1] = numpy.sum(x210 * x330 * x395)
    result[2, 10, 2] = numpy.sum(x207 * x3 * x420)
    result[2, 10, 3] = numpy.sum(10.19928413298683 * x214 * x395)
    result[2, 10, 4] = numpy.sum(x210 * x420)
    result[2, 10, 5] = numpy.sum(x208 * x398)
    result[2, 11, 0] = numpy.sum(x179 * x333 * x362)
    result[2, 11, 1] = numpy.sum(x331 * x362 * x396)
    result[2, 11, 2] = numpy.sum(x178 * x334 * x368)
    result[2, 11, 3] = numpy.sum(x186 * x362 * x413)
    result[2, 11, 4] = numpy.sum(x368 * x396)
    result[2, 11, 5] = numpy.sum(x179 * x400)
    result[2, 12, 0] = numpy.sum(x142 * x333 * x383)
    result[2, 12, 1] = numpy.sum(x145 * x334 * x383)
    result[2, 12, 2] = numpy.sum(60.33977866125205 * x141 * x3 * x401)
    result[2, 12, 3] = numpy.sum(34.83718745291631 * x383 * x399)
    result[2, 12, 4] = numpy.sum(x145 * x401)
    result[2, 12, 5] = numpy.sum(x142 * x312 * x394)
    result[2, 13, 0] = numpy.sum(x110 * x326 * x406)
    result[2, 13, 1] = numpy.sum(x3 * x405 * x421)
    result[2, 13, 2] = numpy.sum(x110 * x331 * x415)
    result[2, 13, 3] = numpy.sum(x124 * x414)
    result[2, 13, 4] = numpy.sum(x412 * x421)
    result[2, 13, 5] = numpy.sum(x111 * x419)
    result[2, 14, 0] = numpy.sum(x326 * x340 * x423)
    result[2, 14, 1] = numpy.sum(x102 * x3 * x424)
    result[2, 14, 2] = numpy.sum(x330 * x425)
    result[2, 14, 3] = numpy.sum(x101 * x424)
    result[2, 14, 4] = numpy.sum(x425 * x80)
    result[2, 14, 5] = numpy.sum(
        10.19928413298683
        * x403
        * (
            x0
            * (
                x172 * (x416 + x417)
                + x39 * (x176 + x389 + x390 + x409)
                + 3.0 * x392
                + 3.0 * x393
                + 2.0 * x410
                + 2.0 * x411
            )
            + x128 * x418
        )
    )
    return result


def diag_quadrupole3d_43(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gf) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 10), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = ax * bx * x1
    x3 = numpy.exp(-x2 * (A[0] - B[0]) ** 2)
    x4 = numpy.sqrt(x1)
    x5 = 1.772453850905516 * x4
    x6 = x3 * x5
    x7 = x0 * x6
    x8 = 3.0 * x7
    x9 = -x1 * (ax * A[0] + bx * B[0])
    x10 = -x9 - B[0]
    x11 = -x9 - A[0]
    x12 = x11 * x6
    x13 = x10 * x12
    x14 = -x9 - R[0]
    x15 = x12 * x14
    x16 = x10 * x6
    x17 = x14 * x16
    x18 = x0 * (x13 + x15 + x17 + x8)
    x19 = x14 * x6
    x20 = x0 * (x16 + x19)
    x21 = x17 + x7
    x22 = x11 * x21
    x23 = x20 + x22
    x24 = x10 * x23
    x25 = x18 + x24
    x26 = 2.0 * x10
    x27 = x11 * x25
    x28 = x10 * x21
    x29 = x0 * (x12 + x16)
    x30 = x13 + x7
    x31 = x10 * x30
    x32 = x29 + x31
    x33 = 2.0 * x22
    x34 = 3.0 * x20 + x33
    x35 = x0 * (x28 + x32 + x34)
    x36 = x11 * x30
    x37 = 2.0 * x0 * (2.0 * x29 + x31 + x36)
    x38 = x10**2 * x6
    x39 = x12 * x26 + x8
    x40 = x0 * (x38 + x39)
    x41 = x11 * x32
    x42 = x40 + x41
    x43 = x10 * x42
    x44 = x37 + x43
    x45 = 2.0 * x0
    x46 = x11 * x23
    x47 = 2.0 * x46
    x48 = 4.0 * x18
    x49 = 2.0 * x24 + x48
    x50 = x0 * (x42 + x47 + x49)
    x51 = x27 + x35
    x52 = x10 * x51
    x53 = 2.0 * x11
    x54 = x14 * x23
    x55 = 2.0 * x54
    x56 = x14**2 * x6
    x57 = x56 + x8
    x58 = x14 * x21
    x59 = x20 + x58
    x60 = x0 * (x19 * x26 + x57) + x10 * x59
    x61 = x0 * (x49 + x55 + x60)
    x62 = x0 * (x12 + x19)
    x63 = x15 + x7
    x64 = x14 * x63
    x65 = x62 + x64
    x66 = x0 * (x34 + x58 + x65)
    x67 = x18 + x54
    x68 = x10 * x67
    x69 = x66 + x68
    x70 = x11 * x69
    x71 = x61 + x70
    x72 = x11 * x71
    x73 = x10 * x71
    x74 = x11 * x67
    x75 = 2.0 * x0 * (x27 + x35 + 2.0 * x66 + x68 + x74)
    x76 = x10 * x69
    x77 = 2.0 * x50 + 3.0 * x70
    x78 = x73 + x75
    x79 = x0 * (2.0 * x52 + 5.0 * x61 + 2.0 * x76 + x77) + x11 * x78
    x80 = numpy.exp(-x2 * (A[2] - B[2]) ** 2)
    x81 = da * db * numpy.sqrt(ax**5.5) * numpy.sqrt(bx**4.5)
    x82 = x80 * x81
    x83 = 9.122517057277419 * x82
    x84 = numpy.exp(-x2 * (A[1] - B[1]) ** 2)
    x85 = 0.5641895835477563 * x1
    x86 = x84 * x85
    x87 = -x1 * (ax * A[1] + bx * B[1])
    x88 = -x87 - B[1]
    x89 = 20.39856826597365 * x88
    x90 = x19 * x53
    x91 = x0 * (x57 + x90)
    x92 = x11 * x65
    x93 = x91 + x92
    x94 = x0 * (x47 + x48 + x55 + x93)
    x95 = x66 + x74
    x96 = x11 * x95
    x97 = x72 + x75
    x98 = x82 * x86
    x99 = x98 * (x0 * (x51 * x53 + 3.0 * x61 + x77 + 2.0 * x94 + 2.0 * x96) + x11 * x97)
    x100 = -x1 * (ax * A[2] + bx * B[2])
    x101 = -x100 - B[2]
    x102 = 20.39856826597365 * x101
    x103 = x11 * x63
    x104 = x103 + x62
    x105 = x29 + x36
    x106 = 2.0 * x0 * (x103 + 2.0 * x62 + x64) + x11 * x93
    x107 = x94 + x96
    x108 = (
        x0
        * (
            x106
            + x45 * (x104 + x105 + 2.0 * x20 + x33)
            + x53 * (x18 + x46)
            + 3.0 * x66
            + 3.0 * x74
        )
        + x107 * x11
    )
    x109 = x108 * x82
    x110 = x5 * x84
    x111 = x110 * x88**2
    x112 = x0 * x110
    x113 = x111 + x112
    x114 = 20.39856826597365 * x113
    x115 = 0.3183098861837907 * x4
    x116 = x114 * x115
    x117 = 35.33135663832854 * x88
    x118 = x5 * x80
    x119 = x101**2 * x118
    x120 = x0 * x118
    x121 = x119 + x120
    x122 = 20.39856826597365 * x115
    x123 = x81 * x84
    x124 = x122 * x123
    x125 = x121 * x124
    x126 = x110 * x88
    x127 = x113 * x88 + x126 * x45
    x128 = 9.122517057277419 * x127
    x129 = x11**2 * x6
    x130 = (
        x0 * (x104 * x53 + x45 * (x129 + x8 + x90) + 3.0 * x91 + 3.0 * x92) + x106 * x11
    )
    x131 = x115 * x130
    x132 = x101 * x82
    x133 = x101 * x118
    x134 = x101 * x121 + x133 * x45
    x135 = 9.122517057277419 * x134
    x136 = -x87 - A[1]
    x137 = 24.13591146450082 * x136
    x138 = x79 * x98
    x139 = x110 * x136
    x140 = x139 * x88
    x141 = x112 + x140
    x142 = 53.96953873354034 * x141
    x143 = x115 * x82
    x144 = 53.96953873354034 * x97
    x145 = x144 * x98
    x146 = x0 * (x126 + x139)
    x147 = x141 * x88
    x148 = x146 + x147
    x149 = 53.96953873354034 * x148
    x150 = x107 * x143
    x151 = 93.47798314754836 * x141
    x152 = x115 * x123
    x153 = x107 * x152
    x154 = 53.96953873354034 * x136
    x155 = 3.0 * x112
    x156 = 2.0 * x136
    x157 = x126 * x156 + x155
    x158 = x0 * (x111 + x157)
    x159 = x148 * x88
    x160 = x158 + x159
    x161 = 24.13591146450082 * x143
    x162 = x106 * x161
    x163 = 53.96953873354034 * x106
    x164 = x101 * x143
    x165 = 0.1795871221251666 * x81
    x166 = x121 * x165
    x167 = x106 * x152
    x168 = -x100 - A[2]
    x169 = 24.13591146450082 * x168
    x170 = x118 * x168
    x171 = x101 * x170
    x172 = x120 + x171
    x173 = x152 * x172
    x174 = 53.96953873354034 * x113
    x175 = 93.47798314754836 * x88
    x176 = x0 * (x133 + x170)
    x177 = x101 * x172
    x178 = x176 + x177
    x179 = 53.96953873354034 * x178
    x180 = x165 * x172
    x181 = x152 * x88
    x182 = 3.0 * x120
    x183 = 2.0 * x168
    x184 = x133 * x183 + x182
    x185 = x0 * (x119 + x184)
    x186 = x101 * x178
    x187 = x185 + x186
    x188 = 24.13591146450082 * x187
    x189 = x110 * x136**2
    x190 = x112 + x189
    x191 = 31.15932771584945 * x190
    x192 = 69.67437490583262 * x71
    x193 = x136 * x141
    x194 = x146 + x193
    x195 = x143 * x194
    x196 = x136 * x148
    x197 = x158 + x196
    x198 = 69.67437490583262 * x197
    x199 = x143 * x95
    x200 = 120.6795573225041 * x194
    x201 = 69.67437490583262 * x166
    x202 = 2.0 * x0 * (2.0 * x146 + x147 + x193)
    x203 = x197 * x88
    x204 = x202 + x203
    x205 = 31.15932771584945 * x204
    x206 = x143 * x93
    x207 = x165 * x93
    x208 = 120.6795573225041 * x141
    x209 = x143 * x168
    x210 = 120.6795573225041 * x136
    x211 = 120.6795573225041 * x168
    x212 = 209.0231247174979 * x180
    x213 = 120.6795573225041 * x178
    x214 = x152 * x95
    x215 = 53.96953873354034 * x160
    x216 = 120.6795573225041 * x180
    x217 = x152 * x93
    x218 = x118 * x168**2
    x219 = x120 + x218
    x220 = 31.15932771584945 * x219
    x221 = x152 * x192
    x222 = x168 * x172
    x223 = x176 + x222
    x224 = 69.67437490583262 * x113
    x225 = x165 * x219
    x226 = x168 * x178
    x227 = x185 + x226
    x228 = 69.67437490583262 * x227
    x229 = 31.15932771584945 * x127
    x230 = 2.0 * x0 * (2.0 * x176 + x177 + x222)
    x231 = x101 * x227
    x232 = x230 + x231
    x233 = 31.15932771584945 * x232
    x234 = x136 * x190 + x139 * x45
    x235 = 24.13591146450082 * x234
    x236 = x61 + x76
    x237 = x143 * x236
    x238 = 53.96953873354034 * x69
    x239 = x0 * (x157 + x189)
    x240 = x136 * x194
    x241 = x239 + x240
    x242 = x143 * x241
    x243 = 53.96953873354034 * x234
    x244 = x136 * x197
    x245 = x202 + x244
    x246 = 53.96953873354034 * x245
    x247 = x143 * x67
    x248 = 93.47798314754836 * x241
    x249 = 53.96953873354034 * x166
    x250 = 3.0 * x196
    x251 = x0 * (5.0 * x158 + 2.0 * x159 + x250) + x136 * x204
    x252 = x161 * x251
    x253 = x165 * x65
    x254 = 53.96953873354034 * x168
    x255 = x165 * x67
    x256 = 53.96953873354034 * x143
    x257 = x168 * x256
    x258 = 53.96953873354034 * x253
    x259 = x152 * x236
    x260 = 120.6795573225041 * x225
    x261 = x152 * x210
    x262 = 209.0231247174979 * x223
    x263 = x152 * x67
    x264 = 53.96953873354034 * x225
    x265 = 120.6795573225041 * x253
    x266 = 53.96953873354034 * x152
    x267 = x136 * x266
    x268 = x168 * x219 + x170 * x45
    x269 = 24.13591146450082 * x268
    x270 = 53.96953873354034 * x268
    x271 = x0 * (x184 + x218)
    x272 = x168 * x223
    x273 = x271 + x272
    x274 = x152 * x273
    x275 = x168 * x227
    x276 = x230 + x275
    x277 = 53.96953873354034 * x276
    x278 = 3.0 * x226
    x279 = x0 * (5.0 * x185 + 2.0 * x186 + x278) + x168 * x232
    x280 = 24.13591146450082 * x152
    x281 = x279 * x280
    x282 = x0 * (x155 + 3.0 * x189) + x136 * x234
    x283 = 9.122517057277419 * x282
    x284 = 2.0 * x0 * (2.0 * x20 + x28 + x58) + x10 * x60
    x285 = x143 * x284
    x286 = x0 * (3.0 * x146 + 3.0 * x193 + x234) + x136 * x241
    x287 = x122 * x82
    x288 = x287 * x60
    x289 = x0 * (3.0 * x158 + 2.0 * x239 + 2.0 * x240 + x250) + x136 * x245
    x290 = x287 * x289
    x291 = 35.33135663832854 * x59
    x292 = 20.39856826597365 * x166
    x293 = x56 + x7
    x294 = 3.0 * x0 * (2.0 * x202 + x203 + x244) + x136 * x251
    x295 = x115 * x83
    x296 = x165 * x293
    x297 = 93.47798314754836 * x59
    x298 = x165 * x59
    x299 = 53.96953873354034 * x180
    x300 = 53.96953873354034 * x296
    x301 = 69.67437490583262 * x60
    x302 = x165 * x223
    x303 = 31.15932771584945 * x225
    x304 = x152 * x284
    x305 = x142 * x165
    x306 = x165 * x273
    x307 = x0 * (x182 + 3.0 * x218) + x168 * x268
    x308 = 9.122517057277419 * x307
    x309 = x124 * x60
    x310 = x0 * (3.0 * x176 + 3.0 * x222 + x268) + x168 * x273
    x311 = x0 * (3.0 * x185 + 2.0 * x271 + 2.0 * x272 + x278) + x168 * x276
    x312 = x124 * x311
    x313 = (
        27.36755117183225 * x0 * (2.0 * x230 + x231 + x275)
        + 9.122517057277419 * x168 * x279
    )
    x314 = -x87 - R[1]
    x315 = x110 * x314**2
    x316 = x112 + x315
    x317 = x11 * x42
    x318 = x10 * x32
    x319 = 3.0 * x41
    x320 = x0 * (2.0 * x318 + x319 + 5.0 * x40) + x11 * x44
    x321 = 3.0 * x0 * (x317 + 2.0 * x37 + x43) + x11 * x320
    x322 = x110 * x314
    x323 = x0 * (x126 + x322)
    x324 = x126 * x314
    x325 = x112 + x324
    x326 = x314 * x325
    x327 = x323 + x326
    x328 = x0 * (x129 + x39)
    x329 = x105 * x11
    x330 = x317 + x37
    x331 = x0 * (x319 + 2.0 * x328 + 2.0 * x329 + 3.0 * x40) + x11 * x330
    x332 = x287 * x331
    x333 = x129 + x7
    x334 = x11 * x333 + x12 * x45
    x335 = x328 + x329
    x336 = x0 * (3.0 * x29 + x334 + 3.0 * x36) + x11 * x335
    x337 = 2.0 * x88
    x338 = x155 + x315
    x339 = x0 * (x322 * x337 + x338) + x327 * x88
    x340 = x287 * x339
    x341 = 35.33135663832854 * x327
    x342 = x0 * (3.0 * x129 + x8) + x11 * x334
    x343 = x325 * x88
    x344 = 2.0 * x0 * (2.0 * x323 + x326 + x343) + x339 * x88
    x345 = x165 * x316
    x346 = x0 * (x139 + x322)
    x347 = x139 * x314
    x348 = x112 + x347
    x349 = x314 * x348
    x350 = x346 + x349
    x351 = 24.13591146450082 * x350
    x352 = x0 * (x140 + x155 + x324 + x347)
    x353 = x136 * x325
    x354 = x323 + x353
    x355 = x314 * x354
    x356 = x352 + x355
    x357 = x256 * x330
    x358 = 53.96953873354034 * x350
    x359 = 2.0 * x353
    x360 = 3.0 * x323 + x359
    x361 = x0 * (x326 + x350 + x360)
    x362 = x356 * x88
    x363 = x361 + x362
    x364 = x256 * x363
    x365 = 93.47798314754836 * x164
    x366 = x354 * x88
    x367 = 2.0 * x366
    x368 = 4.0 * x352
    x369 = 2.0 * x355 + x368
    x370 = x0 * (x339 + x367 + x369)
    x371 = x363 * x88
    x372 = x370 + x371
    x373 = x161 * x334
    x374 = x165 * x334
    x375 = 93.47798314754836 * x327
    x376 = x156 * x322
    x377 = x0 * (x338 + x376)
    x378 = x136 * x350
    x379 = x377 + x378
    x380 = 31.15932771584945 * x379
    x381 = x143 * x44
    x382 = x136 * x356
    x383 = x361 + x382
    x384 = 69.67437490583262 * x42
    x385 = x143 * x384
    x386 = x136 * x363
    x387 = x370 + x386
    x388 = 69.67437490583262 * x387
    x389 = x105 * x143
    x390 = 120.6795573225041 * x105
    x391 = x0 * (x148 + x343 + x360)
    x392 = x352 + x366
    x393 = x136 * x392
    x394 = 2.0 * x0 * (2.0 * x361 + x362 + x382 + x391 + x393)
    x395 = x387 * x88
    x396 = x394 + x395
    x397 = 31.15932771584945 * x333
    x398 = x165 * x333
    x399 = 120.6795573225041 * x209
    x400 = x165 * x213
    x401 = 69.67437490583262 * x339
    x402 = x318 + x40
    x403 = x136 * x348
    x404 = 2.0 * x0 * (2.0 * x346 + x349 + x403) + x136 * x379
    x405 = x161 * x404
    x406 = x136 * x354
    x407 = 2.0 * x406
    x408 = x0 * (x369 + x379 + x407)
    x409 = x136 * x383
    x410 = x408 + x409
    x411 = 53.96953873354034 * x32
    x412 = x143 * x411
    x413 = x136 * x387
    x414 = x394 + x413
    x415 = 24.13591146450082 * x11
    x416 = x391 + x393
    x417 = x416 * x88
    x418 = x0 * (x197 + x367 + x368 + x407)
    x419 = 3.0 * x386 + 2.0 * x418
    x420 = x0 * (5.0 * x370 + 2.0 * x371 + 2.0 * x417 + x419) + x136 * x396
    x421 = x3 * x85
    x422 = x421 * x82
    x423 = x420 * x422
    x424 = x132 * x421
    x425 = 53.96953873354034 * x11
    x426 = x3 * x81
    x427 = x115 * x426
    x428 = 53.96953873354034 * x427
    x429 = x11 * x428
    x430 = x404 * x427
    x431 = x254 * x422
    x432 = 120.6795573225041 * x11
    x433 = x427 * x432
    x434 = x383 * x427
    x435 = 120.6795573225041 * x350
    x436 = x165 * x30
    x437 = x223 * x427
    x438 = x356 * x427
    x439 = x232 * x427
    x440 = x165 * x270
    x441 = x269 * x427
    x442 = x273 * x428
    x443 = x11 * x427
    x444 = x279 * x427
    x445 = x38 + x7
    x446 = x10 * x445 + x26 * x7
    x447 = x346 + x403
    x448 = (
        x0 * (x156 * x447 + 3.0 * x377 + 3.0 * x378 + x45 * (x155 + x189 + x376))
        + x136 * x404
    )
    x449 = (
        x0
        * (
            x156 * (x352 + x406)
            + 3.0 * x361
            + 3.0 * x382
            + x404
            + x45 * (x194 + 2.0 * x323 + x359 + x447)
        )
        + x136 * x410
    )
    x450 = 20.39856826597365 * x445
    x451 = x143 * x450
    x452 = x422 * (
        x0 * (x156 * x416 + 3.0 * x370 + 2.0 * x408 + 2.0 * x409 + x419) + x136 * x414
    )
    x453 = 20.39856826597365 * x10
    x454 = x122 * x426
    x455 = x121 * x454
    x456 = x410 * x427
    x457 = 93.47798314754836 * x10
    x458 = 69.67437490583262 * x445
    x459 = x10 * x427
    x460 = x165 * x446
    x461 = x165 * x450
    x462 = x339 * x454
    x463 = x311 * x454
    x464 = -x100 - R[2]
    x465 = x118 * x464**2
    x466 = x120 + x465
    x467 = 9.122517057277419 * x152
    x468 = x124 * x331
    x469 = x118 * x464
    x470 = x0 * (x133 + x469)
    x471 = x133 * x464
    x472 = x120 + x471
    x473 = x464 * x472
    x474 = x470 + x473
    x475 = x165 * x466
    x476 = 35.33135663832854 * x474
    x477 = 2.0 * x101
    x478 = x182 + x465
    x479 = x0 * (x469 * x477 + x478) + x101 * x474
    x480 = x124 * x479
    x481 = x165 * x474
    x482 = x101 * x472
    x483 = 2.0 * x0 * (2.0 * x470 + x473 + x482) + x101 * x479
    x484 = x280 * x320
    x485 = x266 * x330
    x486 = x266 * x335
    x487 = 24.13591146450082 * x374
    x488 = x280 * x334
    x489 = x0 * (x170 + x469)
    x490 = x170 * x464
    x491 = x120 + x490
    x492 = x464 * x491
    x493 = x489 + x492
    x494 = x0 * (x171 + x182 + x471 + x490)
    x495 = x168 * x472
    x496 = x470 + x495
    x497 = x464 * x496
    x498 = x494 + x497
    x499 = x165 * x493
    x500 = x152 * x175
    x501 = 2.0 * x495
    x502 = 3.0 * x470 + x501
    x503 = x0 * (x473 + x493 + x502)
    x504 = x101 * x498
    x505 = x503 + x504
    x506 = x101 * x496
    x507 = 2.0 * x506
    x508 = 4.0 * x494
    x509 = 2.0 * x497 + x508
    x510 = x0 * (x479 + x507 + x509)
    x511 = x101 * x505
    x512 = x510 + x511
    x513 = 69.67437490583262 * x479
    x514 = x105 * x165
    x515 = 120.6795573225041 * x499
    x516 = 209.0231247174979 * x498
    x517 = x105 * x152
    x518 = 120.6795573225041 * x398
    x519 = x183 * x469
    x520 = x0 * (x478 + x519)
    x521 = x168 * x493
    x522 = x520 + x521
    x523 = x152 * x522
    x524 = x168 * x498
    x525 = x503 + x524
    x526 = x152 * x525
    x527 = x168 * x505
    x528 = x510 + x527
    x529 = 69.67437490583262 * x528
    x530 = x0 * (x178 + x482 + x502)
    x531 = x494 + x506
    x532 = x168 * x531
    x533 = 2.0 * x0 * (2.0 * x503 + x504 + x524 + x530 + x532)
    x534 = x101 * x528
    x535 = x533 + x534
    x536 = x427 * x466
    x537 = x246 * x427
    x538 = x241 * x428
    x539 = x427 * x483
    x540 = 53.96953873354034 * x499
    x541 = 120.6795573225041 * x190
    x542 = x165 * x498
    x543 = 120.6795573225041 * x436
    x544 = x194 * x427
    x545 = x165 * x522
    x546 = x427 * x522
    x547 = x427 * x525
    x548 = x426 * x86
    x549 = x154 * x548
    x550 = x168 * x491
    x551 = 2.0 * x0 * (2.0 * x489 + x492 + x550) + x168 * x522
    x552 = x280 * x551
    x553 = x152 * x411
    x554 = x168 * x496
    x555 = 2.0 * x554
    x556 = x0 * (x509 + x522 + x555)
    x557 = x168 * x525
    x558 = x556 + x557
    x559 = x168 * x528
    x560 = x533 + x559
    x561 = 24.13591146450082 * x427
    x562 = x551 * x561
    x563 = x427 * x558
    x564 = x530 + x532
    x565 = x101 * x564
    x566 = x0 * (x227 + x507 + x508 + x555)
    x567 = 3.0 * x527 + 2.0 * x566
    x568 = x0 * (5.0 * x510 + 2.0 * x511 + 2.0 * x565 + x567) + x168 * x535
    x569 = x548 * x568
    x570 = x289 * x454
    x571 = x454 * x479
    x572 = x489 + x550
    x573 = (
        x0 * (x183 * x572 + x45 * (x182 + x218 + x519) + 3.0 * x520 + 3.0 * x521)
        + x168 * x551
    )
    x574 = x152 * x450
    x575 = (
        x0
        * (
            x183 * (x494 + x554)
            + x45 * (x223 + 2.0 * x470 + x501 + x572)
            + 3.0 * x503
            + 3.0 * x524
            + x551
        )
        + x168 * x558
    )
    x576 = x116 * x426
    x577 = x548 * (
        x0 * (x183 * x564 + 3.0 * x510 + 2.0 * x556 + 2.0 * x557 + x567) + x168 * x560
    )

    # 450 item(s)
    result[0, 0, 0] = numpy.sum(
        x83
        * x86
        * (
            x0
            * (
                x45 * (x25 * x26 + 3.0 * x27 + 5.0 * x35 + x44)
                + x53 * (x50 + x52)
                + 3.0 * x72
                + 3.0 * x73
                + 6.0 * x75
            )
            + x11 * x79
        )
    )
    result[0, 0, 1] = numpy.sum(x89 * x99)
    result[0, 0, 2] = numpy.sum(x102 * x99)
    result[0, 0, 3] = numpy.sum(x109 * x116)
    result[0, 0, 4] = numpy.sum(x101 * x109 * x117 * x86)
    result[0, 0, 5] = numpy.sum(x108 * x125)
    result[0, 0, 6] = numpy.sum(x128 * x131 * x82)
    result[0, 0, 7] = numpy.sum(x116 * x130 * x132)
    result[0, 0, 8] = numpy.sum(x125 * x130 * x88)
    result[0, 0, 9] = numpy.sum(x123 * x131 * x135)
    result[0, 1, 0] = numpy.sum(x137 * x138)
    result[0, 1, 1] = numpy.sum(x142 * x143 * x97)
    result[0, 1, 2] = numpy.sum(x101 * x136 * x145)
    result[0, 1, 3] = numpy.sum(x149 * x150)
    result[0, 1, 4] = numpy.sum(x101 * x150 * x151)
    result[0, 1, 5] = numpy.sum(x121 * x153 * x154)
    result[0, 1, 6] = numpy.sum(x160 * x162)
    result[0, 1, 7] = numpy.sum(x148 * x163 * x164)
    result[0, 1, 8] = numpy.sum(x106 * x142 * x166)
    result[0, 1, 9] = numpy.sum(x134 * x137 * x167)
    result[0, 2, 0] = numpy.sum(x138 * x169)
    result[0, 2, 1] = numpy.sum(x145 * x168 * x88)
    result[0, 2, 2] = numpy.sum(x144 * x173)
    result[0, 2, 3] = numpy.sum(x150 * x168 * x174)
    result[0, 2, 4] = numpy.sum(x107 * x173 * x175)
    result[0, 2, 5] = numpy.sum(x153 * x179)
    result[0, 2, 6] = numpy.sum(x127 * x162 * x168)
    result[0, 2, 7] = numpy.sum(x113 * x163 * x180)
    result[0, 2, 8] = numpy.sum(x163 * x178 * x181)
    result[0, 2, 9] = numpy.sum(x167 * x188)
    result[0, 3, 0] = numpy.sum(x143 * x191 * x78)
    result[0, 3, 1] = numpy.sum(x192 * x195)
    result[0, 3, 2] = numpy.sum(x164 * x190 * x192)
    result[0, 3, 3] = numpy.sum(x198 * x199)
    result[0, 3, 4] = numpy.sum(x101 * x199 * x200)
    result[0, 3, 5] = numpy.sum(x190 * x201 * x95)
    result[0, 3, 6] = numpy.sum(x205 * x206)
    result[0, 3, 7] = numpy.sum(x101 * x198 * x206)
    result[0, 3, 8] = numpy.sum(x194 * x201 * x93)
    result[0, 3, 9] = numpy.sum(x134 * x191 * x207)
    result[0, 4, 0] = numpy.sum(x154 * x168 * x78 * x98)
    result[0, 4, 1] = numpy.sum(x208 * x209 * x71)
    result[0, 4, 2] = numpy.sum(x173 * x210 * x71)
    result[0, 4, 3] = numpy.sum(x148 * x199 * x211)
    result[0, 4, 4] = numpy.sum(x141 * x212 * x95)
    result[0, 4, 5] = numpy.sum(x136 * x213 * x214)
    result[0, 4, 6] = numpy.sum(x168 * x206 * x215)
    result[0, 4, 7] = numpy.sum(x148 * x216 * x93)
    result[0, 4, 8] = numpy.sum(x141 * x207 * x213)
    result[0, 4, 9] = numpy.sum(x154 * x187 * x217)
    result[0, 5, 0] = numpy.sum(x152 * x220 * x78)
    result[0, 5, 1] = numpy.sum(x219 * x221 * x88)
    result[0, 5, 2] = numpy.sum(x221 * x223)
    result[0, 5, 3] = numpy.sum(x224 * x225 * x95)
    result[0, 5, 4] = numpy.sum(120.6795573225041 * x214 * x223 * x88)
    result[0, 5, 5] = numpy.sum(x214 * x228)
    result[0, 5, 6] = numpy.sum(x207 * x219 * x229)
    result[0, 5, 7] = numpy.sum(x207 * x223 * x224)
    result[0, 5, 8] = numpy.sum(x217 * x228 * x88)
    result[0, 5, 9] = numpy.sum(x217 * x233)
    result[0, 6, 0] = numpy.sum(x235 * x237)
    result[0, 6, 1] = numpy.sum(x238 * x242)
    result[0, 6, 2] = numpy.sum(x164 * x243 * x69)
    result[0, 6, 3] = numpy.sum(x246 * x247)
    result[0, 6, 4] = numpy.sum(x101 * x247 * x248)
    result[0, 6, 5] = numpy.sum(x234 * x249 * x67)
    result[0, 6, 6] = numpy.sum(x252 * x65)
    result[0, 6, 7] = numpy.sum(x164 * x246 * x65)
    result[0, 6, 8] = numpy.sum(x241 * x249 * x65)
    result[0, 6, 9] = numpy.sum(x134 * x235 * x253)
    result[0, 7, 0] = numpy.sum(x190 * x237 * x254)
    result[0, 7, 1] = numpy.sum(x195 * x211 * x69)
    result[0, 7, 2] = numpy.sum(x190 * x216 * x69)
    result[0, 7, 3] = numpy.sum(x197 * x211 * x247)
    result[0, 7, 4] = numpy.sum(x194 * x212 * x67)
    result[0, 7, 5] = numpy.sum(x190 * x213 * x255)
    result[0, 7, 6] = numpy.sum(x204 * x257 * x65)
    result[0, 7, 7] = numpy.sum(x197 * x216 * x65)
    result[0, 7, 8] = numpy.sum(x194 * x213 * x253)
    result[0, 7, 9] = numpy.sum(x187 * x190 * x258)
    result[0, 8, 0] = numpy.sum(x154 * x219 * x259)
    result[0, 8, 1] = numpy.sum(x141 * x260 * x69)
    result[0, 8, 2] = numpy.sum(x223 * x261 * x69)
    result[0, 8, 3] = numpy.sum(x148 * x260 * x67)
    result[0, 8, 4] = numpy.sum(x141 * x255 * x262)
    result[0, 8, 5] = numpy.sum(x210 * x227 * x263)
    result[0, 8, 6] = numpy.sum(x160 * x264 * x65)
    result[0, 8, 7] = numpy.sum(x148 * x223 * x265)
    result[0, 8, 8] = numpy.sum(x141 * x227 * x265)
    result[0, 8, 9] = numpy.sum(x232 * x267 * x65)
    result[0, 9, 0] = numpy.sum(x259 * x269)
    result[0, 9, 1] = numpy.sum(x181 * x270 * x69)
    result[0, 9, 2] = numpy.sum(x238 * x274)
    result[0, 9, 3] = numpy.sum(x113 * x255 * x270)
    result[0, 9, 4] = numpy.sum(x175 * x274 * x67)
    result[0, 9, 5] = numpy.sum(x263 * x277)
    result[0, 9, 6] = numpy.sum(x127 * x253 * x269)
    result[0, 9, 7] = numpy.sum(x113 * x258 * x273)
    result[0, 9, 8] = numpy.sum(x181 * x277 * x65)
    result[0, 9, 9] = numpy.sum(x281 * x65)
    result[0, 10, 0] = numpy.sum(x283 * x285)
    result[0, 10, 1] = numpy.sum(x286 * x288)
    result[0, 10, 2] = numpy.sum(x101 * x282 * x288)
    result[0, 10, 3] = numpy.sum(x290 * x59)
    result[0, 10, 4] = numpy.sum(x164 * x286 * x291)
    result[0, 10, 5] = numpy.sum(x282 * x292 * x59)
    result[0, 10, 6] = numpy.sum(x293 * x294 * x295)
    result[0, 10, 7] = numpy.sum(x101 * x290 * x293)
    result[0, 10, 8] = numpy.sum(x286 * x292 * x293)
    result[0, 10, 9] = numpy.sum(x135 * x282 * x296)
    result[0, 11, 0] = numpy.sum(x168 * x235 * x285)
    result[0, 11, 1] = numpy.sum(x242 * x254 * x60)
    result[0, 11, 2] = numpy.sum(x180 * x243 * x60)
    result[0, 11, 3] = numpy.sum(x209 * x246 * x59)
    result[0, 11, 4] = numpy.sum(x180 * x241 * x297)
    result[0, 11, 5] = numpy.sum(x178 * x243 * x298)
    result[0, 11, 6] = numpy.sum(x168 * x252 * x293)
    result[0, 11, 7] = numpy.sum(x245 * x293 * x299)
    result[0, 11, 8] = numpy.sum(x178 * x241 * x300)
    result[0, 11, 9] = numpy.sum(x187 * x235 * x296)
    result[0, 12, 0] = numpy.sum(x191 * x225 * x284)
    result[0, 12, 1] = numpy.sum(x194 * x225 * x301)
    result[0, 12, 2] = numpy.sum(x190 * x301 * x302)
    result[0, 12, 3] = numpy.sum(x198 * x225 * x59)
    result[0, 12, 4] = numpy.sum(x200 * x223 * x298)
    result[0, 12, 5] = numpy.sum(x190 * x228 * x298)
    result[0, 12, 6] = numpy.sum(x204 * x293 * x303)
    result[0, 12, 7] = numpy.sum(x198 * x223 * x296)
    result[0, 12, 8] = numpy.sum(x194 * x228 * x296)
    result[0, 12, 9] = numpy.sum(x191 * x232 * x296)
    result[0, 13, 0] = numpy.sum(x136 * x269 * x304)
    result[0, 13, 1] = numpy.sum(x268 * x305 * x60)
    result[0, 13, 2] = numpy.sum(x154 * x274 * x60)
    result[0, 13, 3] = numpy.sum(x148 * x270 * x298)
    result[0, 13, 4] = numpy.sum(x141 * x297 * x306)
    result[0, 13, 5] = numpy.sum(x136 * x152 * x277 * x59)
    result[0, 13, 6] = numpy.sum(x160 * x269 * x296)
    result[0, 13, 7] = numpy.sum(x148 * x273 * x300)
    result[0, 13, 8] = numpy.sum(x142 * x276 * x296)
    result[0, 13, 9] = numpy.sum(x136 * x281 * x293)
    result[0, 14, 0] = numpy.sum(x304 * x308)
    result[0, 14, 1] = numpy.sum(x307 * x309 * x88)
    result[0, 14, 2] = numpy.sum(x309 * x310)
    result[0, 14, 3] = numpy.sum(x114 * x298 * x307)
    result[0, 14, 4] = numpy.sum(x181 * x291 * x310)
    result[0, 14, 5] = numpy.sum(x312 * x59)
    result[0, 14, 6] = numpy.sum(x127 * x296 * x308)
    result[0, 14, 7] = numpy.sum(x114 * x296 * x310)
    result[0, 14, 8] = numpy.sum(x293 * x312 * x88)
    result[0, 14, 9] = numpy.sum(x152 * x293 * x313)
    result[1, 0, 0] = numpy.sum(x295 * x316 * x321)
    result[1, 0, 1] = numpy.sum(x327 * x332)
    result[1, 0, 2] = numpy.sum(x101 * x316 * x332)
    result[1, 0, 3] = numpy.sum(x336 * x340)
    result[1, 0, 4] = numpy.sum(x164 * x336 * x341)
    result[1, 0, 5] = numpy.sum(x292 * x316 * x336)
    result[1, 0, 6] = numpy.sum(x295 * x342 * x344)
    result[1, 0, 7] = numpy.sum(x101 * x340 * x342)
    result[1, 0, 8] = numpy.sum(x292 * x327 * x342)
    result[1, 0, 9] = numpy.sum(x135 * x342 * x345)
    result[1, 1, 0] = numpy.sum(x143 * x320 * x351)
    result[1, 1, 1] = numpy.sum(x356 * x357)
    result[1, 1, 2] = numpy.sum(x164 * x330 * x358)
    result[1, 1, 3] = numpy.sum(x335 * x364)
    result[1, 1, 4] = numpy.sum(x335 * x356 * x365)
    result[1, 1, 5] = numpy.sum(x249 * x335 * x350)
    result[1, 1, 6] = numpy.sum(x372 * x373)
    result[1, 1, 7] = numpy.sum(x101 * x334 * x364)
    result[1, 1, 8] = numpy.sum(x249 * x334 * x356)
    result[1, 1, 9] = numpy.sum(x134 * x351 * x374)
    result[1, 2, 0] = numpy.sum(x161 * x168 * x316 * x320)
    result[1, 2, 1] = numpy.sum(x168 * x327 * x357)
    result[1, 2, 2] = numpy.sum(x299 * x316 * x330)
    result[1, 2, 3] = numpy.sum(x257 * x335 * x339)
    result[1, 2, 4] = numpy.sum(x180 * x335 * x375)
    result[1, 2, 5] = numpy.sum(x179 * x335 * x345)
    result[1, 2, 6] = numpy.sum(x168 * x344 * x373)
    result[1, 2, 7] = numpy.sum(x299 * x334 * x339)
    result[1, 2, 8] = numpy.sum(x179 * x327 * x374)
    result[1, 2, 9] = numpy.sum(x188 * x334 * x345)
    result[1, 3, 0] = numpy.sum(x380 * x381)
    result[1, 3, 1] = numpy.sum(x383 * x385)
    result[1, 3, 2] = numpy.sum(x101 * x379 * x385)
    result[1, 3, 3] = numpy.sum(x388 * x389)
    result[1, 3, 4] = numpy.sum(x164 * x383 * x390)
    result[1, 3, 5] = numpy.sum(x105 * x201 * x379)
    result[1, 3, 6] = numpy.sum(x143 * x396 * x397)
    result[1, 3, 7] = numpy.sum(x164 * x333 * x388)
    result[1, 3, 8] = numpy.sum(x201 * x333 * x383)
    result[1, 3, 9] = numpy.sum(x134 * x380 * x398)
    result[1, 4, 0] = numpy.sum(x168 * x358 * x381)
    result[1, 4, 1] = numpy.sum(x356 * x399 * x42)
    result[1, 4, 2] = numpy.sum(x216 * x350 * x42)
    result[1, 4, 3] = numpy.sum(x211 * x363 * x389)
    result[1, 4, 4] = numpy.sum(x105 * x212 * x356)
    result[1, 4, 5] = numpy.sum(x105 * x350 * x400)
    result[1, 4, 6] = numpy.sum(x257 * x333 * x372)
    result[1, 4, 7] = numpy.sum(x216 * x333 * x363)
    result[1, 4, 8] = numpy.sum(x213 * x356 * x398)
    result[1, 4, 9] = numpy.sum(x187 * x358 * x398)
    result[1, 5, 0] = numpy.sum(x303 * x316 * x44)
    result[1, 5, 1] = numpy.sum(x225 * x327 * x384)
    result[1, 5, 2] = numpy.sum(x302 * x316 * x384)
    result[1, 5, 3] = numpy.sum(x105 * x225 * x401)
    result[1, 5, 4] = numpy.sum(x302 * x327 * x390)
    result[1, 5, 5] = numpy.sum(x105 * x228 * x345)
    result[1, 5, 6] = numpy.sum(x303 * x333 * x344)
    result[1, 5, 7] = numpy.sum(x302 * x333 * x401)
    result[1, 5, 8] = numpy.sum(x228 * x327 * x398)
    result[1, 5, 9] = numpy.sum(x233 * x333 * x345)
    result[1, 6, 0] = numpy.sum(x402 * x405)
    result[1, 6, 1] = numpy.sum(x410 * x412)
    result[1, 6, 2] = numpy.sum(x101 * x404 * x412)
    result[1, 6, 3] = numpy.sum(x256 * x30 * x414)
    result[1, 6, 4] = numpy.sum(x30 * x365 * x410)
    result[1, 6, 5] = numpy.sum(x249 * x30 * x404)
    result[1, 6, 6] = numpy.sum(x415 * x423)
    result[1, 6, 7] = numpy.sum(x414 * x424 * x425)
    result[1, 6, 8] = numpy.sum(x121 * x410 * x429)
    result[1, 6, 9] = numpy.sum(x134 * x415 * x430)
    result[1, 7, 0] = numpy.sum(x257 * x379 * x402)
    result[1, 7, 1] = numpy.sum(x32 * x383 * x399)
    result[1, 7, 2] = numpy.sum(x216 * x32 * x379)
    result[1, 7, 3] = numpy.sum(x30 * x387 * x399)
    result[1, 7, 4] = numpy.sum(x212 * x30 * x383)
    result[1, 7, 5] = numpy.sum(x30 * x379 * x400)
    result[1, 7, 6] = numpy.sum(x11 * x396 * x431)
    result[1, 7, 7] = numpy.sum(x172 * x387 * x433)
    result[1, 7, 8] = numpy.sum(x11 * x213 * x434)
    result[1, 7, 9] = numpy.sum(x187 * x379 * x429)
    result[1, 8, 0] = numpy.sum(x264 * x350 * x402)
    result[1, 8, 1] = numpy.sum(x260 * x32 * x356)
    result[1, 8, 2] = numpy.sum(x302 * x32 * x435)
    result[1, 8, 3] = numpy.sum(x260 * x30 * x363)
    result[1, 8, 4] = numpy.sum(x262 * x356 * x436)
    result[1, 8, 5] = numpy.sum(x227 * x435 * x436)
    result[1, 8, 6] = numpy.sum(x219 * x372 * x429)
    result[1, 8, 7] = numpy.sum(x363 * x432 * x437)
    result[1, 8, 8] = numpy.sum(x227 * x432 * x438)
    result[1, 8, 9] = numpy.sum(x11 * x358 * x439)
    result[1, 9, 0] = numpy.sum(x269 * x345 * x402)
    result[1, 9, 1] = numpy.sum(x32 * x327 * x440)
    result[1, 9, 2] = numpy.sum(x306 * x316 * x411)
    result[1, 9, 3] = numpy.sum(x270 * x339 * x436)
    result[1, 9, 4] = numpy.sum(x30 * x306 * x375)
    result[1, 9, 5] = numpy.sum(x277 * x30 * x345)
    result[1, 9, 6] = numpy.sum(x11 * x344 * x441)
    result[1, 9, 7] = numpy.sum(x11 * x339 * x442)
    result[1, 9, 8] = numpy.sum(x277 * x327 * x443)
    result[1, 9, 9] = numpy.sum(x316 * x415 * x444)
    result[1, 10, 0] = numpy.sum(x295 * x446 * x448)
    result[1, 10, 1] = numpy.sum(x449 * x451)
    result[1, 10, 2] = numpy.sum(x101 * x448 * x451)
    result[1, 10, 3] = numpy.sum(x452 * x453)
    result[1, 10, 4] = numpy.sum(35.33135663832854 * x10 * x424 * x449)
    result[1, 10, 5] = numpy.sum(x10 * x448 * x455)
    result[1, 10, 6] = numpy.sum(
        x421
        * x83
        * (
            x0
            * (
                x156 * (x417 + x418)
                + 6.0 * x394
                + 3.0 * x395
                + 3.0 * x413
                + x45 * (x204 + x337 * x392 + 5.0 * x391 + 3.0 * x393)
            )
            + x136 * x420
        )
    )
    result[1, 10, 7] = numpy.sum(x102 * x452)
    result[1, 10, 8] = numpy.sum(x449 * x455)
    result[1, 10, 9] = numpy.sum(x135 * x427 * x448)
    result[1, 11, 0] = numpy.sum(x168 * x405 * x446)
    result[1, 11, 1] = numpy.sum(x257 * x410 * x445)
    result[1, 11, 2] = numpy.sum(x299 * x404 * x445)
    result[1, 11, 3] = numpy.sum(x10 * x414 * x431)
    result[1, 11, 4] = numpy.sum(x172 * x456 * x457)
    result[1, 11, 5] = numpy.sum(x10 * x179 * x430)
    result[1, 11, 6] = numpy.sum(x169 * x423)
    result[1, 11, 7] = numpy.sum(x172 * x414 * x428)
    result[1, 11, 8] = numpy.sum(x179 * x456)
    result[1, 11, 9] = numpy.sum(x188 * x430)
    result[1, 12, 0] = numpy.sum(x303 * x379 * x446)
    result[1, 12, 1] = numpy.sum(x225 * x383 * x458)
    result[1, 12, 2] = numpy.sum(x302 * x379 * x458)
    result[1, 12, 3] = numpy.sum(x219 * x388 * x459)
    result[1, 12, 4] = numpy.sum(120.6795573225041 * x10 * x383 * x437)
    result[1, 12, 5] = numpy.sum(x228 * x379 * x459)
    result[1, 12, 6] = numpy.sum(x220 * x396 * x427)
    result[1, 12, 7] = numpy.sum(x388 * x437)
    result[1, 12, 8] = numpy.sum(x228 * x434)
    result[1, 12, 9] = numpy.sum(x380 * x439)
    result[1, 13, 0] = numpy.sum(x269 * x350 * x460)
    result[1, 13, 1] = numpy.sum(x356 * x440 * x445)
    result[1, 13, 2] = numpy.sum(x306 * x358 * x445)
    result[1, 13, 3] = numpy.sum(x270 * x363 * x459)
    result[1, 13, 4] = numpy.sum(x273 * x438 * x457)
    result[1, 13, 5] = numpy.sum(x276 * x358 * x459)
    result[1, 13, 6] = numpy.sum(x372 * x441)
    result[1, 13, 7] = numpy.sum(x363 * x442)
    result[1, 13, 8] = numpy.sum(x277 * x438)
    result[1, 13, 9] = numpy.sum(x351 * x444)
    result[1, 14, 0] = numpy.sum(x308 * x345 * x446)
    result[1, 14, 1] = numpy.sum(x307 * x327 * x461)
    result[1, 14, 2] = numpy.sum(x310 * x345 * x450)
    result[1, 14, 3] = numpy.sum(x10 * x307 * x462)
    result[1, 14, 4] = numpy.sum(x310 * x341 * x459)
    result[1, 14, 5] = numpy.sum(x10 * x316 * x463)
    result[1, 14, 6] = numpy.sum(x308 * x344 * x427)
    result[1, 14, 7] = numpy.sum(x310 * x462)
    result[1, 14, 8] = numpy.sum(x327 * x463)
    result[1, 14, 9] = numpy.sum(x313 * x316 * x427)
    result[2, 0, 0] = numpy.sum(x321 * x466 * x467)
    result[2, 0, 1] = numpy.sum(x466 * x468 * x88)
    result[2, 0, 2] = numpy.sum(x468 * x474)
    result[2, 0, 3] = numpy.sum(x114 * x336 * x475)
    result[2, 0, 4] = numpy.sum(x181 * x336 * x476)
    result[2, 0, 5] = numpy.sum(x336 * x480)
    result[2, 0, 6] = numpy.sum(x128 * x342 * x475)
    result[2, 0, 7] = numpy.sum(x114 * x342 * x481)
    result[2, 0, 8] = numpy.sum(x342 * x480 * x88)
    result[2, 0, 9] = numpy.sum(x342 * x467 * x483)
    result[2, 1, 0] = numpy.sum(x136 * x466 * x484)
    result[2, 1, 1] = numpy.sum(x305 * x330 * x466)
    result[2, 1, 2] = numpy.sum(x136 * x474 * x485)
    result[2, 1, 3] = numpy.sum(x149 * x335 * x475)
    result[2, 1, 4] = numpy.sum(x151 * x335 * x481)
    result[2, 1, 5] = numpy.sum(x136 * x479 * x486)
    result[2, 1, 6] = numpy.sum(x160 * x466 * x487)
    result[2, 1, 7] = numpy.sum(x149 * x374 * x474)
    result[2, 1, 8] = numpy.sum(x305 * x334 * x479)
    result[2, 1, 9] = numpy.sum(x136 * x483 * x488)
    result[2, 2, 0] = numpy.sum(x484 * x493)
    result[2, 2, 1] = numpy.sum(x485 * x493 * x88)
    result[2, 2, 2] = numpy.sum(x485 * x498)
    result[2, 2, 3] = numpy.sum(x174 * x335 * x499)
    result[2, 2, 4] = numpy.sum(x335 * x498 * x500)
    result[2, 2, 5] = numpy.sum(x486 * x505)
    result[2, 2, 6] = numpy.sum(x127 * x487 * x493)
    result[2, 2, 7] = numpy.sum(x174 * x374 * x498)
    result[2, 2, 8] = numpy.sum(x266 * x334 * x505 * x88)
    result[2, 2, 9] = numpy.sum(x488 * x512)
    result[2, 3, 0] = numpy.sum(x191 * x44 * x475)
    result[2, 3, 1] = numpy.sum(x194 * x384 * x475)
    result[2, 3, 2] = numpy.sum(x190 * x384 * x481)
    result[2, 3, 3] = numpy.sum(x105 * x198 * x475)
    result[2, 3, 4] = numpy.sum(x105 * x200 * x481)
    result[2, 3, 5] = numpy.sum(x190 * x513 * x514)
    result[2, 3, 6] = numpy.sum(x205 * x398 * x466)
    result[2, 3, 7] = numpy.sum(x198 * x398 * x474)
    result[2, 3, 8] = numpy.sum(x194 * x398 * x513)
    result[2, 3, 9] = numpy.sum(x191 * x398 * x483)
    result[2, 4, 0] = numpy.sum(x267 * x44 * x493)
    result[2, 4, 1] = numpy.sum(x141 * x42 * x515)
    result[2, 4, 2] = numpy.sum(x261 * x42 * x498)
    result[2, 4, 3] = numpy.sum(x105 * x148 * x515)
    result[2, 4, 4] = numpy.sum(x141 * x514 * x516)
    result[2, 4, 5] = numpy.sum(x210 * x505 * x517)
    result[2, 4, 6] = numpy.sum(x215 * x398 * x493)
    result[2, 4, 7] = numpy.sum(x148 * x498 * x518)
    result[2, 4, 8] = numpy.sum(x141 * x505 * x518)
    result[2, 4, 9] = numpy.sum(x267 * x333 * x512)
    result[2, 5, 0] = numpy.sum(31.15932771584945 * x44 * x523)
    result[2, 5, 1] = numpy.sum(x384 * x523 * x88)
    result[2, 5, 2] = numpy.sum(x384 * x526)
    result[2, 5, 3] = numpy.sum(x224 * x514 * x522)
    result[2, 5, 4] = numpy.sum(x390 * x526 * x88)
    result[2, 5, 5] = numpy.sum(x517 * x529)
    result[2, 5, 6] = numpy.sum(x229 * x398 * x522)
    result[2, 5, 7] = numpy.sum(x224 * x398 * x525)
    result[2, 5, 8] = numpy.sum(x181 * x333 * x529)
    result[2, 5, 9] = numpy.sum(x152 * x397 * x535)
    result[2, 6, 0] = numpy.sum(x235 * x402 * x475)
    result[2, 6, 1] = numpy.sum(x241 * x411 * x475)
    result[2, 6, 2] = numpy.sum(x243 * x32 * x481)
    result[2, 6, 3] = numpy.sum(x246 * x436 * x466)
    result[2, 6, 4] = numpy.sum(x248 * x436 * x474)
    result[2, 6, 5] = numpy.sum(x243 * x436 * x479)
    result[2, 6, 6] = numpy.sum(x251 * x415 * x536)
    result[2, 6, 7] = numpy.sum(x11 * x474 * x537)
    result[2, 6, 8] = numpy.sum(x11 * x479 * x538)
    result[2, 6, 9] = numpy.sum(x11 * x235 * x539)
    result[2, 7, 0] = numpy.sum(x190 * x402 * x540)
    result[2, 7, 1] = numpy.sum(x194 * x32 * x515)
    result[2, 7, 2] = numpy.sum(x32 * x541 * x542)
    result[2, 7, 3] = numpy.sum(x197 * x493 * x543)
    result[2, 7, 4] = numpy.sum(x194 * x436 * x516)
    result[2, 7, 5] = numpy.sum(x436 * x505 * x541)
    result[2, 7, 6] = numpy.sum(x204 * x429 * x493)
    result[2, 7, 7] = numpy.sum(x197 * x433 * x498)
    result[2, 7, 8] = numpy.sum(x432 * x505 * x544)
    result[2, 7, 9] = numpy.sum(x190 * x429 * x512)
    result[2, 8, 0] = numpy.sum(x267 * x402 * x522)
    result[2, 8, 1] = numpy.sum(x208 * x32 * x545)
    result[2, 8, 2] = numpy.sum(x210 * x32 * x526)
    result[2, 8, 3] = numpy.sum(x148 * x522 * x543)
    result[2, 8, 4] = numpy.sum(209.0231247174979 * x141 * x436 * x525)
    result[2, 8, 5] = numpy.sum(x261 * x30 * x528)
    result[2, 8, 6] = numpy.sum(x11 * x215 * x546)
    result[2, 8, 7] = numpy.sum(x148 * x432 * x547)
    result[2, 8, 8] = numpy.sum(x208 * x443 * x528)
    result[2, 8, 9] = numpy.sum(x11 * x535 * x549)
    result[2, 9, 0] = numpy.sum(x402 * x552)
    result[2, 9, 1] = numpy.sum(x551 * x553 * x88)
    result[2, 9, 2] = numpy.sum(x553 * x558)
    result[2, 9, 3] = numpy.sum(x174 * x436 * x551)
    result[2, 9, 4] = numpy.sum(x30 * x500 * x558)
    result[2, 9, 5] = numpy.sum(x266 * x30 * x560)
    result[2, 9, 6] = numpy.sum(x11 * x127 * x562)
    result[2, 9, 7] = numpy.sum(x11 * x174 * x563)
    result[2, 9, 8] = numpy.sum(x425 * x548 * x560 * x88)
    result[2, 9, 9] = numpy.sum(x415 * x569)
    result[2, 10, 0] = numpy.sum(x283 * x460 * x466)
    result[2, 10, 1] = numpy.sum(x286 * x461 * x466)
    result[2, 10, 2] = numpy.sum(x282 * x461 * x474)
    result[2, 10, 3] = numpy.sum(x10 * x466 * x570)
    result[2, 10, 4] = numpy.sum(x286 * x459 * x476)
    result[2, 10, 5] = numpy.sum(x10 * x282 * x571)
    result[2, 10, 6] = numpy.sum(9.122517057277419 * x294 * x536)
    result[2, 10, 7] = numpy.sum(x474 * x570)
    result[2, 10, 8] = numpy.sum(x286 * x571)
    result[2, 10, 9] = numpy.sum(x283 * x539)
    result[2, 11, 0] = numpy.sum(x235 * x460 * x493)
    result[2, 11, 1] = numpy.sum(x241 * x445 * x540)
    result[2, 11, 2] = numpy.sum(x243 * x445 * x542)
    result[2, 11, 3] = numpy.sum(x10 * x493 * x537)
    result[2, 11, 4] = numpy.sum(x248 * x459 * x498)
    result[2, 11, 5] = numpy.sum(x243 * x459 * x505)
    result[2, 11, 6] = numpy.sum(x251 * x493 * x561)
    result[2, 11, 7] = numpy.sum(x498 * x537)
    result[2, 11, 8] = numpy.sum(x505 * x538)
    result[2, 11, 9] = numpy.sum(x235 * x427 * x512)
    result[2, 12, 0] = numpy.sum(x191 * x460 * x522)
    result[2, 12, 1] = numpy.sum(x194 * x458 * x545)
    result[2, 12, 2] = numpy.sum(x165 * x190 * x458 * x525)
    result[2, 12, 3] = numpy.sum(x10 * x198 * x546)
    result[2, 12, 4] = numpy.sum(x10 * x200 * x547)
    result[2, 12, 5] = numpy.sum(x190 * x459 * x529)
    result[2, 12, 6] = numpy.sum(x205 * x546)
    result[2, 12, 7] = numpy.sum(x198 * x547)
    result[2, 12, 8] = numpy.sum(x529 * x544)
    result[2, 12, 9] = numpy.sum(x191 * x427 * x535)
    result[2, 13, 0] = numpy.sum(x136 * x446 * x552)
    result[2, 13, 1] = numpy.sum(x305 * x445 * x551)
    result[2, 13, 2] = numpy.sum(x267 * x445 * x558)
    result[2, 13, 3] = numpy.sum(x149 * x459 * x551)
    result[2, 13, 4] = numpy.sum(x10 * x151 * x563)
    result[2, 13, 5] = numpy.sum(x10 * x549 * x560)
    result[2, 13, 6] = numpy.sum(x160 * x562)
    result[2, 13, 7] = numpy.sum(x149 * x563)
    result[2, 13, 8] = numpy.sum(x142 * x427 * x560)
    result[2, 13, 9] = numpy.sum(x137 * x569)
    result[2, 14, 0] = numpy.sum(x446 * x467 * x573)
    result[2, 14, 1] = numpy.sum(x573 * x574 * x88)
    result[2, 14, 2] = numpy.sum(x574 * x575)
    result[2, 14, 3] = numpy.sum(x10 * x573 * x576)
    result[2, 14, 4] = numpy.sum(x10 * x117 * x548 * x575)
    result[2, 14, 5] = numpy.sum(x453 * x577)
    result[2, 14, 6] = numpy.sum(x128 * x427 * x573)
    result[2, 14, 7] = numpy.sum(x575 * x576)
    result[2, 14, 8] = numpy.sum(x577 * x89)
    result[2, 14, 9] = numpy.sum(
        9.122517057277419
        * x548
        * (
            x0
            * (
                x183 * (x565 + x566)
                + x45 * (x232 + x477 * x531 + 5.0 * x530 + 3.0 * x532)
                + 6.0 * x533
                + 3.0 * x534
                + 3.0 * x559
            )
            + x168 * x568
        )
    )
    return result


def diag_quadrupole3d_44(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gg) quadrupole moment integrals
    for operators x², y² and z². The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = -x2 - B[0]
    x5 = ax * bx * x1
    x6 = numpy.exp(-x5 * (A[0] - B[0]) ** 2)
    x7 = numpy.sqrt(x1)
    x8 = 1.772453850905516 * x7
    x9 = x6 * x8
    x10 = x0 * x9
    x11 = -x2 - R[0]
    x12 = x4 * x9
    x13 = x11 * x12
    x14 = x10 + x13
    x15 = x14 * x4
    x16 = x3 * x6
    x17 = x16 * x8
    x18 = x0 * (x12 + x17)
    x19 = x17 * x4
    x20 = x10 + x19
    x21 = x20 * x4
    x22 = x18 + x21
    x23 = x14 * x3
    x24 = 2.0 * x23
    x25 = x11 * x9
    x26 = x0 * (x12 + x25)
    x27 = x24 + 3.0 * x26
    x28 = x0 * (x15 + x22 + x27)
    x29 = 3.0 * x10
    x30 = x11 * x17
    x31 = x0 * (x13 + x19 + x29 + x30)
    x32 = x23 + x26
    x33 = x32 * x4
    x34 = x31 + x33
    x35 = x3 * x34
    x36 = x28 + x35
    x37 = x3 * x36
    x38 = x36 * x4
    x39 = x3 * x32
    x40 = 2.0 * x39
    x41 = 2.0 * x4
    x42 = x17 * x41
    x43 = x4**2 * x9
    x44 = x29 + x43
    x45 = x0 * (x42 + x44)
    x46 = x22 * x3
    x47 = x45 + x46
    x48 = 4.0 * x31
    x49 = 2.0 * x33 + x48
    x50 = x0 * (x40 + x47 + x49)
    x51 = x22 * x4
    x52 = 3.0 * x46
    x53 = x0 * (5.0 * x45 + 2.0 * x51 + x52)
    x54 = x20 * x3
    x55 = 2.0 * x0 * (2.0 * x18 + x21 + x54)
    x56 = x4 * x47
    x57 = x55 + x56
    x58 = x3 * x57
    x59 = x53 + x58
    x60 = 2.0 * x0
    x61 = x34 * x41
    x62 = x0 * (5.0 * x28 + 3.0 * x35 + x57 + x61)
    x63 = x3 * (x38 + x50)
    x64 = 2.0 * x28
    x65 = x11 * x32
    x66 = x31 + x65
    x67 = x3 * x66
    x68 = x4 * x66
    x69 = x11 * x14
    x70 = x0 * (x17 + x25)
    x71 = x10 + x30
    x72 = x11 * x71
    x73 = x70 + x72
    x74 = x0 * (x27 + x69 + x73)
    x75 = x0 * (2.0 * x35 + x64 + 2.0 * x67 + 2.0 * x68 + 4.0 * x74)
    x76 = 2.0 * x65
    x77 = x25 * x41
    x78 = x11**2 * x9
    x79 = x29 + x78
    x80 = x0 * (x77 + x79)
    x81 = x26 + x69
    x82 = x4 * x81
    x83 = x80 + x82
    x84 = x0 * (x49 + x76 + x83)
    x85 = x68 + x74
    x86 = x3 * x85
    x87 = x84 + x86
    x88 = x4 * x87
    x89 = x75 + x88
    x90 = x4 * x89
    x91 = x3 * x89
    x92 = x4 * x85
    x93 = 2.0 * x50 + 3.0 * x86
    x94 = x0 * (2.0 * x38 + 5.0 * x84 + 2.0 * x92 + x93)
    x95 = x3 * x87
    x96 = x0 * (2.0 * x62 + 2.0 * x63 + 6.0 * x75 + 3.0 * x88 + 3.0 * x95)
    x97 = x91 + x94
    x98 = x4 * x97 + x96
    x99 = numpy.exp(-x5 * (A[2] - B[2]) ** 2)
    x100 = da * db * numpy.sqrt(ax**5.5) * numpy.sqrt(bx**5.5)
    x101 = x100 * x99
    x102 = 6.895974704143093 * x101
    x103 = numpy.exp(-x5 * (A[1] - B[1]) ** 2)
    x104 = 0.5641895835477563 * x1
    x105 = x103 * x104
    x106 = -x1 * (ax * A[1] + bx * B[1])
    x107 = -x106 - B[1]
    x108 = x105 * x107
    x109 = 18.24503411455484 * x101
    x110 = x109 * (x3 * x97 + x96)
    x111 = -x1 * (ax * A[2] + bx * B[2])
    x112 = -x111 - B[2]
    x113 = x105 * x112
    x114 = 2.0 * x3
    x115 = x114 * x25
    x116 = x0 * (x115 + x79)
    x117 = x3 * x73
    x118 = x116 + x117
    x119 = x0 * (x118 + x40 + x48 + x76)
    x120 = x67 + x74
    x121 = x120 * x3
    x122 = x75 + x95
    x123 = x0 * (2.0 * x119 + 2.0 * x121 + 2.0 * x37 + 3.0 * x84 + x93) + x122 * x3
    x124 = x101 * x123
    x125 = x103 * x8
    x126 = x107**2 * x125
    x127 = x0 * x125
    x128 = x126 + x127
    x129 = 23.55423775888569 * x128
    x130 = 0.3183098861837907 * x7
    x131 = x129 * x130
    x132 = 40.79713653194731 * x112
    x133 = x8 * x99
    x134 = x112**2 * x133
    x135 = x0 * x133
    x136 = x134 + x135
    x137 = 23.55423775888569 * x130
    x138 = x100 * x103
    x139 = x137 * x138
    x140 = x107 * x125
    x141 = x107 * x128 + x140 * x60
    x142 = 18.24503411455484 * x141
    x143 = x3 * x71
    x144 = x143 + x70
    x145 = x18 + x54
    x146 = 3.0 * x74
    x147 = 2.0 * x0 * (x143 + 2.0 * x70 + x72) + x118 * x3
    x148 = x119 + x121
    x149 = x130 * (
        x0
        * (
            x114 * (x31 + x39)
            + x146
            + x147
            + x60 * (x144 + x145 + x24 + 2.0 * x26)
            + 3.0 * x67
        )
        + x148 * x3
    )
    x150 = x101 * x149
    x151 = 40.79713653194731 * x107
    x152 = x112 * x133
    x153 = x112 * x136 + x152 * x60
    x154 = 18.24503411455484 * x138
    x155 = x153 * x154
    x156 = 3.0 * x127
    x157 = x0 * (3.0 * x126 + x156) + x107 * x141
    x158 = 6.895974704143093 * x157
    x159 = x3**2 * x9
    x160 = x159 + x29
    x161 = x0 * (x114 * x144 + 3.0 * x116 + 3.0 * x117 + x60 * (x115 + x160)) + x147 * x3
    x162 = x130 * x161
    x163 = x101 * x162
    x164 = 0.1795871221251666 * x100
    x165 = x136 * x164
    x166 = 3.0 * x135
    x167 = x0 * (3.0 * x134 + x166) + x112 * x153
    x168 = 6.895974704143093 * x167
    x169 = -x106 - A[1]
    x170 = x105 * x169
    x171 = x109 * x98
    x172 = x125 * x169
    x173 = x107 * x172
    x174 = x127 + x173
    x175 = 48.27182292900164 * x174
    x176 = x101 * x130
    x177 = 48.27182292900164 * x97
    x178 = x101 * x177
    x179 = x0 * (x140 + x172)
    x180 = x107 * x174
    x181 = x179 + x180
    x182 = 62.31865543169889 * x181
    x183 = x122 * x176
    x184 = 107.9390774670807 * x174
    x185 = x130 * x138
    x186 = 62.31865543169889 * x185
    x187 = x122 * x186
    x188 = 2.0 * x107
    x189 = x156 + x172 * x188
    x190 = x0 * (x126 + x189)
    x191 = x107 * x181
    x192 = x190 + x191
    x193 = 48.27182292900164 * x192
    x194 = x176 * x193
    x195 = 107.9390774670807 * x148
    x196 = x112 * x176
    x197 = x148 * x185
    x198 = 48.27182292900164 * x153
    x199 = 3.0 * x179
    x200 = x0 * (x141 + 3.0 * x180 + x199) + x107 * x192
    x201 = 18.24503411455484 * x176
    x202 = x147 * x201
    x203 = 62.31865543169889 * x147
    x204 = x153 * x164
    x205 = x130 * x154
    x206 = x147 * x205
    x207 = -x111 - A[2]
    x208 = x133 * x207
    x209 = x112 * x208
    x210 = x135 + x209
    x211 = x185 * x210
    x212 = 62.31865543169889 * x128
    x213 = 107.9390774670807 * x211
    x214 = x0 * (x152 + x208)
    x215 = x112 * x210
    x216 = x214 + x215
    x217 = 48.27182292900164 * x141
    x218 = x176 * x207
    x219 = x164 * x210
    x220 = x107 * x185
    x221 = 2.0 * x112
    x222 = x166 + x208 * x221
    x223 = x0 * (x134 + x222)
    x224 = x112 * x216
    x225 = x223 + x224
    x226 = 48.27182292900164 * x225
    x227 = x164 * x216
    x228 = 3.0 * x214
    x229 = x0 * (x153 + 3.0 * x215 + x228) + x112 * x225
    x230 = x90 + x94
    x231 = x125 * x169**2
    x232 = x127 + x231
    x233 = 23.55423775888569 * x232
    x234 = x169 * x174
    x235 = x179 + x234
    x236 = 62.31865543169889 * x176
    x237 = x236 * x89
    x238 = x169 * x181
    x239 = x190 + x238
    x240 = 80.45303821500274 * x239
    x241 = x176 * x87
    x242 = 139.3487498116652 * x235
    x243 = 80.45303821500274 * x165
    x244 = 2.0 * x0 * (2.0 * x179 + x180 + x234)
    x245 = x107 * x239
    x246 = x244 + x245
    x247 = 62.31865543169889 * x246
    x248 = x176 * x247
    x249 = 139.3487498116652 * x120
    x250 = 62.31865543169889 * x204
    x251 = 3.0 * x238
    x252 = x0 * (5.0 * x190 + 2.0 * x191 + x251)
    x253 = x107 * x246
    x254 = x252 + x253
    x255 = 23.55423775888569 * x254
    x256 = x118 * x176
    x257 = x118 * x164
    x258 = 40.79713653194731 * x170
    x259 = x101 * x207
    x260 = 139.3487498116652 * x181
    x261 = 241.3591146450082 * x219
    x262 = x185 * x87
    x263 = 139.3487498116652 * x262
    x264 = 107.9390774670807 * x192
    x265 = 241.3591146450082 * x227
    x266 = 107.9390774670807 * x225
    x267 = x120 * x185
    x268 = 40.79713653194731 * x200
    x269 = 107.9390774670807 * x219
    x270 = 139.3487498116652 * x227
    x271 = 40.79713653194731 * x229
    x272 = x169 * x185
    x273 = x133 * x207**2
    x274 = x135 + x273
    x275 = x186 * x89
    x276 = x207 * x210
    x277 = x214 + x276
    x278 = x164 * x274
    x279 = 80.45303821500274 * x128
    x280 = x207 * x216
    x281 = x223 + x280
    x282 = 80.45303821500274 * x281
    x283 = 62.31865543169889 * x141
    x284 = x164 * x277
    x285 = 2.0 * x0 * (2.0 * x214 + x215 + x276)
    x286 = x112 * x281
    x287 = x285 + x286
    x288 = 62.31865543169889 * x287
    x289 = 23.55423775888569 * x157
    x290 = 3.0 * x280
    x291 = x0 * (5.0 * x223 + 2.0 * x224 + x290)
    x292 = x112 * x287
    x293 = x291 + x292
    x294 = x169 * x232 + x172 * x60
    x295 = 18.24503411455484 * x294
    x296 = 2.0 * x0 * (x15 + 2.0 * x26 + x69) + x4 * x83
    x297 = x84 + x92
    x298 = x0 * (x146 + x296 + x61 + x64 + 3.0 * x68) + x297 * x4
    x299 = x176 * x298
    x300 = 48.27182292900164 * x297
    x301 = x0 * (x189 + x231)
    x302 = x169 * x235
    x303 = x301 + x302
    x304 = x176 * x303
    x305 = 48.27182292900164 * x294
    x306 = 62.31865543169889 * x85
    x307 = x169 * x239
    x308 = x244 + x307
    x309 = x176 * x308
    x310 = 107.9390774670807 * x303
    x311 = 62.31865543169889 * x165
    x312 = x169 * x246
    x313 = x252 + x312
    x314 = 48.27182292900164 * x313
    x315 = x176 * x314
    x316 = 107.9390774670807 * x66
    x317 = 48.27182292900164 * x204
    x318 = 3.0 * x0 * (2.0 * x244 + x245 + x307)
    x319 = x107 * x313 + x318
    x320 = x201 * x319
    x321 = x164 * x73
    x322 = 40.79713653194731 * x232
    x323 = 107.9390774670807 * x297
    x324 = 139.3487498116652 * x85
    x325 = x164 * x66
    x326 = 40.79713653194731 * x73
    x327 = x185 * x298
    x328 = 40.79713653194731 * x274
    x329 = 241.3591146450082 * x284
    x330 = 241.3591146450082 * x281
    x331 = 40.79713653194731 * x278
    x332 = 107.9390774670807 * x284
    x333 = x207 * x274 + x208 * x60
    x334 = 18.24503411455484 * x333
    x335 = x185 * x300
    x336 = x0 * (x222 + x273)
    x337 = x207 * x277
    x338 = x336 + x337
    x339 = x128 * x164
    x340 = 107.9390774670807 * x338
    x341 = x207 * x281
    x342 = x285 + x341
    x343 = x185 * x342
    x344 = x207 * x287
    x345 = x291 + x344
    x346 = 48.27182292900164 * x345
    x347 = x185 * x346
    x348 = 62.31865543169889 * x342
    x349 = 3.0 * x0 * (2.0 * x285 + x286 + x341)
    x350 = x112 * x345 + x349
    x351 = x205 * x350
    x352 = x0 * (x156 + 3.0 * x231) + x169 * x294
    x353 = (
        x0 * (x41 * (x15 + x26) + x60 * (x44 + x77) + 3.0 * x80 + 3.0 * x82) + x296 * x4
    )
    x354 = x102 * x130
    x355 = x0 * (x199 + 3.0 * x234 + x294) + x169 * x303
    x356 = x201 * x296
    x357 = x0 * (3.0 * x190 + x251 + 2.0 * x301 + 2.0 * x302) + x169 * x308
    x358 = x101 * x137
    x359 = x132 * x176
    x360 = 23.55423775888569 * x165
    x361 = x169 * x313 + x318
    x362 = x201 * x361
    x363 = 40.79713653194731 * x81
    x364 = 18.24503411455484 * x204
    x365 = x10 + x78
    x366 = x0 * (7.0 * x252 + 3.0 * x253 + 4.0 * x312) + x169 * x319
    x367 = x164 * x365
    x368 = 48.27182292900164 * x207
    x369 = x207 * x236
    x370 = 62.31865543169889 * x227
    x371 = 107.9390774670807 * x81
    x372 = x164 * x81
    x373 = 48.27182292900164 * x219
    x374 = 48.27182292900164 * x367
    x375 = 62.31865543169889 * x296
    x376 = 80.45303821500274 * x83
    x377 = 139.3487498116652 * x284
    x378 = x164 * x281
    x379 = 23.55423775888569 * x278
    x380 = x164 * x333
    x381 = 48.27182292900164 * x185
    x382 = 62.31865543169889 * x380
    x383 = x164 * x338
    x384 = x0 * (x166 + 3.0 * x273) + x207 * x333
    x385 = 6.895974704143093 * x185
    x386 = x205 * x296
    x387 = x0 * (x228 + 3.0 * x276 + x333) + x207 * x338
    x388 = x164 * x384
    x389 = x151 * x185
    x390 = x0 * (3.0 * x223 + x290 + 2.0 * x336 + 2.0 * x337) + x207 * x342
    x391 = x207 * x345 + x349
    x392 = x205 * x391
    x393 = x0 * (7.0 * x291 + 3.0 * x292 + 4.0 * x344) + x207 * x350
    x394 = -x106 - R[1]
    x395 = x125 * x394**2
    x396 = x127 + x395
    x397 = x4 * x57
    x398 = x3 * x47
    x399 = 3.0 * x0 * (x398 + 2.0 * x55 + x56)
    x400 = x399 + x4 * x59
    x401 = x0 * (3.0 * x397 + 7.0 * x53 + 4.0 * x58) + x3 * x400
    x402 = x125 * x394
    x403 = x0 * (x140 + x402)
    x404 = x140 * x394
    x405 = x127 + x404
    x406 = x394 * x405
    x407 = x403 + x406
    x408 = x3 * x59 + x399
    x409 = x201 * x408
    x410 = x156 + x188 * x402
    x411 = x0 * (x395 + x410)
    x412 = x107 * x407
    x413 = x411 + x412
    x414 = x0 * (x160 + x42)
    x415 = x145 * x3
    x416 = x398 + x55
    x417 = x0 * (2.0 * x414 + 2.0 * x415 + 3.0 * x45 + x52) + x3 * x416
    x418 = 40.79713653194731 * x407
    x419 = 3.0 * x18
    x420 = x10 + x159
    x421 = x17 * x60 + x3 * x420
    x422 = x414 + x415
    x423 = x0 * (x419 + x421 + 3.0 * x54) + x3 * x422
    x424 = x107 * x405
    x425 = 2.0 * x0 * (2.0 * x403 + x406 + x424) + x107 * x413
    x426 = x201 * x425
    x427 = x0 * (3.0 * x159 + x29) + x3 * x421
    x428 = (
        x0 * (x188 * (x403 + x424) + 3.0 * x411 + 3.0 * x412 + x60 * (x126 + x410))
        + x107 * x425
    )
    x429 = x164 * x396
    x430 = x0 * (x172 + x402)
    x431 = x172 * x394
    x432 = x127 + x431
    x433 = x394 * x432
    x434 = x430 + x433
    x435 = 18.24503411455484 * x434
    x436 = x0 * (x156 + x173 + x404 + x431)
    x437 = x169 * x405
    x438 = x403 + x437
    x439 = x394 * x438
    x440 = x436 + x439
    x441 = 48.27182292900164 * x176
    x442 = x441 * x59
    x443 = 2.0 * x437
    x444 = 3.0 * x403 + x443
    x445 = x0 * (x406 + x434 + x444)
    x446 = x107 * x440
    x447 = x445 + x446
    x448 = x236 * x416
    x449 = 107.9390774670807 * x440
    x450 = 2.0 * x439
    x451 = x107 * x438
    x452 = 4.0 * x436
    x453 = 2.0 * x451 + x452
    x454 = x0 * (x413 + x450 + x453)
    x455 = x107 * x447
    x456 = x454 + x455
    x457 = x441 * x456
    x458 = 107.9390774670807 * x422
    x459 = x0 * (x181 + x424 + x444)
    x460 = 2.0 * x459
    x461 = x436 + x451
    x462 = x188 * x461
    x463 = 3.0 * x445
    x464 = x0 * (x425 + 3.0 * x446 + x460 + x462 + x463) + x107 * x456
    x465 = x201 * x421
    x466 = x164 * x421
    x467 = 18.24503411455484 * x429
    x468 = 2.0 * x169
    x469 = x156 + x402 * x468
    x470 = x0 * (x395 + x469)
    x471 = x169 * x434
    x472 = x470 + x471
    x473 = 23.55423775888569 * x472
    x474 = x397 + x53
    x475 = x176 * x474
    x476 = x169 * x440
    x477 = x445 + x476
    x478 = 62.31865543169889 * x57
    x479 = x176 * x478
    x480 = 80.45303821500274 * x47
    x481 = x169 * x447
    x482 = x454 + x481
    x483 = x176 * x482
    x484 = 139.3487498116652 * x47
    x485 = x169 * x461
    x486 = x0 * (4.0 * x445 + 2.0 * x446 + x460 + 2.0 * x476 + 2.0 * x485)
    x487 = x107 * x482
    x488 = x486 + x487
    x489 = x236 * x488
    x490 = 139.3487498116652 * x145
    x491 = x459 + x485
    x492 = x107 * x491
    x493 = x169 * x438
    x494 = 2.0 * x493
    x495 = x0 * (x239 + x453 + x494)
    x496 = 3.0 * x481 + 2.0 * x495
    x497 = x0 * (5.0 * x454 + 2.0 * x455 + 2.0 * x492 + x496)
    x498 = x107 * x488
    x499 = x497 + x498
    x500 = x164 * x420
    x501 = 40.79713653194731 * x434
    x502 = 107.9390774670807 * x456
    x503 = x164 * x266
    x504 = 40.79713653194731 * x218
    x505 = 62.31865543169889 * x425
    x506 = 80.45303821500274 * x378
    x507 = 23.55423775888569 * x429
    x508 = x10 + x43
    x509 = x12 * x60 + x4 * x508
    x510 = x45 + x51
    x511 = x0 * (3.0 * x21 + x419 + x509) + x4 * x510
    x512 = x169 * x432
    x513 = 2.0 * x0 * (2.0 * x430 + x433 + x512) + x169 * x472
    x514 = x201 * x513
    x515 = x0 * (x450 + x452 + x472 + x494)
    x516 = x169 * x477
    x517 = x515 + x516
    x518 = 48.27182292900164 * x510
    x519 = x176 * x518
    x520 = 62.31865543169889 * x22
    x521 = x169 * x482
    x522 = x486 + x521
    x523 = x176 * x522
    x524 = 107.9390774670807 * x22
    x525 = x169 * x488
    x526 = x497 + x525
    x527 = 48.27182292900164 * x20
    x528 = 107.9390774670807 * x20
    x529 = x0 * (x246 + 5.0 * x459 + x462 + 3.0 * x485)
    x530 = x169 * (x492 + x495)
    x531 = x0 * (6.0 * x486 + 3.0 * x487 + 3.0 * x521 + 2.0 * x529 + 2.0 * x530)
    x532 = x107 * x526 + x531
    x533 = x109 * x532
    x534 = x104 * x16
    x535 = x101 * x526
    x536 = x100 * x16
    x537 = x130 * x536
    x538 = 62.31865543169889 * x537
    x539 = 18.24503411455484 * x537
    x540 = 107.9390774670807 * x510
    x541 = 139.3487498116652 * x22
    x542 = 107.9390774670807 * x210
    x543 = 139.3487498116652 * x537
    x544 = x164 * x20
    x545 = x164 * x528
    x546 = 48.27182292900164 * x537
    x547 = x0 * (x29 + 3.0 * x43) + x4 * x509
    x548 = 6.895974704143093 * x547
    x549 = x430 + x512
    x550 = (
        x0 * (x468 * x549 + 3.0 * x470 + 3.0 * x471 + x60 * (x231 + x469)) + x169 * x513
    )
    x551 = x176 * x550
    x552 = 18.24503411455484 * x509
    x553 = (
        x0
        * (
            x463
            + x468 * (x436 + x493)
            + 3.0 * x476
            + x513
            + x60 * (x235 + 2.0 * x403 + x443 + x549)
        )
        + x169 * x517
    )
    x554 = x176 * x553
    x555 = x0 * (3.0 * x454 + x468 * x491 + x496 + 2.0 * x515 + 2.0 * x516) + x169 * x522
    x556 = 23.55423775888569 * x508
    x557 = x104 * x6
    x558 = x4 * x557
    x559 = x109 * (x169 * x526 + x531)
    x560 = x100 * x6
    x561 = x130 * x560
    x562 = x4 * x561
    x563 = 40.79713653194731 * x562
    x564 = 18.24503411455484 * x561
    x565 = x153 * x564
    x566 = x137 * x560
    x567 = 48.27182292900164 * x509
    x568 = x517 * x561
    x569 = 48.27182292900164 * x561
    x570 = 62.31865543169889 * x561
    x571 = 62.31865543169889 * x509
    x572 = 80.45303821500274 * x508
    x573 = x488 * x570
    x574 = x482 * x561
    x575 = 139.3487498116652 * x4
    x576 = x477 * x561
    x577 = x164 * x434
    x578 = x456 * x569
    x579 = x447 * x561
    x580 = x346 * x561
    x581 = x164 * x508
    x582 = x425 * x564
    x583 = x391 * x564
    x584 = 6.895974704143093 * x561
    x585 = -x111 - R[2]
    x586 = x133 * x585**2
    x587 = x135 + x586
    x588 = x205 * x408
    x589 = x133 * x585
    x590 = x0 * (x152 + x589)
    x591 = x152 * x585
    x592 = x135 + x591
    x593 = x585 * x592
    x594 = x590 + x593
    x595 = x164 * x587
    x596 = 40.79713653194731 * x594
    x597 = x166 + x221 * x589
    x598 = x0 * (x586 + x597)
    x599 = x112 * x594
    x600 = x598 + x599
    x601 = x112 * x592
    x602 = 2.0 * x0 * (2.0 * x590 + x593 + x601) + x112 * x600
    x603 = x205 * x602
    x604 = x164 * x427
    x605 = (
        x0 * (x221 * (x590 + x601) + 3.0 * x598 + 3.0 * x599 + x60 * (x134 + x597))
        + x112 * x602
    )
    x606 = x205 * x400
    x607 = x381 * x59
    x608 = x164 * x594
    x609 = x186 * x416
    x610 = x164 * x422
    x611 = x381 * x422
    x612 = 18.24503411455484 * x466
    x613 = x205 * x421
    x614 = x0 * (x208 + x589)
    x615 = x208 * x585
    x616 = x135 + x615
    x617 = x585 * x616
    x618 = x614 + x617
    x619 = x0 * (x166 + x209 + x591 + x615)
    x620 = x207 * x592
    x621 = x590 + x620
    x622 = x585 * x621
    x623 = x619 + x622
    x624 = 62.31865543169889 * x339
    x625 = 107.9390774670807 * x623
    x626 = 2.0 * x620
    x627 = 3.0 * x590 + x626
    x628 = x0 * (x593 + x618 + x627)
    x629 = x112 * x623
    x630 = x628 + x629
    x631 = 2.0 * x622
    x632 = x112 * x621
    x633 = 4.0 * x619
    x634 = 2.0 * x632 + x633
    x635 = x0 * (x600 + x631 + x634)
    x636 = x112 * x630
    x637 = x635 + x636
    x638 = x0 * (x216 + x601 + x627)
    x639 = 2.0 * x638
    x640 = x619 + x632
    x641 = x221 * x640
    x642 = 3.0 * x628
    x643 = x0 * (x602 + 3.0 * x629 + x639 + x641 + x642) + x112 * x637
    x644 = x164 * x600
    x645 = 62.31865543169889 * x602
    x646 = x145 * x164
    x647 = 40.79713653194731 * x272
    x648 = x164 * x618
    x649 = 241.3591146450082 * x623
    x650 = x164 * x47
    x651 = 241.3591146450082 * x630
    x652 = 107.9390774670807 * x637
    x653 = 2.0 * x207
    x654 = x166 + x589 * x653
    x655 = x0 * (x586 + x654)
    x656 = x207 * x618
    x657 = x655 + x656
    x658 = x185 * x478
    x659 = x207 * x623
    x660 = x628 + x659
    x661 = x207 * x630
    x662 = x635 + x661
    x663 = x185 * x662
    x664 = x207 * x640
    x665 = x0 * (4.0 * x628 + 2.0 * x629 + x639 + 2.0 * x659 + 2.0 * x664)
    x666 = x112 * x662
    x667 = x665 + x666
    x668 = x186 * x667
    x669 = x638 + x664
    x670 = x112 * x669
    x671 = x207 * x621
    x672 = 2.0 * x671
    x673 = x0 * (x281 + x634 + x672)
    x674 = 3.0 * x661 + 2.0 * x673
    x675 = x0 * (5.0 * x635 + 2.0 * x636 + 2.0 * x670 + x674)
    x676 = x112 * x667
    x677 = x675 + x676
    x678 = x164 * x232
    x679 = x164 * x22
    x680 = x164 * x657
    x681 = 241.3591146450082 * x660
    x682 = x207 * x616
    x683 = 2.0 * x0 * (2.0 * x614 + x617 + x682) + x207 * x657
    x684 = x205 * x683
    x685 = x185 * x518
    x686 = x0 * (x631 + x633 + x657 + x672)
    x687 = x207 * x660
    x688 = x686 + x687
    x689 = x207 * x662
    x690 = x665 + x689
    x691 = x185 * x690
    x692 = x207 * x667
    x693 = x675 + x692
    x694 = 48.27182292900164 * x693
    x695 = x0 * (x287 + 5.0 * x638 + x641 + 3.0 * x664)
    x696 = x207 * (x670 + x673)
    x697 = x0 * (6.0 * x665 + 3.0 * x666 + 3.0 * x689 + 2.0 * x695 + 2.0 * x696)
    x698 = x112 * x693 + x697
    x699 = 18.24503411455484 * x698
    x700 = x361 * x564
    x701 = x564 * x602
    x702 = x164 * x509
    x703 = 62.31865543169889 * x581
    x704 = x314 * x561
    x705 = x561 * x657
    x706 = x561 * x660
    x707 = x561 * x662
    x708 = x570 * x667
    x709 = x193 * x561
    x710 = x561 * x690
    x711 = x105 * x560
    x712 = x169 * x711
    x713 = x614 + x682
    x714 = (
        x0 * (x60 * (x273 + x654) + x653 * x713 + 3.0 * x655 + 3.0 * x656) + x207 * x683
    )
    x715 = x185 * x714
    x716 = (
        x0
        * (
            x60 * (x277 + 2.0 * x590 + x626 + x713)
            + x642
            + x653 * (x619 + x671)
            + 3.0 * x659
            + x683
        )
        + x207 * x688
    )
    x717 = x185 * x716
    x718 = x0 * (3.0 * x635 + x653 * x669 + x674 + 2.0 * x686 + 2.0 * x687) + x207 * x690
    x719 = x561 * x714
    x720 = x561 * x716
    x721 = 40.79713653194731 * x4
    x722 = x560 * x718
    x723 = 18.24503411455484 * x711 * (x207 * x693 + x697)

    # 675 item(s)
    result[0, 0, 0] = numpy.sum(
        x102
        * x105
        * (
            x0
            * (
                x41 * (x62 + x63)
                + x60 * (3.0 * x37 + 3.0 * x38 + 6.0 * x50 + x59)
                + 3.0 * x90
                + 4.0 * x91
                + 7.0 * x94
            )
            + x3 * x98
        )
    )
    result[0, 0, 1] = numpy.sum(x108 * x110)
    result[0, 0, 2] = numpy.sum(x110 * x113)
    result[0, 0, 3] = numpy.sum(x124 * x131)
    result[0, 0, 4] = numpy.sum(x108 * x124 * x132)
    result[0, 0, 5] = numpy.sum(x123 * x136 * x139)
    result[0, 0, 6] = numpy.sum(x142 * x150)
    result[0, 0, 7] = numpy.sum(x128 * x132 * x150)
    result[0, 0, 8] = numpy.sum(x136 * x138 * x149 * x151)
    result[0, 0, 9] = numpy.sum(x149 * x155)
    result[0, 0, 10] = numpy.sum(x158 * x163)
    result[0, 0, 11] = numpy.sum(x112 * x142 * x163)
    result[0, 0, 12] = numpy.sum(x129 * x161 * x165)
    result[0, 0, 13] = numpy.sum(x107 * x155 * x162)
    result[0, 0, 14] = numpy.sum(x138 * x162 * x168)
    result[0, 1, 0] = numpy.sum(x170 * x171)
    result[0, 1, 1] = numpy.sum(x175 * x176 * x97)
    result[0, 1, 2] = numpy.sum(x113 * x169 * x178)
    result[0, 1, 3] = numpy.sum(x182 * x183)
    result[0, 1, 4] = numpy.sum(x112 * x183 * x184)
    result[0, 1, 5] = numpy.sum(x136 * x169 * x187)
    result[0, 1, 6] = numpy.sum(x148 * x194)
    result[0, 1, 7] = numpy.sum(x181 * x195 * x196)
    result[0, 1, 8] = numpy.sum(x165 * x174 * x195)
    result[0, 1, 9] = numpy.sum(x169 * x197 * x198)
    result[0, 1, 10] = numpy.sum(x200 * x202)
    result[0, 1, 11] = numpy.sum(x112 * x147 * x194)
    result[0, 1, 12] = numpy.sum(x165 * x181 * x203)
    result[0, 1, 13] = numpy.sum(x147 * x175 * x204)
    result[0, 1, 14] = numpy.sum(x167 * x169 * x206)
    result[0, 2, 0] = numpy.sum(x105 * x171 * x207)
    result[0, 2, 1] = numpy.sum(x108 * x178 * x207)
    result[0, 2, 2] = numpy.sum(x177 * x211)
    result[0, 2, 3] = numpy.sum(x183 * x207 * x212)
    result[0, 2, 4] = numpy.sum(x107 * x122 * x213)
    result[0, 2, 5] = numpy.sum(x187 * x216)
    result[0, 2, 6] = numpy.sum(x148 * x217 * x218)
    result[0, 2, 7] = numpy.sum(x128 * x195 * x219)
    result[0, 2, 8] = numpy.sum(x195 * x216 * x220)
    result[0, 2, 9] = numpy.sum(x197 * x226)
    result[0, 2, 10] = numpy.sum(x157 * x202 * x207)
    result[0, 2, 11] = numpy.sum(x147 * x217 * x219)
    result[0, 2, 12] = numpy.sum(x128 * x203 * x227)
    result[0, 2, 13] = numpy.sum(x147 * x220 * x226)
    result[0, 2, 14] = numpy.sum(x206 * x229)
    result[0, 3, 0] = numpy.sum(x176 * x230 * x233)
    result[0, 3, 1] = numpy.sum(x235 * x237)
    result[0, 3, 2] = numpy.sum(x112 * x232 * x237)
    result[0, 3, 3] = numpy.sum(x240 * x241)
    result[0, 3, 4] = numpy.sum(x112 * x241 * x242)
    result[0, 3, 5] = numpy.sum(x232 * x243 * x87)
    result[0, 3, 6] = numpy.sum(x120 * x248)
    result[0, 3, 7] = numpy.sum(x196 * x239 * x249)
    result[0, 3, 8] = numpy.sum(x165 * x235 * x249)
    result[0, 3, 9] = numpy.sum(x120 * x232 * x250)
    result[0, 3, 10] = numpy.sum(x255 * x256)
    result[0, 3, 11] = numpy.sum(x112 * x118 * x248)
    result[0, 3, 12] = numpy.sum(x118 * x239 * x243)
    result[0, 3, 13] = numpy.sum(x118 * x235 * x250)
    result[0, 3, 14] = numpy.sum(x167 * x233 * x257)
    result[0, 4, 0] = numpy.sum(x230 * x258 * x259)
    result[0, 4, 1] = numpy.sum(x184 * x218 * x89)
    result[0, 4, 2] = numpy.sum(x169 * x213 * x89)
    result[0, 4, 3] = numpy.sum(x207 * x241 * x260)
    result[0, 4, 4] = numpy.sum(x174 * x261 * x87)
    result[0, 4, 5] = numpy.sum(x169 * x216 * x263)
    result[0, 4, 6] = numpy.sum(x120 * x218 * x264)
    result[0, 4, 7] = numpy.sum(x120 * x181 * x261)
    result[0, 4, 8] = numpy.sum(x120 * x174 * x265)
    result[0, 4, 9] = numpy.sum(x169 * x266 * x267)
    result[0, 4, 10] = numpy.sum(x207 * x256 * x268)
    result[0, 4, 11] = numpy.sum(x118 * x192 * x269)
    result[0, 4, 12] = numpy.sum(x118 * x181 * x270)
    result[0, 4, 13] = numpy.sum(x174 * x257 * x266)
    result[0, 4, 14] = numpy.sum(x118 * x271 * x272)
    result[0, 5, 0] = numpy.sum(x139 * x230 * x274)
    result[0, 5, 1] = numpy.sum(x107 * x274 * x275)
    result[0, 5, 2] = numpy.sum(x275 * x277)
    result[0, 5, 3] = numpy.sum(x278 * x279 * x87)
    result[0, 5, 4] = numpy.sum(x107 * x263 * x277)
    result[0, 5, 5] = numpy.sum(x262 * x282)
    result[0, 5, 6] = numpy.sum(x120 * x278 * x283)
    result[0, 5, 7] = numpy.sum(x128 * x249 * x284)
    result[0, 5, 8] = numpy.sum(x220 * x249 * x281)
    result[0, 5, 9] = numpy.sum(x267 * x288)
    result[0, 5, 10] = numpy.sum(x257 * x274 * x289)
    result[0, 5, 11] = numpy.sum(x257 * x277 * x283)
    result[0, 5, 12] = numpy.sum(x257 * x279 * x281)
    result[0, 5, 13] = numpy.sum(x118 * x220 * x288)
    result[0, 5, 14] = numpy.sum(x118 * x139 * x293)
    result[0, 6, 0] = numpy.sum(x295 * x299)
    result[0, 6, 1] = numpy.sum(x300 * x304)
    result[0, 6, 2] = numpy.sum(x196 * x297 * x305)
    result[0, 6, 3] = numpy.sum(x306 * x309)
    result[0, 6, 4] = numpy.sum(x196 * x310 * x85)
    result[0, 6, 5] = numpy.sum(x294 * x311 * x85)
    result[0, 6, 6] = numpy.sum(x315 * x66)
    result[0, 6, 7] = numpy.sum(x112 * x309 * x316)
    result[0, 6, 8] = numpy.sum(x165 * x303 * x316)
    result[0, 6, 9] = numpy.sum(x294 * x317 * x66)
    result[0, 6, 10] = numpy.sum(x320 * x73)
    result[0, 6, 11] = numpy.sum(x112 * x315 * x73)
    result[0, 6, 12] = numpy.sum(x308 * x311 * x73)
    result[0, 6, 13] = numpy.sum(x303 * x317 * x73)
    result[0, 6, 14] = numpy.sum(x167 * x295 * x321)
    result[0, 7, 0] = numpy.sum(x207 * x299 * x322)
    result[0, 7, 1] = numpy.sum(x218 * x235 * x323)
    result[0, 7, 2] = numpy.sum(x232 * x269 * x297)
    result[0, 7, 3] = numpy.sum(x218 * x239 * x324)
    result[0, 7, 4] = numpy.sum(x235 * x261 * x85)
    result[0, 7, 5] = numpy.sum(x232 * x270 * x85)
    result[0, 7, 6] = numpy.sum(x218 * x246 * x316)
    result[0, 7, 7] = numpy.sum(x239 * x261 * x66)
    result[0, 7, 8] = numpy.sum(x235 * x265 * x66)
    result[0, 7, 9] = numpy.sum(x232 * x266 * x325)
    result[0, 7, 10] = numpy.sum(x218 * x254 * x326)
    result[0, 7, 11] = numpy.sum(x246 * x269 * x73)
    result[0, 7, 12] = numpy.sum(x239 * x270 * x73)
    result[0, 7, 13] = numpy.sum(x235 * x266 * x321)
    result[0, 7, 14] = numpy.sum(x232 * x271 * x321)
    result[0, 8, 0] = numpy.sum(x169 * x327 * x328)
    result[0, 8, 1] = numpy.sum(x184 * x278 * x297)
    result[0, 8, 2] = numpy.sum(x272 * x277 * x323)
    result[0, 8, 3] = numpy.sum(x260 * x278 * x85)
    result[0, 8, 4] = numpy.sum(x174 * x329 * x85)
    result[0, 8, 5] = numpy.sum(x272 * x281 * x324)
    result[0, 8, 6] = numpy.sum(x192 * x278 * x316)
    result[0, 8, 7] = numpy.sum(x181 * x329 * x66)
    result[0, 8, 8] = numpy.sum(x174 * x325 * x330)
    result[0, 8, 9] = numpy.sum(x272 * x287 * x316)
    result[0, 8, 10] = numpy.sum(x200 * x331 * x73)
    result[0, 8, 11] = numpy.sum(x192 * x332 * x73)
    result[0, 8, 12] = numpy.sum(x260 * x281 * x321)
    result[0, 8, 13] = numpy.sum(x184 * x287 * x321)
    result[0, 8, 14] = numpy.sum(x272 * x293 * x326)
    result[0, 9, 0] = numpy.sum(x327 * x334)
    result[0, 9, 1] = numpy.sum(x107 * x333 * x335)
    result[0, 9, 2] = numpy.sum(x335 * x338)
    result[0, 9, 3] = numpy.sum(x306 * x333 * x339)
    result[0, 9, 4] = numpy.sum(x220 * x340 * x85)
    result[0, 9, 5] = numpy.sum(x306 * x343)
    result[0, 9, 6] = numpy.sum(x217 * x325 * x333)
    result[0, 9, 7] = numpy.sum(x316 * x338 * x339)
    result[0, 9, 8] = numpy.sum(x107 * x316 * x343)
    result[0, 9, 9] = numpy.sum(x347 * x66)
    result[0, 9, 10] = numpy.sum(x157 * x321 * x334)
    result[0, 9, 11] = numpy.sum(x217 * x321 * x338)
    result[0, 9, 12] = numpy.sum(x128 * x321 * x348)
    result[0, 9, 13] = numpy.sum(x107 * x347 * x73)
    result[0, 9, 14] = numpy.sum(x351 * x73)
    result[0, 10, 0] = numpy.sum(x352 * x353 * x354)
    result[0, 10, 1] = numpy.sum(x355 * x356)
    result[0, 10, 2] = numpy.sum(x112 * x352 * x356)
    result[0, 10, 3] = numpy.sum(x357 * x358 * x83)
    result[0, 10, 4] = numpy.sum(x355 * x359 * x83)
    result[0, 10, 5] = numpy.sum(x352 * x360 * x83)
    result[0, 10, 6] = numpy.sum(x362 * x81)
    result[0, 10, 7] = numpy.sum(x196 * x357 * x363)
    result[0, 10, 8] = numpy.sum(x165 * x355 * x363)
    result[0, 10, 9] = numpy.sum(x352 * x364 * x81)
    result[0, 10, 10] = numpy.sum(x354 * x365 * x366)
    result[0, 10, 11] = numpy.sum(x112 * x362 * x365)
    result[0, 10, 12] = numpy.sum(x357 * x360 * x365)
    result[0, 10, 13] = numpy.sum(x355 * x364 * x365)
    result[0, 10, 14] = numpy.sum(x168 * x352 * x367)
    result[0, 11, 0] = numpy.sum(x218 * x295 * x353)
    result[0, 11, 1] = numpy.sum(x296 * x304 * x368)
    result[0, 11, 2] = numpy.sum(x219 * x296 * x305)
    result[0, 11, 3] = numpy.sum(x308 * x369 * x83)
    result[0, 11, 4] = numpy.sum(x269 * x303 * x83)
    result[0, 11, 5] = numpy.sum(x294 * x370 * x83)
    result[0, 11, 6] = numpy.sum(x207 * x315 * x81)
    result[0, 11, 7] = numpy.sum(x269 * x308 * x81)
    result[0, 11, 8] = numpy.sum(x227 * x303 * x371)
    result[0, 11, 9] = numpy.sum(x225 * x305 * x372)
    result[0, 11, 10] = numpy.sum(x207 * x320 * x365)
    result[0, 11, 11] = numpy.sum(x313 * x365 * x373)
    result[0, 11, 12] = numpy.sum(x308 * x365 * x370)
    result[0, 11, 13] = numpy.sum(x225 * x303 * x374)
    result[0, 11, 14] = numpy.sum(x229 * x295 * x367)
    result[0, 12, 0] = numpy.sum(x233 * x278 * x353)
    result[0, 12, 1] = numpy.sum(x235 * x278 * x375)
    result[0, 12, 2] = numpy.sum(x232 * x284 * x375)
    result[0, 12, 3] = numpy.sum(x239 * x278 * x376)
    result[0, 12, 4] = numpy.sum(x235 * x377 * x83)
    result[0, 12, 5] = numpy.sum(x232 * x376 * x378)
    result[0, 12, 6] = numpy.sum(x247 * x278 * x81)
    result[0, 12, 7] = numpy.sum(x239 * x377 * x81)
    result[0, 12, 8] = numpy.sum(x242 * x281 * x372)
    result[0, 12, 9] = numpy.sum(x232 * x288 * x372)
    result[0, 12, 10] = numpy.sum(x254 * x365 * x379)
    result[0, 12, 11] = numpy.sum(x247 * x284 * x365)
    result[0, 12, 12] = numpy.sum(x240 * x281 * x367)
    result[0, 12, 13] = numpy.sum(x235 * x288 * x367)
    result[0, 12, 14] = numpy.sum(x233 * x293 * x367)
    result[0, 13, 0] = numpy.sum(x272 * x334 * x353)
    result[0, 13, 1] = numpy.sum(x175 * x296 * x380)
    result[0, 13, 2] = numpy.sum(x169 * x296 * x338 * x381)
    result[0, 13, 3] = numpy.sum(x181 * x382 * x83)
    result[0, 13, 4] = numpy.sum(x184 * x383 * x83)
    result[0, 13, 5] = numpy.sum(x272 * x348 * x83)
    result[0, 13, 6] = numpy.sum(x193 * x333 * x372)
    result[0, 13, 7] = numpy.sum(x181 * x371 * x383)
    result[0, 13, 8] = numpy.sum(x184 * x342 * x372)
    result[0, 13, 9] = numpy.sum(x169 * x347 * x81)
    result[0, 13, 10] = numpy.sum(x200 * x334 * x367)
    result[0, 13, 11] = numpy.sum(x192 * x338 * x374)
    result[0, 13, 12] = numpy.sum(x181 * x348 * x367)
    result[0, 13, 13] = numpy.sum(x175 * x345 * x367)
    result[0, 13, 14] = numpy.sum(x169 * x351 * x365)
    result[0, 14, 0] = numpy.sum(x353 * x384 * x385)
    result[0, 14, 1] = numpy.sum(x107 * x384 * x386)
    result[0, 14, 2] = numpy.sum(x386 * x387)
    result[0, 14, 3] = numpy.sum(x129 * x388 * x83)
    result[0, 14, 4] = numpy.sum(x387 * x389 * x83)
    result[0, 14, 5] = numpy.sum(x139 * x390 * x83)
    result[0, 14, 6] = numpy.sum(x142 * x372 * x384)
    result[0, 14, 7] = numpy.sum(x339 * x363 * x387)
    result[0, 14, 8] = numpy.sum(x220 * x363 * x390)
    result[0, 14, 9] = numpy.sum(x392 * x81)
    result[0, 14, 10] = numpy.sum(x158 * x367 * x384)
    result[0, 14, 11] = numpy.sum(x142 * x367 * x387)
    result[0, 14, 12] = numpy.sum(x129 * x367 * x390)
    result[0, 14, 13] = numpy.sum(x107 * x365 * x392)
    result[0, 14, 14] = numpy.sum(x365 * x385 * x393)
    result[1, 0, 0] = numpy.sum(x354 * x396 * x401)
    result[1, 0, 1] = numpy.sum(x407 * x409)
    result[1, 0, 2] = numpy.sum(x112 * x396 * x409)
    result[1, 0, 3] = numpy.sum(x358 * x413 * x417)
    result[1, 0, 4] = numpy.sum(x196 * x417 * x418)
    result[1, 0, 5] = numpy.sum(x360 * x396 * x417)
    result[1, 0, 6] = numpy.sum(x423 * x426)
    result[1, 0, 7] = numpy.sum(x359 * x413 * x423)
    result[1, 0, 8] = numpy.sum(x165 * x418 * x423)
    result[1, 0, 9] = numpy.sum(x364 * x396 * x423)
    result[1, 0, 10] = numpy.sum(x354 * x427 * x428)
    result[1, 0, 11] = numpy.sum(x112 * x426 * x427)
    result[1, 0, 12] = numpy.sum(x360 * x413 * x427)
    result[1, 0, 13] = numpy.sum(x364 * x407 * x427)
    result[1, 0, 14] = numpy.sum(x168 * x427 * x429)
    result[1, 1, 0] = numpy.sum(x176 * x400 * x435)
    result[1, 1, 1] = numpy.sum(x440 * x442)
    result[1, 1, 2] = numpy.sum(x112 * x434 * x442)
    result[1, 1, 3] = numpy.sum(x447 * x448)
    result[1, 1, 4] = numpy.sum(x196 * x416 * x449)
    result[1, 1, 5] = numpy.sum(x311 * x416 * x434)
    result[1, 1, 6] = numpy.sum(x422 * x457)
    result[1, 1, 7] = numpy.sum(x196 * x447 * x458)
    result[1, 1, 8] = numpy.sum(x165 * x440 * x458)
    result[1, 1, 9] = numpy.sum(x317 * x422 * x434)
    result[1, 1, 10] = numpy.sum(x464 * x465)
    result[1, 1, 11] = numpy.sum(x112 * x421 * x457)
    result[1, 1, 12] = numpy.sum(x311 * x421 * x447)
    result[1, 1, 13] = numpy.sum(x317 * x421 * x440)
    result[1, 1, 14] = numpy.sum(x167 * x435 * x466)
    result[1, 2, 0] = numpy.sum(x201 * x207 * x396 * x400)
    result[1, 2, 1] = numpy.sum(x207 * x407 * x442)
    result[1, 2, 2] = numpy.sum(x373 * x396 * x59)
    result[1, 2, 3] = numpy.sum(x207 * x413 * x448)
    result[1, 2, 4] = numpy.sum(x269 * x407 * x416)
    result[1, 2, 5] = numpy.sum(x370 * x396 * x416)
    result[1, 2, 6] = numpy.sum(x207 * x422 * x425 * x441)
    result[1, 2, 7] = numpy.sum(x269 * x413 * x422)
    result[1, 2, 8] = numpy.sum(x227 * x407 * x458)
    result[1, 2, 9] = numpy.sum(x226 * x422 * x429)
    result[1, 2, 10] = numpy.sum(x207 * x428 * x465)
    result[1, 2, 11] = numpy.sum(x373 * x421 * x425)
    result[1, 2, 12] = numpy.sum(x370 * x413 * x421)
    result[1, 2, 13] = numpy.sum(x226 * x407 * x466)
    result[1, 2, 14] = numpy.sum(x229 * x421 * x467)
    result[1, 3, 0] = numpy.sum(x473 * x475)
    result[1, 3, 1] = numpy.sum(x477 * x479)
    result[1, 3, 2] = numpy.sum(x112 * x472 * x479)
    result[1, 3, 3] = numpy.sum(x480 * x483)
    result[1, 3, 4] = numpy.sum(x196 * x477 * x484)
    result[1, 3, 5] = numpy.sum(x243 * x47 * x472)
    result[1, 3, 6] = numpy.sum(x145 * x489)
    result[1, 3, 7] = numpy.sum(x112 * x483 * x490)
    result[1, 3, 8] = numpy.sum(x165 * x477 * x490)
    result[1, 3, 9] = numpy.sum(x145 * x250 * x472)
    result[1, 3, 10] = numpy.sum(x358 * x420 * x499)
    result[1, 3, 11] = numpy.sum(x112 * x420 * x489)
    result[1, 3, 12] = numpy.sum(x243 * x420 * x482)
    result[1, 3, 13] = numpy.sum(x250 * x420 * x477)
    result[1, 3, 14] = numpy.sum(x167 * x473 * x500)
    result[1, 4, 0] = numpy.sum(x207 * x475 * x501)
    result[1, 4, 1] = numpy.sum(x218 * x449 * x57)
    result[1, 4, 2] = numpy.sum(x269 * x434 * x57)
    result[1, 4, 3] = numpy.sum(x218 * x447 * x484)
    result[1, 4, 4] = numpy.sum(x261 * x440 * x47)
    result[1, 4, 5] = numpy.sum(x270 * x434 * x47)
    result[1, 4, 6] = numpy.sum(x145 * x218 * x502)
    result[1, 4, 7] = numpy.sum(x145 * x261 * x447)
    result[1, 4, 8] = numpy.sum(x145 * x265 * x440)
    result[1, 4, 9] = numpy.sum(x145 * x434 * x503)
    result[1, 4, 10] = numpy.sum(x420 * x464 * x504)
    result[1, 4, 11] = numpy.sum(x269 * x420 * x456)
    result[1, 4, 12] = numpy.sum(x270 * x420 * x447)
    result[1, 4, 13] = numpy.sum(x266 * x440 * x500)
    result[1, 4, 14] = numpy.sum(x271 * x434 * x500)
    result[1, 5, 0] = numpy.sum(x379 * x396 * x474)
    result[1, 5, 1] = numpy.sum(x278 * x407 * x478)
    result[1, 5, 2] = numpy.sum(x284 * x396 * x478)
    result[1, 5, 3] = numpy.sum(x278 * x413 * x480)
    result[1, 5, 4] = numpy.sum(x377 * x407 * x47)
    result[1, 5, 5] = numpy.sum(x378 * x396 * x480)
    result[1, 5, 6] = numpy.sum(x145 * x278 * x505)
    result[1, 5, 7] = numpy.sum(x145 * x377 * x413)
    result[1, 5, 8] = numpy.sum(x378 * x407 * x490)
    result[1, 5, 9] = numpy.sum(x145 * x288 * x429)
    result[1, 5, 10] = numpy.sum(x379 * x420 * x428)
    result[1, 5, 11] = numpy.sum(x284 * x420 * x505)
    result[1, 5, 12] = numpy.sum(x413 * x420 * x506)
    result[1, 5, 13] = numpy.sum(x288 * x407 * x500)
    result[1, 5, 14] = numpy.sum(x293 * x420 * x507)
    result[1, 6, 0] = numpy.sum(x511 * x514)
    result[1, 6, 1] = numpy.sum(x517 * x519)
    result[1, 6, 2] = numpy.sum(x112 * x513 * x519)
    result[1, 6, 3] = numpy.sum(x520 * x523)
    result[1, 6, 4] = numpy.sum(x196 * x517 * x524)
    result[1, 6, 5] = numpy.sum(x22 * x311 * x513)
    result[1, 6, 6] = numpy.sum(x176 * x526 * x527)
    result[1, 6, 7] = numpy.sum(x112 * x523 * x528)
    result[1, 6, 8] = numpy.sum(x165 * x517 * x528)
    result[1, 6, 9] = numpy.sum(x20 * x317 * x513)
    result[1, 6, 10] = numpy.sum(x533 * x534)
    result[1, 6, 11] = numpy.sum(48.27182292900164 * x112 * x534 * x535)
    result[1, 6, 12] = numpy.sum(x136 * x522 * x538)
    result[1, 6, 13] = numpy.sum(x198 * x517 * x537)
    result[1, 6, 14] = numpy.sum(x167 * x513 * x539)
    result[1, 7, 0] = numpy.sum(x472 * x504 * x511)
    result[1, 7, 1] = numpy.sum(x218 * x477 * x540)
    result[1, 7, 2] = numpy.sum(x269 * x472 * x510)
    result[1, 7, 3] = numpy.sum(x207 * x483 * x541)
    result[1, 7, 4] = numpy.sum(x22 * x261 * x477)
    result[1, 7, 5] = numpy.sum(x22 * x270 * x472)
    result[1, 7, 6] = numpy.sum(x218 * x488 * x528)
    result[1, 7, 7] = numpy.sum(x20 * x261 * x482)
    result[1, 7, 8] = numpy.sum(x20 * x265 * x477)
    result[1, 7, 9] = numpy.sum(x20 * x472 * x503)
    result[1, 7, 10] = numpy.sum(40.79713653194731 * x259 * x499 * x534)
    result[1, 7, 11] = numpy.sum(x488 * x537 * x542)
    result[1, 7, 12] = numpy.sum(x216 * x482 * x543)
    result[1, 7, 13] = numpy.sum(x266 * x477 * x537)
    result[1, 7, 14] = numpy.sum(x271 * x472 * x537)
    result[1, 8, 0] = numpy.sum(x331 * x434 * x511)
    result[1, 8, 1] = numpy.sum(x278 * x449 * x510)
    result[1, 8, 2] = numpy.sum(x332 * x434 * x510)
    result[1, 8, 3] = numpy.sum(x278 * x447 * x541)
    result[1, 8, 4] = numpy.sum(x22 * x329 * x440)
    result[1, 8, 5] = numpy.sum(x378 * x434 * x541)
    result[1, 8, 6] = numpy.sum(x278 * x456 * x528)
    result[1, 8, 7] = numpy.sum(x20 * x329 * x447)
    result[1, 8, 8] = numpy.sum(x330 * x440 * x544)
    result[1, 8, 9] = numpy.sum(x287 * x434 * x545)
    result[1, 8, 10] = numpy.sum(x328 * x464 * x537)
    result[1, 8, 11] = numpy.sum(x277 * x502 * x537)
    result[1, 8, 12] = numpy.sum(x281 * x447 * x543)
    result[1, 8, 13] = numpy.sum(x287 * x449 * x537)
    result[1, 8, 14] = numpy.sum(x293 * x501 * x537)
    result[1, 9, 0] = numpy.sum(x334 * x429 * x511)
    result[1, 9, 1] = numpy.sum(x380 * x407 * x518)
    result[1, 9, 2] = numpy.sum(x383 * x396 * x518)
    result[1, 9, 3] = numpy.sum(x22 * x382 * x413)
    result[1, 9, 4] = numpy.sum(x383 * x407 * x524)
    result[1, 9, 5] = numpy.sum(x22 * x348 * x429)
    result[1, 9, 6] = numpy.sum(x380 * x425 * x527)
    result[1, 9, 7] = numpy.sum(x383 * x413 * x528)
    result[1, 9, 8] = numpy.sum(x342 * x407 * x545)
    result[1, 9, 9] = numpy.sum(x345 * x429 * x527)
    result[1, 9, 10] = numpy.sum(x334 * x428 * x537)
    result[1, 9, 11] = numpy.sum(x338 * x425 * x546)
    result[1, 9, 12] = numpy.sum(x348 * x413 * x537)
    result[1, 9, 13] = numpy.sum(x346 * x407 * x537)
    result[1, 9, 14] = numpy.sum(x350 * x396 * x539)
    result[1, 10, 0] = numpy.sum(x548 * x551)
    result[1, 10, 1] = numpy.sum(x552 * x554)
    result[1, 10, 2] = numpy.sum(x112 * x551 * x552)
    result[1, 10, 3] = numpy.sum(x176 * x555 * x556)
    result[1, 10, 4] = numpy.sum(x132 * x508 * x554)
    result[1, 10, 5] = numpy.sum(x360 * x508 * x550)
    result[1, 10, 6] = numpy.sum(x558 * x559)
    result[1, 10, 7] = numpy.sum(x101 * x132 * x555 * x558)
    result[1, 10, 8] = numpy.sum(x136 * x553 * x563)
    result[1, 10, 9] = numpy.sum(x4 * x550 * x565)
    result[1, 10, 10] = numpy.sum(
        x102
        * x557
        * (
            x0
            * (
                x188 * (x529 + x530)
                + 7.0 * x497
                + 3.0 * x498
                + 4.0 * x525
                + x60 * (3.0 * x169 * x491 + x313 + 3.0 * x492 + 6.0 * x495)
            )
            + x169 * x532
        )
    )
    result[1, 10, 11] = numpy.sum(x112 * x557 * x559)
    result[1, 10, 12] = numpy.sum(x136 * x555 * x566)
    result[1, 10, 13] = numpy.sum(x553 * x565)
    result[1, 10, 14] = numpy.sum(x168 * x550 * x561)
    result[1, 11, 0] = numpy.sum(x207 * x514 * x547)
    result[1, 11, 1] = numpy.sum(x218 * x517 * x567)
    result[1, 11, 2] = numpy.sum(x373 * x509 * x513)
    result[1, 11, 3] = numpy.sum(x369 * x508 * x522)
    result[1, 11, 4] = numpy.sum(x269 * x508 * x517)
    result[1, 11, 5] = numpy.sum(x370 * x508 * x513)
    result[1, 11, 6] = numpy.sum(x368 * x535 * x558)
    result[1, 11, 7] = numpy.sum(x522 * x542 * x562)
    result[1, 11, 8] = numpy.sum(107.9390774670807 * x216 * x4 * x568)
    result[1, 11, 9] = numpy.sum(x226 * x513 * x562)
    result[1, 11, 10] = numpy.sum(x207 * x533 * x557)
    result[1, 11, 11] = numpy.sum(x210 * x526 * x569)
    result[1, 11, 12] = numpy.sum(x216 * x522 * x570)
    result[1, 11, 13] = numpy.sum(x226 * x568)
    result[1, 11, 14] = numpy.sum(x229 * x513 * x564)
    result[1, 12, 0] = numpy.sum(x379 * x472 * x547)
    result[1, 12, 1] = numpy.sum(x278 * x477 * x571)
    result[1, 12, 2] = numpy.sum(x284 * x472 * x571)
    result[1, 12, 3] = numpy.sum(x278 * x482 * x572)
    result[1, 12, 4] = numpy.sum(x377 * x477 * x508)
    result[1, 12, 5] = numpy.sum(x472 * x506 * x508)
    result[1, 12, 6] = numpy.sum(x274 * x4 * x573)
    result[1, 12, 7] = numpy.sum(x277 * x574 * x575)
    result[1, 12, 8] = numpy.sum(x281 * x575 * x576)
    result[1, 12, 9] = numpy.sum(x288 * x472 * x562)
    result[1, 12, 10] = numpy.sum(x274 * x499 * x566)
    result[1, 12, 11] = numpy.sum(x277 * x573)
    result[1, 12, 12] = numpy.sum(x282 * x574)
    result[1, 12, 13] = numpy.sum(x288 * x576)
    result[1, 12, 14] = numpy.sum(x293 * x473 * x561)
    result[1, 13, 0] = numpy.sum(x334 * x547 * x577)
    result[1, 13, 1] = numpy.sum(x380 * x440 * x567)
    result[1, 13, 2] = numpy.sum(x383 * x434 * x567)
    result[1, 13, 3] = numpy.sum(x382 * x447 * x508)
    result[1, 13, 4] = numpy.sum(x383 * x449 * x508)
    result[1, 13, 5] = numpy.sum(x348 * x508 * x577)
    result[1, 13, 6] = numpy.sum(x333 * x4 * x578)
    result[1, 13, 7] = numpy.sum(x340 * x4 * x579)
    result[1, 13, 8] = numpy.sum(x342 * x449 * x562)
    result[1, 13, 9] = numpy.sum(x4 * x434 * x580)
    result[1, 13, 10] = numpy.sum(x334 * x464 * x561)
    result[1, 13, 11] = numpy.sum(x338 * x578)
    result[1, 13, 12] = numpy.sum(x348 * x579)
    result[1, 13, 13] = numpy.sum(x440 * x580)
    result[1, 13, 14] = numpy.sum(x350 * x435 * x561)
    result[1, 14, 0] = numpy.sum(x388 * x396 * x548)
    result[1, 14, 1] = numpy.sum(x388 * x407 * x552)
    result[1, 14, 2] = numpy.sum(x387 * x467 * x509)
    result[1, 14, 3] = numpy.sum(x388 * x413 * x556)
    result[1, 14, 4] = numpy.sum(x387 * x418 * x581)
    result[1, 14, 5] = numpy.sum(x390 * x507 * x508)
    result[1, 14, 6] = numpy.sum(x384 * x4 * x582)
    result[1, 14, 7] = numpy.sum(x387 * x413 * x563)
    result[1, 14, 8] = numpy.sum(x390 * x418 * x562)
    result[1, 14, 9] = numpy.sum(x396 * x4 * x583)
    result[1, 14, 10] = numpy.sum(x384 * x428 * x584)
    result[1, 14, 11] = numpy.sum(x387 * x582)
    result[1, 14, 12] = numpy.sum(x390 * x413 * x566)
    result[1, 14, 13] = numpy.sum(x407 * x583)
    result[1, 14, 14] = numpy.sum(x393 * x396 * x584)
    result[2, 0, 0] = numpy.sum(x385 * x401 * x587)
    result[2, 0, 1] = numpy.sum(x107 * x587 * x588)
    result[2, 0, 2] = numpy.sum(x588 * x594)
    result[2, 0, 3] = numpy.sum(x129 * x417 * x595)
    result[2, 0, 4] = numpy.sum(x220 * x417 * x596)
    result[2, 0, 5] = numpy.sum(x139 * x417 * x600)
    result[2, 0, 6] = numpy.sum(x142 * x423 * x595)
    result[2, 0, 7] = numpy.sum(x339 * x423 * x596)
    result[2, 0, 8] = numpy.sum(x389 * x423 * x600)
    result[2, 0, 9] = numpy.sum(x423 * x603)
    result[2, 0, 10] = numpy.sum(x158 * x427 * x595)
    result[2, 0, 11] = numpy.sum(x142 * x594 * x604)
    result[2, 0, 12] = numpy.sum(x129 * x600 * x604)
    result[2, 0, 13] = numpy.sum(x107 * x427 * x603)
    result[2, 0, 14] = numpy.sum(x385 * x427 * x605)
    result[2, 1, 0] = numpy.sum(x169 * x587 * x606)
    result[2, 1, 1] = numpy.sum(x175 * x59 * x595)
    result[2, 1, 2] = numpy.sum(x169 * x594 * x607)
    result[2, 1, 3] = numpy.sum(x182 * x416 * x595)
    result[2, 1, 4] = numpy.sum(x184 * x416 * x608)
    result[2, 1, 5] = numpy.sum(x169 * x600 * x609)
    result[2, 1, 6] = numpy.sum(x193 * x422 * x595)
    result[2, 1, 7] = numpy.sum(x181 * x458 * x608)
    result[2, 1, 8] = numpy.sum(x184 * x600 * x610)
    result[2, 1, 9] = numpy.sum(x169 * x602 * x611)
    result[2, 1, 10] = numpy.sum(x200 * x587 * x612)
    result[2, 1, 11] = numpy.sum(x193 * x466 * x594)
    result[2, 1, 12] = numpy.sum(x182 * x466 * x600)
    result[2, 1, 13] = numpy.sum(x175 * x466 * x602)
    result[2, 1, 14] = numpy.sum(x169 * x605 * x613)
    result[2, 2, 0] = numpy.sum(x606 * x618)
    result[2, 2, 1] = numpy.sum(x107 * x607 * x618)
    result[2, 2, 2] = numpy.sum(x607 * x623)
    result[2, 2, 3] = numpy.sum(x416 * x618 * x624)
    result[2, 2, 4] = numpy.sum(x220 * x416 * x625)
    result[2, 2, 5] = numpy.sum(x609 * x630)
    result[2, 2, 6] = numpy.sum(x217 * x610 * x618)
    result[2, 2, 7] = numpy.sum(x339 * x458 * x623)
    result[2, 2, 8] = numpy.sum(x220 * x458 * x630)
    result[2, 2, 9] = numpy.sum(x611 * x637)
    result[2, 2, 10] = numpy.sum(x157 * x612 * x618)
    result[2, 2, 11] = numpy.sum(x217 * x466 * x623)
    result[2, 2, 12] = numpy.sum(x421 * x624 * x630)
    result[2, 2, 13] = numpy.sum(x107 * x381 * x421 * x637)
    result[2, 2, 14] = numpy.sum(x613 * x643)
    result[2, 3, 0] = numpy.sum(x233 * x474 * x595)
    result[2, 3, 1] = numpy.sum(x235 * x478 * x595)
    result[2, 3, 2] = numpy.sum(x232 * x478 * x608)
    result[2, 3, 3] = numpy.sum(x240 * x47 * x595)
    result[2, 3, 4] = numpy.sum(x242 * x47 * x608)
    result[2, 3, 5] = numpy.sum(x232 * x480 * x644)
    result[2, 3, 6] = numpy.sum(x145 * x247 * x595)
    result[2, 3, 7] = numpy.sum(x239 * x490 * x608)
    result[2, 3, 8] = numpy.sum(x145 * x242 * x644)
    result[2, 3, 9] = numpy.sum(x232 * x645 * x646)
    result[2, 3, 10] = numpy.sum(x255 * x500 * x587)
    result[2, 3, 11] = numpy.sum(x247 * x500 * x594)
    result[2, 3, 12] = numpy.sum(x240 * x500 * x600)
    result[2, 3, 13] = numpy.sum(x235 * x500 * x645)
    result[2, 3, 14] = numpy.sum(x233 * x500 * x605)
    result[2, 4, 0] = numpy.sum(x474 * x618 * x647)
    result[2, 4, 1] = numpy.sum(x184 * x57 * x648)
    result[2, 4, 2] = numpy.sum(x272 * x57 * x625)
    result[2, 4, 3] = numpy.sum(x260 * x47 * x648)
    result[2, 4, 4] = numpy.sum(x174 * x649 * x650)
    result[2, 4, 5] = numpy.sum(x272 * x484 * x630)
    result[2, 4, 6] = numpy.sum(x264 * x618 * x646)
    result[2, 4, 7] = numpy.sum(x181 * x646 * x649)
    result[2, 4, 8] = numpy.sum(x174 * x646 * x651)
    result[2, 4, 9] = numpy.sum(x145 * x272 * x652)
    result[2, 4, 10] = numpy.sum(x268 * x500 * x618)
    result[2, 4, 11] = numpy.sum(x264 * x500 * x623)
    result[2, 4, 12] = numpy.sum(x260 * x500 * x630)
    result[2, 4, 13] = numpy.sum(x184 * x500 * x637)
    result[2, 4, 14] = numpy.sum(x420 * x643 * x647)
    result[2, 5, 0] = numpy.sum(x139 * x474 * x657)
    result[2, 5, 1] = numpy.sum(x107 * x657 * x658)
    result[2, 5, 2] = numpy.sum(x658 * x660)
    result[2, 5, 3] = numpy.sum(x279 * x650 * x657)
    result[2, 5, 4] = numpy.sum(x220 * x484 * x660)
    result[2, 5, 5] = numpy.sum(x480 * x663)
    result[2, 5, 6] = numpy.sum(x283 * x646 * x657)
    result[2, 5, 7] = numpy.sum(x339 * x490 * x660)
    result[2, 5, 8] = numpy.sum(x107 * x490 * x663)
    result[2, 5, 9] = numpy.sum(x145 * x668)
    result[2, 5, 10] = numpy.sum(x289 * x500 * x657)
    result[2, 5, 11] = numpy.sum(x283 * x500 * x660)
    result[2, 5, 12] = numpy.sum(x279 * x500 * x662)
    result[2, 5, 13] = numpy.sum(x107 * x420 * x668)
    result[2, 5, 14] = numpy.sum(x139 * x420 * x677)
    result[2, 6, 0] = numpy.sum(x295 * x511 * x595)
    result[2, 6, 1] = numpy.sum(x303 * x518 * x595)
    result[2, 6, 2] = numpy.sum(x305 * x510 * x608)
    result[2, 6, 3] = numpy.sum(x308 * x520 * x595)
    result[2, 6, 4] = numpy.sum(x303 * x524 * x608)
    result[2, 6, 5] = numpy.sum(x294 * x520 * x644)
    result[2, 6, 6] = numpy.sum(x314 * x544 * x587)
    result[2, 6, 7] = numpy.sum(x308 * x545 * x594)
    result[2, 6, 8] = numpy.sum(x303 * x545 * x600)
    result[2, 6, 9] = numpy.sum(x305 * x544 * x602)
    result[2, 6, 10] = numpy.sum(x319 * x539 * x587)
    result[2, 6, 11] = numpy.sum(x314 * x537 * x594)
    result[2, 6, 12] = numpy.sum(x308 * x538 * x600)
    result[2, 6, 13] = numpy.sum(x303 * x546 * x602)
    result[2, 6, 14] = numpy.sum(x295 * x537 * x605)
    result[2, 7, 0] = numpy.sum(x322 * x511 * x648)
    result[2, 7, 1] = numpy.sum(x235 * x540 * x648)
    result[2, 7, 2] = numpy.sum(x540 * x623 * x678)
    result[2, 7, 3] = numpy.sum(x239 * x541 * x648)
    result[2, 7, 4] = numpy.sum(x235 * x649 * x679)
    result[2, 7, 5] = numpy.sum(x541 * x630 * x678)
    result[2, 7, 6] = numpy.sum(x246 * x545 * x618)
    result[2, 7, 7] = numpy.sum(x239 * x544 * x649)
    result[2, 7, 8] = numpy.sum(x235 * x544 * x651)
    result[2, 7, 9] = numpy.sum(x232 * x545 * x637)
    result[2, 7, 10] = numpy.sum(40.79713653194731 * x254 * x537 * x618)
    result[2, 7, 11] = numpy.sum(x246 * x537 * x625)
    result[2, 7, 12] = numpy.sum(x239 * x543 * x630)
    result[2, 7, 13] = numpy.sum(x235 * x537 * x652)
    result[2, 7, 14] = numpy.sum(x322 * x537 * x643)
    result[2, 8, 0] = numpy.sum(x511 * x647 * x657)
    result[2, 8, 1] = numpy.sum(x184 * x510 * x680)
    result[2, 8, 2] = numpy.sum(x272 * x540 * x660)
    result[2, 8, 3] = numpy.sum(x260 * x657 * x679)
    result[2, 8, 4] = numpy.sum(x174 * x679 * x681)
    result[2, 8, 5] = numpy.sum(x169 * x541 * x663)
    result[2, 8, 6] = numpy.sum(x192 * x545 * x657)
    result[2, 8, 7] = numpy.sum(x181 * x544 * x681)
    result[2, 8, 8] = numpy.sum(241.3591146450082 * x174 * x544 * x662)
    result[2, 8, 9] = numpy.sum(x272 * x528 * x667)
    result[2, 8, 10] = numpy.sum(x268 * x537 * x657)
    result[2, 8, 11] = numpy.sum(x264 * x537 * x660)
    result[2, 8, 12] = numpy.sum(x260 * x537 * x662)
    result[2, 8, 13] = numpy.sum(x184 * x537 * x667)
    result[2, 8, 14] = numpy.sum(x258 * x536 * x677)
    result[2, 9, 0] = numpy.sum(x511 * x684)
    result[2, 9, 1] = numpy.sum(x107 * x683 * x685)
    result[2, 9, 2] = numpy.sum(x685 * x688)
    result[2, 9, 3] = numpy.sum(x22 * x624 * x683)
    result[2, 9, 4] = numpy.sum(x220 * x524 * x688)
    result[2, 9, 5] = numpy.sum(x520 * x691)
    result[2, 9, 6] = numpy.sum(x217 * x544 * x683)
    result[2, 9, 7] = numpy.sum(x339 * x528 * x688)
    result[2, 9, 8] = numpy.sum(x107 * x528 * x691)
    result[2, 9, 9] = numpy.sum(x185 * x527 * x693)
    result[2, 9, 10] = numpy.sum(x157 * x539 * x683)
    result[2, 9, 11] = numpy.sum(x217 * x537 * x688)
    result[2, 9, 12] = numpy.sum(x212 * x537 * x690)
    result[2, 9, 13] = numpy.sum(x108 * x536 * x694)
    result[2, 9, 14] = numpy.sum(x105 * x536 * x699)
    result[2, 10, 0] = numpy.sum(x352 * x548 * x595)
    result[2, 10, 1] = numpy.sum(x355 * x552 * x595)
    result[2, 10, 2] = numpy.sum(x352 * x552 * x608)
    result[2, 10, 3] = numpy.sum(x357 * x556 * x595)
    result[2, 10, 4] = numpy.sum(x355 * x581 * x596)
    result[2, 10, 5] = numpy.sum(x352 * x556 * x644)
    result[2, 10, 6] = numpy.sum(x4 * x587 * x700)
    result[2, 10, 7] = numpy.sum(x357 * x562 * x596)
    result[2, 10, 8] = numpy.sum(x355 * x563 * x600)
    result[2, 10, 9] = numpy.sum(x352 * x4 * x701)
    result[2, 10, 10] = numpy.sum(x366 * x584 * x587)
    result[2, 10, 11] = numpy.sum(x594 * x700)
    result[2, 10, 12] = numpy.sum(x357 * x566 * x600)
    result[2, 10, 13] = numpy.sum(x355 * x701)
    result[2, 10, 14] = numpy.sum(x352 * x584 * x605)
    result[2, 11, 0] = numpy.sum(x295 * x547 * x648)
    result[2, 11, 1] = numpy.sum(x303 * x567 * x648)
    result[2, 11, 2] = numpy.sum(x305 * x623 * x702)
    result[2, 11, 3] = numpy.sum(x308 * x618 * x703)
    result[2, 11, 4] = numpy.sum(x310 * x581 * x623)
    result[2, 11, 5] = numpy.sum(x294 * x630 * x703)
    result[2, 11, 6] = numpy.sum(x4 * x618 * x704)
    result[2, 11, 7] = numpy.sum(x308 * x562 * x625)
    result[2, 11, 8] = numpy.sum(x310 * x562 * x630)
    result[2, 11, 9] = numpy.sum(x305 * x562 * x637)
    result[2, 11, 10] = numpy.sum(x319 * x564 * x618)
    result[2, 11, 11] = numpy.sum(x623 * x704)
    result[2, 11, 12] = numpy.sum(x308 * x570 * x630)
    result[2, 11, 13] = numpy.sum(x303 * x569 * x637)
    result[2, 11, 14] = numpy.sum(x295 * x561 * x643)
    result[2, 12, 0] = numpy.sum(x233 * x547 * x680)
    result[2, 12, 1] = numpy.sum(x235 * x571 * x680)
    result[2, 12, 2] = numpy.sum(x571 * x660 * x678)
    result[2, 12, 3] = numpy.sum(x240 * x581 * x657)
    result[2, 12, 4] = numpy.sum(x242 * x581 * x660)
    result[2, 12, 5] = numpy.sum(x572 * x662 * x678)
    result[2, 12, 6] = numpy.sum(x247 * x4 * x705)
    result[2, 12, 7] = numpy.sum(x239 * x575 * x706)
    result[2, 12, 8] = numpy.sum(x242 * x4 * x707)
    result[2, 12, 9] = numpy.sum(x232 * x4 * x708)
    result[2, 12, 10] = numpy.sum(x255 * x705)
    result[2, 12, 11] = numpy.sum(x247 * x706)
    result[2, 12, 12] = numpy.sum(x240 * x707)
    result[2, 12, 13] = numpy.sum(x235 * x708)
    result[2, 12, 14] = numpy.sum(x233 * x561 * x677)
    result[2, 13, 0] = numpy.sum(x169 * x547 * x684)
    result[2, 13, 1] = numpy.sum(x175 * x683 * x702)
    result[2, 13, 2] = numpy.sum(x272 * x567 * x688)
    result[2, 13, 3] = numpy.sum(x182 * x581 * x683)
    result[2, 13, 4] = numpy.sum(x184 * x581 * x688)
    result[2, 13, 5] = numpy.sum(x169 * x186 * x508 * x690)
    result[2, 13, 6] = numpy.sum(x4 * x683 * x709)
    result[2, 13, 7] = numpy.sum(107.9390774670807 * x181 * x562 * x688)
    result[2, 13, 8] = numpy.sum(x184 * x4 * x710)
    result[2, 13, 9] = numpy.sum(x4 * x694 * x712)
    result[2, 13, 10] = numpy.sum(x200 * x564 * x683)
    result[2, 13, 11] = numpy.sum(x688 * x709)
    result[2, 13, 12] = numpy.sum(x182 * x710)
    result[2, 13, 13] = numpy.sum(x175 * x561 * x693)
    result[2, 13, 14] = numpy.sum(x699 * x712)
    result[2, 14, 0] = numpy.sum(x548 * x715)
    result[2, 14, 1] = numpy.sum(x107 * x552 * x715)
    result[2, 14, 2] = numpy.sum(x552 * x717)
    result[2, 14, 3] = numpy.sum(x129 * x581 * x714)
    result[2, 14, 4] = numpy.sum(x151 * x508 * x717)
    result[2, 14, 5] = numpy.sum(x185 * x556 * x718)
    result[2, 14, 6] = numpy.sum(x142 * x4 * x719)
    result[2, 14, 7] = numpy.sum(x128 * x720 * x721)
    result[2, 14, 8] = numpy.sum(x108 * x721 * x722)
    result[2, 14, 9] = numpy.sum(x4 * x723)
    result[2, 14, 10] = numpy.sum(x158 * x719)
    result[2, 14, 11] = numpy.sum(x142 * x720)
    result[2, 14, 12] = numpy.sum(x131 * x722)
    result[2, 14, 13] = numpy.sum(x107 * x723)
    result[2, 14, 14] = numpy.sum(
        6.895974704143093
        * x711
        * (
            x0
            * (
                x221 * (x695 + x696)
                + x60 * (3.0 * x207 * x669 + x345 + 3.0 * x670 + 6.0 * x673)
                + 7.0 * x675
                + 3.0 * x676
                + 4.0 * x692
            )
            + x207 * x698
        )
    )
    return result


diag_quadrupole3d = {
    (0, 0): diag_quadrupole3d_00,
    (0, 1): diag_quadrupole3d_01,
    (0, 2): diag_quadrupole3d_02,
    (0, 3): diag_quadrupole3d_03,
    (0, 4): diag_quadrupole3d_04,
    (1, 0): diag_quadrupole3d_10,
    (1, 1): diag_quadrupole3d_11,
    (1, 2): diag_quadrupole3d_12,
    (1, 3): diag_quadrupole3d_13,
    (1, 4): diag_quadrupole3d_14,
    (2, 0): diag_quadrupole3d_20,
    (2, 1): diag_quadrupole3d_21,
    (2, 2): diag_quadrupole3d_22,
    (2, 3): diag_quadrupole3d_23,
    (2, 4): diag_quadrupole3d_24,
    (3, 0): diag_quadrupole3d_30,
    (3, 1): diag_quadrupole3d_31,
    (3, 2): diag_quadrupole3d_32,
    (3, 3): diag_quadrupole3d_33,
    (3, 4): diag_quadrupole3d_34,
    (4, 0): diag_quadrupole3d_40,
    (4, 1): diag_quadrupole3d_41,
    (4, 2): diag_quadrupole3d_42,
    (4, 3): diag_quadrupole3d_43,
    (4, 4): diag_quadrupole3d_44,
}
